{"version":3,"sources":["charts.js","pip-webui-charts-html.js","bar/bar_chart.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpfile":"pip-webui-charts.js","sourcesContent":["/**\r\n * @file Registration of chart WebUI controls\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* global angular */\r\n\r\n(function (angular) {\r\n    'use strict';\r\n\r\n    angular.module('pipCharts', [\r\n        'pipStaticCharts'\r\n    ]);\r\n\r\n})(window.angular);\r\n\r\n","(function(module) {\ntry {\n  module = angular.module('pipCharts.Templates');\n} catch (e) {\n  module = angular.module('pipCharts.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('bar/bar_chart.html',\n    '<div class=\"bar-chart flex-auto layout-column\">\\n' +\n    '    <svg class=\"flex-auto\"></svg>\\n' +\n    '</div>\\n' +\n    '\\n' +\n    '<div class=\"static-chart-legend\">\\n' +\n    '    <div class=\"legend-title\" ng-repeat=\"item in barChart.legend\">\\n' +\n    '        <span class=\"bullet\" ng-style=\"{\\'background-color\\': item.color}\"></span>\\n' +\n    '        <span>{{:: item.label}}</span>\\n' +\n    '    </div>\\n' +\n    '</div>');\n}]);\n})();\n","(function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc module\r\n     * @name pipStaticCharts\r\n     *\r\n     * @description\r\n     * Bar chart on top of Rickshaw charts\r\n     */\r\n    angular.module('pipStaticCharts', [])\r\n        .directive('pipBarChart', pipBarChart);\r\n\r\n    function pipBarChart() {\r\n        return {\r\n            restrict: 'E',\r\n            scope: {\r\n                series: '=pipSeries'\r\n            },\r\n            bindToController: true,\r\n            controllerAs: 'barChart',\r\n            templateUrl: 'bar/bar_chart.html',\r\n            controller: ['$element', '$scope', '$timeout', '$interval', '$mdColorPalette', function ($element, $scope, $timeout, $interval, $mdColorPalette) {\r\n                var vm = this;\r\n                var chart = null;\r\n                var chartElem = null;\r\n                var setLabelPosition = _.debounce(setLabelPositionUnwrap, 150);\r\n                var colors = _.map($mdColorPalette, function (palette, color) {\r\n                    return color;\r\n                });\r\n\r\n                console.log('colors', colors);\r\n\r\n                vm.data = vm.series || [];\r\n\r\n                if ((vm.series || []).length > colors.length) {\r\n                    vm.data = vm.series.slice(0, 9);\r\n                }\r\n\r\n                //colors = _.sample(colors, colors.length);\r\n\r\n                // Sets colors of items\r\n                generateParameterColor();\r\n\r\n                console.log('vm.data', vm.data);\r\n\r\n                // sets legend params\r\n                vm.legend = vm.data;\r\n\r\n                d3.scale.paletteColors = function () {\r\n                    return d3.scale.ordinal().range(colors.map(materialColorToRgba));\r\n                };\r\n\r\n                $scope.$watch('barChart.series', function (updatedSeries) {\r\n                    vm.data = updatedSeries || [];\r\n\r\n                    generateParameterColor();\r\n\r\n                    if (chart) {\r\n                        chartElem.datum(vm.data).call(chart);\r\n                        chart.update();\r\n                        intervalUpdate(chart.update, 10);\r\n                    }\r\n                });\r\n\r\n\r\n                /**\r\n                 * Instantiate chart\r\n                 */\r\n                nv.addGraph(function () {\r\n                    console.log('here');\r\n\r\n                    chart = nv.models.discreteBarChart()\r\n                        .margin({top: 10, right: 0, bottom: 30, left: 0})\r\n                        .x(function (d) { return d.label; })\r\n                        .y(function (d) { return d.value; })\r\n                        .showValues(true)\r\n                        .showXAxis(true)\r\n                        .showYAxis(false)\r\n                        .valueFormat(d3.format('d'))\r\n                        .color(d3.scale.paletteColors().range());\r\n\r\n                    chart.tooltip.enabled(false);\r\n                    chart.noData('No data for this moment...');\r\n\r\n                    chartElem = d3.select($element.get(0))\r\n                        .select('.bar-chart svg')\r\n                        .datum(vm.data)\r\n                        .call(chart);\r\n\r\n                    nv.utils.windowResize(chart.update);\r\n\r\n                    intervalUpdate(chart.update, 10);\r\n\r\n                    return chart;\r\n                }, function () {\r\n                    chart.dispatch.on('beforeUpdate', function () {\r\n                        $timeout(setLabelPosition, 100);    // dirty hack. Replace by callback\r\n                    });\r\n\r\n                    $timeout(setLabelPosition, 100);        // dirty hack. Replace by callback\r\n                });\r\n\r\n                /**\r\n                 * Aligns value label according to parent container size.\r\n                 * @return {void}\r\n                 */\r\n                function setLabelPositionUnwrap() {\r\n                    var labels = d3.selectAll('.nv-bar text')[0];\r\n                    var chartBars = d3.selectAll('.nv-bar')[0];\r\n\r\n                    chartBars.forEach(function (item, index) {\r\n                        var barSize = item.getBBox();\r\n\r\n                        d3.select(labels[index]).attr('dy', barSize.height / 2 + 6);   // 6px = magic float to align text\r\n                    });\r\n                }\r\n\r\n                /**\r\n                 * Converts palette color name into RGBA color representation.\r\n                 * Should by replaced by palette for charts.\r\n                 *\r\n                 * @param {string} color    Name of color from AM palette\r\n                 * @returns {string} RGBa format\r\n                 */\r\n                function materialColorToRgba(color) {\r\n                    return 'rgba(' + $mdColorPalette[color][500].value[0] + ','\r\n                        + $mdColorPalette[color][500].value[1] + ','\r\n                        + $mdColorPalette[color][500].value[2] + ','\r\n                        + ($mdColorPalette[color][500].value[3] || 1) + ')';\r\n                }\r\n\r\n                /**\r\n                 * Temp huck for demo\r\n                 * Dirty way to overcome async in charts\r\n                 */\r\n                function intervalUpdate(cb, times) {\r\n                    var counter = 0;\r\n\r\n                    var intervalID = $interval(function () {\r\n                        if (counter <= times) {\r\n                            cb();\r\n                            counter++;\r\n                        } else {\r\n                            $interval.cancel(intervalID);\r\n                        }\r\n                    }, 200);\r\n                }\r\n\r\n                /**\r\n                 * Helpful method\r\n                 * @private\r\n                 */\r\n                function generateParameterColor() {\r\n                    vm.data.forEach(function (item, index) {\r\n                        item.color = materialColorToRgba(colors[index]);\r\n                    });\r\n                }\r\n            }]\r\n        };\r\n    }\r\n})();"]}