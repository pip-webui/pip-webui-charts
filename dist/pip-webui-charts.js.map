{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/bar/bar_chart.ts","src/charts.ts","src/legend/interactive_legend.ts","src/line/line_chart.ts","src/pie/pie_chart.ts","temp/pip-webui-charts-html.min.js"],"names":[],"mappings":"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","file":"pip-webui-charts.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function () {\n    'use strict';\n\n    /**\n     * @ngdoc module\n     * @name pipBarCharts\n     *\n     * @description\n     * Bar chart on top of Rickshaw charts\n     */\n    angular.module('pipBarCharts', [])\n        .directive('pipBarChart', pipBarChart);\n\n    function pipBarChart() {\n        return {\n            restrict: 'E',\n            scope: {\n                series: '=pipSeries',\n                xTickFormat: '=pipXTickFormat',\n                yTickFormat: '=pipYTickFormat',\n                interactiveLegend: '=pipInterLegend'\n            },\n            bindToController: true,\n            controllerAs: 'barChart',\n            templateUrl: 'bar/bar_chart.html',\n            controller: function ($element, $scope, $timeout, $interval, $mdColorPalette) {\n                let vm = this;\n                let chart = null;\n                let chartElem = null;\n                let colors = _.map($mdColorPalette, function (palette, color) {\n                    return color;\n                });\n                colors = _.filter(colors, function(color){\n                    return _.isObject($mdColorPalette[color]) && _.isObject($mdColorPalette[color][500] && _.isArray($mdColorPalette[color][500].value));\n                });                \n                let height = 270;\n\n                vm.data = prepareData(vm.series) || [];\n                vm.legend = _.clone(vm.series);\n                \n                if ((vm.series || []).length > colors.length) {\n                    vm.data = vm.series.slice(0, 9);\n                }\n\n                generateParameterColor();\n\n                (<any>d3.scale).paletteColors = function () {\n                    return d3.scale.ordinal().range(colors.map(materialColorToRgba));\n                };\n\n                $scope.$watch('barChart.series', function (updatedSeries) {\n                    vm.data = prepareData(updatedSeries);\n                    vm.legend = _.clone(vm.series);\n                    generateParameterColor();\n\n                    if (chart) {\n                        chartElem.datum(vm.data).call(chart);\n                        configBarWidthAndLabel();\n                        drawEmptyState();\n                    }\n                });\n\n                $scope.$watch('barChart.legend', function(updatedLegend) {\n                    vm.data = prepareData(updatedLegend);\n                    vm.legend = updatedLegend;\n\n                    if (chart) {\n                        chartElem.datum(vm.data).call(chart);\n                        configBarWidthAndLabel();\n                        drawEmptyState();\n                    }\n                }, true);\n\n                function prepareData(data) {\n                    let result = [];\n                    _.each(data, (seria) => {\n                        if (!seria.disabled && seria.values) result.push(seria);\n                    });\n\n                    return _.cloneDeep(result);\n                }\n\n                /**\n                 * Instantiate chart\n                 */\n                nv.addGraph(function () {\n                    chart = nv.models.discreteBarChart()\n                        .margin({top: 10, right: 0, bottom: 10, left: 50})\n                        .x(function (d) { return d.label || d.key || d.x; })\n                        .y(function (d) { return d.value; })\n                        .showValues(true)\n                        .staggerLabels(true) \n                        .showXAxis(true)\n                        .showYAxis(true)\n                        .valueFormat(<any>d3.format('d'))\n                        .duration(0)\n                        .height(height)\n                        .color(function(d) {\n                            return vm.data[d.series].color || materialColorToRgba(colors[d.series]);\n                        });\n\n                    chart.tooltip.enabled(false);\n                    chart.noData('There is no data right now...');\n\n                    chart.yAxis\n                        .tickFormat(function (d) {\n                            return vm.yTickFormat ? vm.yTickFormat(d) : d;\n                        });\n\n                    chart.xAxis\n                        .tickFormat(function (d) {\n                            return vm.xTickFormat ? vm.xTickFormat(d) : d;\n                        });\n\n                    chartElem = d3.select($element.get(0))\n                        .select('.bar-chart svg')\n                        .datum(vm.data)\n                        .style('height', '285px')\n                        .call(chart);\n\n                    nv.utils.windowResize(() => {\n                        chart.update();\n                         configBarWidthAndLabel(0);\n                         drawEmptyState();\n                    });\n\n                    return chart;\n                }, function () {\n\n                    $timeout(configBarWidthAndLabel, 0);\n                    drawEmptyState();\n                });\n\n                function drawEmptyState() {\n                    if ($element.find('.nv-noData').length === 0) {\n                        d3.select($element.find('.empty-state')[0]).remove();\n                    } else {\n                        let g = chartElem.append('g').classed('empty-state', true),\n                            width = $element.find('.nvd3-svg').innerWidth(),\n                            margin = width * 0.1;\n\n                        g.append('g')\n                            .style('fill', 'rgba(0, 0, 0, 0.08)')\n                            .append('rect')\n                            .attr('height', height - 10)\n                            .attr('width', 38);\n\n                        g.append('g')\n                            .attr('transform', 'translate(42, 60)')\n                            .style('fill', 'rgba(0, 0, 0, 0.08)')\n                            .append('rect')\n                            .attr('height', 200)\n                            .attr('width', 38);\n\n                        g.append('g')\n                            .attr('transform', 'translate(84, 160)')\n                            .style('fill', 'rgba(0, 0, 0, 0.08)')\n                            .append('rect')\n                            .attr('height', 100)\n                            .attr('width', 38);\n\n                        g.attr('transform', 'translate(' + (50 + margin) + ', 0), ' + 'scale(' + ((width - 2*margin) / 126) + ', 1)' );\n                    }\n                }\n\n                /**\n                 * Aligns value label according to parent container size.\n                 * @return {void}\n                 */\n                function configBarWidthAndLabel(timeout: number = 1000) {\n                    var labels = $element.find('.nv-bar text'),\n                        chartBars = $element.find('.nv-bar'),\n                        parentHeight = (<any>$element.find('.nvd3-svg')[0]).getBBox().height;\n\n                    d3.select($element.find('.bar-chart')[0]).classed('visible', true);\n\n                    chartBars.each(function (index, item) {\n                        var barHeight = Number(d3.select(<any>item).select('rect').attr('height')),\n                            barWidth = Number(d3.select(<any>item).select('rect').attr('width')),\n                            element = d3.select(<any>item),\n                            x = d3.transform(element.attr('transform')).translate[0],\n                            y = d3.transform(element.attr('transform')).translate[1];\n\n                        element\n                            .attr('transform', 'translate(' + Number(x + index * (barWidth + 15)) + ', ' + (height - 20) + ')')\n                            .select('rect').attr('height', 0);\n\n                        element\n                            .transition()\n                            .duration(timeout)\n                            .attr('transform', 'translate(' + Number(x + index * (barWidth + 15)) + ', ' + y + ')')\n                            .select('rect').attr('height', barHeight);\n\n                        d3.select(labels[index])\n                            .attr('dy', barHeight / 2 + 10)\n                            .attr('x', barWidth / 2);\n                    });\n                }\n\n                /**\n                 * Converts palette color name into RGBA color representation.\n                 * Should by replaced by palette for charts.\n                 *\n                 * @param {string} color    Name of color from AM palette\n                 * @returns {string} RGBa format\n                 */\n                function materialColorToRgba(color) {\n                    return 'rgba(' + $mdColorPalette[color][500].value[0] + ','\n                        + $mdColorPalette[color][500].value[1] + ','\n                        + $mdColorPalette[color][500].value[2] + ','\n                        + ($mdColorPalette[color][500].value[3] || 1) + ')';\n                }\n\n                /**\n                 * Helpful method\n                 * @private\n                 */\n                function getMaterialColor(index) {\n                    if (!colors || colors.length < 1) return null;\n\n                    if (index >= colors.length) {\n                        index = 0;\n                    }\n\n                    return materialColorToRgba(colors[index]);\n                } \n                /**\n                 * Helpful method\n                 * @private\n                 */\n                function generateParameterColor() {\n                    if (!vm.data) return;\n\n                    vm.data.forEach(function (item, index) {\n                        if (item.values[0]) {\n                            item.values[0].color = item.values[0].color || getMaterialColor(index);\n                            item.color = item.values[0].color;\n                        }\n                    });\n                }\n            }\n        };\n    }\n})();","﻿/**\n * @file Registration of chart WebUI controls\n * @copyright Digital Living Software Corp. 2014-2016\n */\n\n/* global angular */\n\n(function () {\n    'use strict';\n\n    angular.module('pipCharts', [\n        'pipBarCharts',\n        'pipLineCharts',\n        'pipPieCharts',\n        'pipChartLegends',\n        'pipCharts.Templates'\n    ]);\n\n})();\n\n","(function () {\n    'use strict';\n\n    /**\n     * @ngdoc module\n     * @name pipLegends\n     *\n     * @description\n     * Legend of charts\n     */\n    angular.module('pipChartLegends', [])\n        .directive('pipChartLegend', pipChartLegend);\n\n    function pipChartLegend() {\n        return {\n            restrict: 'E',\n            scope: {\n                series: '=pipSeries',\n                interactive: '=pipInteractive'\n            },\n            templateUrl: 'legend/interactive_legend.html',\n            controller: function ($element, $scope, $timeout, $mdColorPalette) {\n                var colors = _.map($mdColorPalette, function (palette) {\n                    return palette[500].hex;\n                });\n                colors = _.filter(colors, function(color){\n                    return color !== undefined && color !== null;\n                });  \n                function colorCheckboxes() {\n                    var checkboxContainers = $($element).find('md-checkbox .md-container');\n\n                    checkboxContainers.each(function (index, item) {\n                        if (index >= $scope.series.length) {\n                            return \n                        }\n                        $(item)\n                            .css('color', $scope.series[index].color || colors[index])\n                            .find('.md-icon')\n                            .css('background-color', $scope.series[index].color || colors[index]);\n                    });\n                }\n\n                function animate() {\n                    var legendTitles = $($element).find('.chart-legend-item');\n\n                    legendTitles.each(function (index, item) {\n                        $timeout(function () {\n                            $(item).addClass('visible');\n                        }, 200 * index);\n                    });\n                }\n                \n                function prepareSeries() {\n                    if (!$scope.series) return;\n\n                    $scope.series.forEach(function (item, index) {\n                        item.color = item.color || (item.values && item.values[0] && item.values[0].color ? item.values[0].color : colors[index]);\n                        item.disabled = item.disabled || false;\n                    });   \n                }\n\n                $scope.$watch('series', function () {\n                    $timeout(function () {\n                        animate();\n                        colorCheckboxes();\n                    }, 0);\n                    prepareSeries();\n                }, true);\n\n                $scope.$watch('interactive', function (newValue, oldValue) {\n                    if (newValue == true && newValue != oldValue) {\n                        $timeout(colorCheckboxes, 0);\n                    }\n                });\n\n                $timeout(function () {\n                    animate();\n                    colorCheckboxes();\n                }, 0);\n                prepareSeries();\n            }\n        };\n    }\n})();","(function () {\n    'use strict';\n\n    /**\n     * @ngdoc module\n     * @name pipLineCharts\n     *\n     * @description\n     * Line chart on top of Rickshaw charts\n     */\n    angular.module('pipLineCharts', [])\n        .directive('pipLineChart', pipLineChart);\n\n    function pipLineChart() {\n        return {\n            restrict: 'E',\n            scope: {\n                series: '=pipSeries',\n                showYAxis: '=pipYAxis',\n                showXAxis: '=pipXAxis',\n                xFormat: '=pipXFormat',\n                xTickFormat: '=pipXTickFormat',\n                yTickFormat: '=pipYTickFormat',\n                xTickValues: '=pipXTickValues',\n                dynamic: '=pipDynamic',\n                fixedHeight: '@pipDiagramHeight',\n                dynamicHeight: '@pipDynamicHeight',\n                minHeight: '@pipMinHeight',\n                maxHeight: '@pipMaxHeight',\n                interactiveLegend: '=pipInterLegend'\n            },\n            bindToController: true,\n            controllerAs: 'lineChart',\n            templateUrl: 'line/line_chart.html',\n            controller: function ($element, $scope, $timeout, $interval, $mdColorPalette) {\n                var vm        = this;\n                var chart     = null;\n                var chartElem = null;\n                var setZoom = null;\n                var updateZoomOptions = null;\n                var fixedHeight = vm.fixedHeight || 270;\n                var dynamicHeight = vm.dynamicHeight || false;\n                var minHeight = vm.minHeight || fixedHeight;\n                var maxHeight = vm.maxHeight || fixedHeight;\n\n                var filteredColor = _.filter($mdColorPalette, function(palette, color){\n                    return _.isObject(color) && _.isObject(color[500] && _.isArray(color[500].value));\n                });\n                var colors = _.map(filteredColor, function (palette, color) {\n                    return color;\n                });\n                colors = _.filter(colors, function(color){\n                    return _.isObject($mdColorPalette[color]) && _.isObject($mdColorPalette[color][500] && _.isArray($mdColorPalette[color][500].value));\n                });\n                vm.data = prepareData(vm.series) || [];\n                vm.legend = _.clone(vm.series);\n                vm.sourceEvents = [];\n                \n                vm.isVisibleX = function () {\n                    return vm.showXAxis == undefined ? true : vm.showXAxis; \n                };\n\n                vm.isVisibleY = function () {\n                    return vm.showYAxis == undefined ? true : vm.showYAxis;\n                };\n\n                vm.zoomIn = function () {\n                    if (setZoom) {\n                        setZoom('in');\n                    }\n                };\n\n                vm.zoomOut = function () {\n                    if (setZoom) {\n                        setZoom('out');\n                    }\n                };\n                \n                if (vm.series && vm.series.length > colors.length) {\n                    vm.data = vm.series.slice(0, 9);\n                }\n\n                // Sets colors of items\n                generateParameterColor();\n\n                (<any>d3.scale).paletteColors = function () {\n                    return d3.scale.ordinal().range(colors.map(materialColorToRgba));\n                };\n\n                $scope.$watch('lineChart.series', function (updatedSeries) {\n                    vm.data = prepareData(updatedSeries);\n                    vm.legend = _.clone(vm.series);\n\n                    generateParameterColor();\n\n                    if (chart) {\n                         chart.xAxis\n                            .tickValues(vm.xTickValues && _.isArray(vm.xTickValues) && vm.xTickValues.length > 2 ? \n                                d3.range(vm.xTickValues[0], vm.xTickValues[1], vm.xTickValues[2]) : null);\n\n                        chartElem.datum(vm.data || []).call(chart);\n                        drawEmptyState();\n                        \n                        if (updateZoomOptions) updateZoomOptions(vm.data);\n                    }\n                }, true);\n\n                $scope.$watch('lineChart.legend', function(updatedLegend) {\n                    vm.data = prepareData(updatedLegend);\n                    vm.legend = updatedLegend;\n\n                    if (chart) {\n                        chartElem.datum(vm.data || []).call(chart);\n                        drawEmptyState();\n\n                        if (updateZoomOptions) updateZoomOptions(vm.data);\n                    }\n                }, true);\n\n                $scope.$on('$destroy', () => {\n                   setTimeout(()=> {d3.selectAll('.nvtooltip').style('opacity', 0); }, 800)\n                });\n\n                function prepareData(data) {\n                    let result = [];\n                    _.each(data, (seria) => {\n                        if (!seria.disabled && seria.values) result.push(seria);\n                    });\n\n                    return _.cloneDeep(result);\n                }\n\n                var getHeight = () => {\n                    if (dynamicHeight) {\n                        const heigth = Math.min(Math.max(minHeight, $element.parent().innerHeight()), maxHeight);\n                        return heigth;\n                    } else {\n                        return fixedHeight;\n                    }\n                };\n\n                /**\n                 * Instantiate chart\n                 */\n                nv.addGraph(() => {\n                    chart = nv.models.lineChart()\n                        .margin({ top: 20, right: 20, bottom: 30, left: 30 })\n                        .x(function (d) {\n                            return (d !== undefined && d.x !== undefined) ? (vm.xFormat ? vm.xFormat(d.x) : d.x) : d;\n                        })\n                        .y(function (d) {\n                            return (d !== undefined && d.value !== undefined) ? d.value : d;\n                        })\n                        .height(getHeight() - 50)\n                        .useInteractiveGuideline(true)\n                        .showXAxis(true)\n                        .showYAxis(true)\n                        .showLegend(false)\n                        .color(function(d) {\n                            return d.color || (<any>d3.scale).paletteColors().range();\n                        });\n\n                    chart.tooltip.enabled(false);\n                    chart.noData('There is no data right now...');\n\n                    chart.yAxis\n                        .tickFormat(function (d) {\n                            return vm.yTickFormat ? vm.yTickFormat(d) : d;\n                        });\n\n                    chart.xAxis\n                        .tickFormat(function (d) {\n                            return vm.xTickFormat ? vm.xTickFormat(d) : d;\n                        })\n                        .tickValues(vm.xTickValues && _.isArray(vm.xTickValues) && vm.xTickValues.length > 2 ? \n                                d3.range(vm.xTickValues[0], vm.xTickValues[1], vm.xTickValues[2]) : null);\n\n                    chartElem = d3.select($element.get(0)).select('.line-chart svg');\n                    chartElem.datum(vm.data || []).style('height', (getHeight() - 50) + 'px').call(chart);\n                    // Handle touches for correcting tooltip position\n                    $('.line-chart svg').on('touchstart touchmove', (e) => { \n                        setTimeout(() => {\n                            let tooltip = $('.nvtooltip'),\n                                tooltipW = tooltip.innerWidth(),\n                                bodyWidth = $('body').innerWidth(),\n                                x = e.originalEvent['touches'][0]['pageX'],\n                                y = e.originalEvent['touches'][0]['pageY'];\n\n                            tooltip.css('transform', 'translate(' \n                                + (x + tooltipW >= bodyWidth ? (x - tooltipW) : x) + ',' \n                                + y + ')');\n                            tooltip.css('left', 0); \n                            tooltip.css('top', 0);\n                        }); \n                    });\n\n                    $('.line-chart svg').on('touchstart touchend', (e) => { \n                        let removeTooltip = () => {\n                            let tooltip = $('.nvtooltip');\n                            tooltip.css('opacity', 0);\n                        };\n\n                        removeTooltip();\n\n                        setTimeout(() => {\n                            removeTooltip();\n                        }, 500); \n                    });\n\n                    if (vm.dynamic) {\n                        addZoom(chart, chartElem);\n                    }\n\n                    nv.utils.windowResize(() => { onResize(); });\n\n                    $scope.$on('pipMainResized', () => { onResize(); });\n\n                    return chart;\n                }, () => {\n                    drawEmptyState();\n                });\n\n                function onResize() {\n                    chart.height(getHeight() - 50);\n                    chartElem.style('height', (getHeight() - 50) + 'px');\n                    chart.update();\n                    drawEmptyState();\n                }\n\n                function drawEmptyState() {\n                    if (!$element.find('text.nv-noData').get(0)) {\n                        d3.select($element.find('.empty-state')[0]).remove();\n                    } else {\n                        let containerWidth = $element.find('.line-chart').innerWidth(),\n                            containerHeight = $element.find('.line-chart').innerHeight();\n                        \n                        if ($element.find('.empty-state').get(0)) {\n                            chartElem\n                                .select('image')\n                                .attr('transform', 'scale(' + (containerWidth / 1151) + ',' + (containerHeight / 216) + ')');\n                        } else {\n                            chartElem\n                                .append(\"defs\")\n                                .append(\"pattern\")\n                                .attr(\"height\", 1)\n                                .attr(\"width\", 1)\n                                .attr(\"x\", \"0\")\n                                .attr(\"y\", \"0\")\n                                .attr(\"id\", \"bg\")\n                                .append(\"image\")\n                                .attr('x', 17)\n                                .attr('y', 0)\n                                .attr('height', \"216px\")\n                                .attr('width', \"1151px\")\n                                .attr('transform', 'scale(' + (containerWidth / 1151) + ',' + (containerHeight / 216) + ')')\n                                .attr(\"xlink:href\", \"images/line_chart_empty_state.svg\");\n\n                            chartElem\n                                .append('rect')\n                                .classed('empty-state', true)\n                                .attr('height', \"100%\")\n                                .attr('width', \"100%\")\n                                .attr('fill', 'url(#bg)');\n                        }\n                    }\n                }\n\n                function updateScroll(domains, boundary) {\n                    var bDiff = boundary[1] - boundary[0],\n                        domDiff = domains[1] - domains[0],\n                        isEqual = (domains[1] - domains[0])/bDiff === 1;\n\n                    $($element[0]).find('.visual-scroll')\n                        .css('opacity', function () {\n                            return isEqual ? 0 : 1;\n                        });\n\n                    if (isEqual) return;\n                    \n                    $($element[0]).find('.scrolled-block')\n                        .css('left', function () {\n                            return domains[0]/bDiff * 100 + '%';\n                        })\n                        .css('width', function () {\n                            return domDiff/bDiff * 100 + '%';\n                        });\n                }\n\n                function addZoom(chart, svg) {\n                    // scaleExtent\n                    var scaleExtent = 4;\n\n                    // parameters\n                    var yAxis       = null;\n                    var xAxis       = null;\n                    var xDomain     = null;\n                    var yDomain     = null;\n                    var redraw      = null;\n                    var svg         = svg;\n\n                    // scales\n                    var xScale = null;\n                    var yScale = null;\n\n                    // min/max boundaries\n                    var x_boundary = null;\n                    var y_boundary = null;\n\n                    // create d3 zoom handler\n                    var d3zoom = d3.behavior.zoom();\n                    var prevXDomain = null;\n                    var prevScale = null;\n                    var prevTranslate = null;\n\n                    setData(chart);\n\n                    function setData(newChart) {\n                        // parameters\n                        yAxis       = newChart.yAxis;\n                        xAxis       = newChart.xAxis;\n                        xDomain     = newChart.xDomain || xAxis.scale().domain;\n                        yDomain     = newChart.yDomain || yAxis.scale().domain;\n                        redraw      = newChart.update;\n\n                        // scales\n                        xScale = xAxis.scale();\n                        yScale = yAxis.scale();\n\n                        // min/max boundaries\n                        x_boundary = xAxis.scale().domain().slice();\n                        y_boundary = yAxis.scale().domain().slice();\n\n                        // create d3 zoom handler\n                        prevXDomain = x_boundary;\n                        prevScale = d3zoom.scale();\n                        prevTranslate = d3zoom.translate();\n\n                        // ensure nice axis\n                        xScale.nice();\n                        yScale.nice();\n                    }\n\n                    // fix domain\n                    function fixDomain(domain, boundary, scale, translate) {\n                        if (domain[0] < boundary[0]) {\n                            domain[0] = boundary[0];\n                            if (prevXDomain[0] !== boundary[0] || scale !== prevScale) {\n                                domain[1] += (boundary[0] - domain[0]);\n                            } else {\n                                domain[1] = prevXDomain[1];\n                                translate = _.clone(prevTranslate);\n                            }\n\n                        }\n                        if (domain[1] > boundary[1]) {\n                            domain[1] = boundary[1];\n                            if (prevXDomain[1] !== boundary[1] || scale !== prevScale) {\n                                domain[0] -= (domain[1] - boundary[1]);\n                            } else {\n                                domain[0] = prevXDomain[0];\n                                translate = _.clone(prevTranslate);\n                            }\n                        }\n\n                        d3zoom.translate(translate);\n                        prevXDomain = _.clone(domain);\n                        prevScale = _.clone(scale);\n                        prevTranslate = _.clone(translate);\n                        return domain;\n                    }\n\n                    function updateChart() {\n                        d3zoom.scale(1);\n                        d3zoom.translate([0,0]);\n                        xScale.domain(x_boundary);\n                        d3zoom.x(xScale).y(yScale);\n                        svg.call(d3zoom);\n                    }\n\n                    // zoom event handler\n                    function zoomed() {\n                        // Switch off vertical zooming temporary\n                        // yDomain(yScale.domain());\n\n                        if ((<any>d3.event).scale === 1) {\n                            unzoomed();\n                            updateChart();\n                        } else {\n                            xDomain(fixDomain(xScale.domain(), x_boundary, (<any>d3.event).scale, (<any>d3.event).translate));\n                            redraw();\n                        }\n\n                        updateScroll(xScale.domain(), x_boundary);\n                    }\n\n                    //\n                    setZoom = function(which) {\n                        var center0 = [svg[0][0].getBBox().width / 2, svg[0][0].getBBox().height / 2];\n                        var translate0 = d3zoom.translate(), coordinates0 = coordinates(center0);\n\n                        if (which === 'in') {\n                            if (prevScale < scaleExtent) d3zoom.scale(prevScale + 0.2);\n                        } else {\n                            if (prevScale > 1) d3zoom.scale(prevScale - 0.2);\n                        }\n\n                        var center1 = point(coordinates0);\n                        d3zoom.translate([translate0[0] + center0[0] - center1[0], translate0[1] + center0[1] - center1[1]]);\n\n                        d3zoom.event(svg);\n                    };\n\n                    function step(which) {\n                        var translate = d3zoom.translate();\n\n                        if (which === 'right') {\n                            translate[0] -= 20;\n                        } else {\n                            translate[0] += 20;\n                        }\n\n                        d3zoom.translate(translate);\n                        d3zoom.event(svg);\n                    }\n\n                    function coordinates(point) {\n                        var scale = d3zoom.scale(), translate = d3zoom.translate();\n                        return [(point[0] - translate[0]) / scale, (point[1] - translate[1]) / scale];\n                    }\n\n                    function point(coordinates) {\n                        var scale = d3zoom.scale(), translate = d3zoom.translate();\n                        return [coordinates[0] * scale + translate[0], coordinates[1] * scale + translate[1]];\n                    }\n\n                    function keypress() {\n                        switch((<any>d3.event).keyCode) {\n                            case 39: step('right'); break;\n                            case 37: step('left'); break;\n                            case 107: setZoom('in'); break;\n                            case 109: setZoom('out');\n                        }\n                    }\n\n                    // zoom event handler\n                    function unzoomed() {\n                        xDomain(x_boundary);\n                        redraw();\n                        d3zoom.scale(1);\n                        d3zoom.translate([0,0]);\n                        prevScale = 1;\n                        prevTranslate = [0,0];\n                    }\n\n                    // initialize wrapper\n                    d3zoom.x(xScale)\n                        .y(yScale)\n                        .scaleExtent([1, scaleExtent])\n                        .on('zoom', zoomed);\n\n                    // add handler\n                    svg.call(d3zoom).on('dblclick.zoom', unzoomed);\n                    $($element.get(0)).addClass('dynamic');\n\n                    // add keyboard handlers\n                    svg\n                        .attr('focusable', false)\n                        .style('outline', 'none')\n                        .on('keydown', keypress)\n                        .on('focus', function () {});\n\n                    var getXMinMax = function(data) {\n                        var maxVal, minVal = null;\n\n                        for(var i=0;i<data.length;i++) {\n                            if (!data[i].disabled) {\n                                var tempMinVal = d3.max(data[i].values, function(d: any) { return vm.xFormat ? vm.xFormat(d.x) : d.x;} );\n                                var tempMaxVal = d3.min(data[i].values, function(d: any) { return vm.xFormat ? vm.xFormat(d.x) : d.x;} );\n                                minVal = (!minVal || tempMinVal < minVal) ? tempMinVal : minVal;\n                                maxVal = (!maxVal || tempMaxVal > maxVal) ? tempMaxVal : maxVal;\n                            }\n                        }\n                        return [maxVal, minVal];\n                    };\n\n                    updateZoomOptions = function(data) {\n                        yAxis = chart.yAxis;\n                        xAxis = chart.xAxis;\n\n                        xScale = xAxis.scale();\n                        yScale = yAxis.scale();\n\n                        x_boundary = getXMinMax(data);\n\n                        if (d3zoom.scale() === 1) {\n                            d3zoom.x(xScale).y(yScale);\n                            svg.call(d3zoom);\n                            d3zoom.event(svg);\n                        }\n\n                        updateScroll(xScale.domain(), x_boundary);\n                    }\n                }\n\n                /**\n                 * Converts palette color name into RGBA color representation.\n                 * Should by replaced by palette for charts.\n                 *\n                 * @param {string} color    Name of color from AM palette\n                 * @returns {string} RGBa format\n                 */\n                function materialColorToRgba(color) {\n                    return 'rgba(' + $mdColorPalette[color][500].value[0] + ','\n                        + $mdColorPalette[color][500].value[1] + ','\n                        + $mdColorPalette[color][500].value[2] + ','\n                        + ($mdColorPalette[color][500].value[3] || 1) + ')';\n                }\n\n                /**\n                 * Helpful method\n                 * @private\n                 */\n                function getMaterialColor(index) {\n                    if (!colors || colors.length < 1) return null;\n\n                    if (index >= colors.length) {\n                        index = 0;\n                    }\n\n                    return materialColorToRgba(colors[index]);\n                }                \n                /**\n                 * Helpful method\n                 * @private\n                 */\n                function generateParameterColor() {\n                    if (!vm.data) return;\n\n                    vm.data.forEach(function (item, index) {\n                        item.color = item.color || getMaterialColor(index);\n                    });\n                }\n            }\n        };\n    }\n})();","(function () {\n    'use strict';\n\n    /**\n     * @ngdoc module\n     * @name pipPieCharts\n     *\n     * @description\n     * Line chart on top of Rickshaw charts\n     */\n    angular.module('pipPieCharts', [])\n        .directive('pipPieChart', pipPieChart);\n\n    function pipPieChart() {\n        return {\n            restrict: 'E',\n            scope: {\n                series: '=pipSeries',\n                donut: '=pipDonut',\n                legend: '=pipShowLegend',\n                total: '=pipShowTotal',\n                size: '=pipPieSize',\n                centered: '=pipCentered'\n            },\n            bindToController: true,\n            controllerAs: 'pieChart',\n            templateUrl: 'pie/pie_chart.html',\n            controller: function ($element, $scope, $timeout, $interval, $mdColorPalette) {\n                var vm               = this;\n                var chart            = null;\n                var titleElem        = null;\n                var chartElem        = null;\n                var colors           = _.map($mdColorPalette, function (palette, color) {\n                    return color;\n                });\n                colors = _.filter(colors, function(color){\n                    return _.isObject($mdColorPalette[color]) && _.isObject($mdColorPalette[color][500] && _.isArray($mdColorPalette[color][500].value));\n                });                \n                var resizeTitleLabel = resizeTitleLabelUnwrap;\n\n                vm.data = vm.data || [];\n\n                vm.showLegend = function () {\n                    return vm.legend !== undefined ? vm.legend: true;\n                };\n\n                if (vm.series && vm.series.length > colors.length) {\n                    vm.data = vm.series.slice(0, 9);\n                }\n\n                $scope.$watch('pieChart.series', function (newVal) {\n                    vm.data = newVal;\n\n                    generateParameterColor();\n\n                    if (chart) {\n                        chartElem.datum(vm.data).call(chart);\n                        $timeout(resizeTitleLabel);\n                        drawEmptyState(d3.select($element.get(0)).select('.pie-chart svg')[0][0]);\n                    }\n                }, true);\n\n                // Sets colors of items\n                generateParameterColor();\n\n                (<any>d3.scale).paletteColors = function () {\n                    return d3.scale.ordinal().range(colors.map(materialColorToRgba));\n                };\n\n                /**\n                 * Instantiate chart\n                 */\n                nv.addGraph(() => {\n                    chart = nv.models.pieChart()\n                        .margin({ top: 0, right: 0, bottom: 0, left: 0 })\n                        .x(function (d) {\n                            return vm.donut ? d.value : null;\n                        })\n                        .y(function (d) {\n                            return d.value;\n                        })\n                        .height(vm.size || 250)\n                        .width(vm.size || 250)\n                        .showLabels(true)\n                        .labelThreshold(.001)\n                        .growOnHover(false)\n                        .donut(vm.donut)\n                        .donutRatio(0.5)\n                        .color(function(d) {\n                            return d.color || (<any>d3.scale).paletteColors().range();\n                        });\n\n                    chart.tooltip.enabled(false);\n                    chart.noData('There is no data right now...');\n                    chart.showLegend(false);\n\n                    chartElem = d3.select($element.get(0))\n                        .select('.pie-chart')\n                        .style('height', (vm.size || 250) + 'px')\n                        .style('width', vm.centered ? '100%' : (vm.size || 250) + 'px')\n                        .select('svg')\n                        .style('opacity', 0)\n                        .datum(vm.data || [])\n                        .call(chart);\n\n                    nv.utils.windowResize(function () {\n                        chart.update();\n                        $timeout(resizeTitleLabel);\n                        centerChart();\n                        drawEmptyState(d3.select($element.get(0)).select('.pie-chart svg')[0][0]);\n                    });\n\n                    return chart;\n                }, () => {\n                    $timeout(function () {\n                        var svgElem  = d3.select($element.get(0)).select('.pie-chart svg')[0][0];\n                        renderTotalLabel(svgElem);\n                        d3.select(svgElem)\n                            .transition()\n                            .duration(1000)\n                            .style('opacity', 1);\n                        \n                        $timeout(resizeTitleLabelUnwrap, 800);\n                        centerChart();\n                        drawEmptyState(svgElem);\n                    });\n                });\n\n                function drawEmptyState(svg) {\n                    if (!$element.find('text.nv-noData').get(0)) {\n                        d3.select($element.find('.empty-state')[0]).remove();\n                        $element.find('.pip-empty-pie-text').remove();\n                    } else {\n                    \n                        if ($element.find('.pip-empty-pie-text').length === 0) { \n                            $element.find('.pie-chart')\n                                .append(\"<div class='pip-empty-pie-text'>There is no data right now...</div>\");\n                        }\n\n                        var pie = d3.layout.pie().sort(null),\n                            size = Number(vm.size || 250);\n\n                        var arc = d3.svg.arc()\n                            .innerRadius(size / 2 - 20)\n                            .outerRadius(size / 2 - 57);\n                    \n                        svg = d3.select(svg)\n                            .append(\"g\")\n                            .classed('empty-state', true)\n                            .attr('transform', \"translate(\" + size / 2 + \",\" + size / 2 + \")\");\n                    \n                        var path = svg.selectAll(\"path\")\n                            .data(pie([1]))\n                            .enter().append(\"path\")\n                            .attr(\"fill\", \"rgba(0, 0, 0, 0.08)\")\n                            .attr(\"d\", <any>arc);\n                    }\n                }\n\n                function centerChart() {\n                    if (vm.centered) {\n                        let svgElem  = d3.select($element.get(0)).select('.pie-chart svg')[0][0],\n                        leftMargin = $(svgElem).innerWidth() / 2 - (vm.size || 250) / 2;\n                        d3.select($element.find('.nv-pieChart')[0]).attr('transform', 'translate(' + leftMargin + ', 0)');\n                    }\n                }\n\n                function renderTotalLabel(svgElem) {\n                    if ((!vm.total && !vm.donut) || !vm.data) return;\n\n                    let totalVal = vm.data.reduce(function (sum, curr) {\n                        return sum + curr.value;\n                    }, 0);\n\n                    if (totalVal >= 10000) totalVal = (totalVal / 1000).toFixed(1) + 'k';\n                    \n                    d3.select(svgElem)\n                        .select('.nv-pie:not(.nvd3)')\n                        .append('text')\n                        .classed('label-total', true)\n                        .attr('text-anchor', 'middle')\n                        .style('dominant-baseline', 'central')\n                        .text(totalVal);\n\n                    titleElem = d3.select($element.find('text.label-total').get(0)).style('opacity', 0);\n                }\n\n                function resizeTitleLabelUnwrap() {\n                    if ((!vm.total && !vm.donut) || !vm.data) return;\n\n                    var boxSize =  $element.find('.nvd3.nv-pieChart').get(0).getBBox();\n\n                    if (!boxSize.width || !boxSize.height) {\n                        return;\n                    }\n\n                    titleElem.style('font-size', ~~boxSize.width / 4.5).style('opacity', 1);\n                }\n\n                /**\n                 * Converts palette color name into RGBA color representation.\n                 * Should by replaced by palette for charts.\n                 *\n                 * @param {string} color    Name of color from AM palette\n                 * @returns {string} RGBa format\n                 */\n                function materialColorToRgba(color) {\n                    return 'rgba(' + $mdColorPalette[color][500].value[0] + ','\n                        + $mdColorPalette[color][500].value[1] + ','\n                        + $mdColorPalette[color][500].value[2] + ','\n                        + ($mdColorPalette[color][500].value[3] || 1) + ')';\n                }\n\n                /**\n                 * Helpful method\n                 * @private\n                 */\n                function getMaterialColor(index) {\n                    if (!colors || colors.length < 1) return null;\n\n                    if (index >= colors.length) {\n                        index = 0;\n                    }\n\n                    return materialColorToRgba(colors[index]);\n                } \n                /**\n                 * Helpful method\n                 * @private\n                 */\n                function generateParameterColor() {\n                    if (!vm.data) return;\n\n                    vm.data.forEach(function (item, index) {\n                        item.color = item.color || getMaterialColor(index);\n                    });\n                }\n            }\n        };\n    }\n})();","(function(module) {\ntry {\n  module = angular.module('pipCharts.Templates');\n} catch (e) {\n  module = angular.module('pipCharts.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('bar/bar_chart.html',\n    '<div class=\"bar-chart\"><svg></svg></div><pip-chart-legend pip-series=\"barChart.legend\" pip-interactive=\"barChart.interactiveLegend\"></pip-chart-legend>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipCharts.Templates');\n} catch (e) {\n  module = angular.module('pipCharts.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('line/line_chart.html',\n    '<div class=\"line-chart\" flex=\"auto\" layout=\"column\"><svg class=\"flex-auto\" ng-class=\"{\\'visible-x-axis\\': lineChart.isVisibleX(), \\'visible-y-axis\\': lineChart.isVisibleY()}\"></svg><div class=\"scroll-container\"><div class=\"visual-scroll\"><div class=\"scrolled-block\"></div></div></div><md-button class=\"md-fab md-mini minus-button\" ng-click=\"lineChart.zoomOut()\"><md-icon md-svg-icon=\"icons:minus-circle\"></md-icon></md-button><md-button class=\"md-fab md-mini plus-button\" ng-click=\"lineChart.zoomIn()\"><md-icon md-svg-icon=\"icons:plus-circle\"></md-icon></md-button></div><pip-chart-legend pip-series=\"lineChart.legend\" pip-interactive=\"lineChart.interactiveLegend\"></pip-chart-legend>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipCharts.Templates');\n} catch (e) {\n  module = angular.module('pipCharts.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('legend/interactive_legend.html',\n    '<div><div class=\"chart-legend-item\" ng-repeat=\"item in series\" ng-show=\"item.values || item.value\"><md-checkbox ng-model=\"item.disabled\" ng-true-value=\"false\" ng-false-value=\"true\" ng-if=\"interactive\" aria-label=\"{{ item.label }}\"><p class=\"legend-item-value\" ng-if=\"item.value\" ng-style=\"{\\'background-color\\': item.color}\">{{ item.value }}</p><p class=\"legend-item-label\">{{:: item.label || item.key }}</p></md-checkbox><div ng-if=\"!interactive\"><span class=\"bullet\" ng-style=\"{\\'background-color\\': item.color}\"></span> <span>{{:: item.label || item.key}}</span></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipCharts.Templates');\n} catch (e) {\n  module = angular.module('pipCharts.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('pie/pie_chart.html',\n    '<div class=\"pie-chart\" ng-class=\"{\\'circle\\': !pieChart.donut}\"><svg class=\"flex-auto\"></svg></div><pip-chart-legend pip-series=\"pieChart.data\" pip-interactive=\"false\" ng-if=\"pieChart.showLegend()\"></pip-chart-legend>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-charts-html.min.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}