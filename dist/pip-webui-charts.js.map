{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/bar/bar_chart.ts","src/charts.ts","src/legend/interactive_legend.ts","src/line/line_chart.ts","src/pie/pie_chart.ts","temp/pip-webui-charts-html.min.js"],"names":[],"mappings":"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","file":"pip-webui-charts.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc module\r\n     * @name pipBarCharts\r\n     *\r\n     * @description\r\n     * Bar chart on top of Rickshaw charts\r\n     */\r\n    angular.module('pipBarCharts', [])\r\n        .directive('pipBarChart', pipBarChart);\r\n\r\n    function pipBarChart() {\r\n        return {\r\n            restrict: 'E',\r\n            scope: {\r\n                series: '=pipSeries',\r\n                xTickFormat: '=pipXTickFormat',\r\n                yTickFormat: '=pipYTickFormat',\r\n                interactiveLegend: '=pipInterLegend'\r\n            },\r\n            bindToController: true,\r\n            controllerAs: 'barChart',\r\n            templateUrl: 'bar/bar_chart.html',\r\n            controller: function ($element, $scope, $timeout, $interval, $mdColorPalette) {\r\n                let vm = this;\r\n                let chart = null;\r\n                let chartElem = null;\r\n                let colors = _.map($mdColorPalette, function (palette, color) {\r\n                    return color;\r\n                });\r\n                let height = 270;\r\n\r\n                vm.data = prepareData(vm.series) || [];\r\n                vm.legend = _.clone(vm.series);\r\n                \r\n                if ((vm.series || []).length > colors.length) {\r\n                    vm.data = vm.series.slice(0, 9);\r\n                }\r\n\r\n                generateParameterColor();\r\n\r\n                (<any>d3.scale).paletteColors = function () {\r\n                    return d3.scale.ordinal().range(colors.map(materialColorToRgba));\r\n                };\r\n\r\n                $scope.$watch('barChart.series', function (updatedSeries) {\r\n                    vm.data = prepareData(updatedSeries);\r\n                    vm.legend = _.clone(vm.series);\r\n                    generateParameterColor();\r\n\r\n                    if (chart) {\r\n                        chartElem.datum(vm.data).call(chart);\r\n                        configBarWidthAndLabel();\r\n                        drawEmptyState();\r\n                    }\r\n                });\r\n\r\n                $scope.$watch('barChart.legend', function(updatedLegend) {\r\n                    vm.data = prepareData(updatedLegend);\r\n                    vm.legend = updatedLegend;\r\n\r\n                    if (chart) {\r\n                        chartElem.datum(vm.data).call(chart);\r\n                        configBarWidthAndLabel();\r\n                        drawEmptyState();\r\n                    }\r\n                }, true);\r\n\r\n                function prepareData(data) {\r\n                    let result = [];\r\n                    _.each(data, (seria) => {\r\n                        if (!seria.disabled && seria.values) result.push(seria);\r\n                    });\r\n\r\n                    return _.cloneDeep(result);\r\n                }\r\n\r\n                /**\r\n                 * Instantiate chart\r\n                 */\r\n                nv.addGraph(function () {\r\n                    chart = nv.models.discreteBarChart()\r\n                        .margin({top: 10, right: 0, bottom: 10, left: 50})\r\n                        .x(function (d) { return d.label || d.key || d.x; })\r\n                        .y(function (d) { return d.value; })\r\n                        .showValues(true)\r\n                        .staggerLabels(true) \r\n                        .showXAxis(true)\r\n                        .showYAxis(true)\r\n                        .valueFormat(<any>d3.format('d'))\r\n                        .duration(0)\r\n                        .height(height)\r\n                        .color(function(d) {\r\n                            return vm.data[d.series].color || materialColorToRgba(colors[d.series]);\r\n                        });\r\n\r\n                    chart.tooltip.enabled(false);\r\n                    chart.noData('There is no data right now...');\r\n\r\n                    chart.yAxis\r\n                        .tickFormat(function (d) {\r\n                            return vm.yTickFormat ? vm.yTickFormat(d) : d;\r\n                        });\r\n\r\n                    chart.xAxis\r\n                        .tickFormat(function (d) {\r\n                            return vm.xTickFormat ? vm.xTickFormat(d) : d;\r\n                        });\r\n\r\n                    chartElem = d3.select($element.get(0))\r\n                        .select('.bar-chart svg')\r\n                        .datum(vm.data)\r\n                        .style('height', '285px')\r\n                        .call(chart);\r\n\r\n                    nv.utils.windowResize(() => {\r\n                        chart.update();\r\n                         configBarWidthAndLabel(0);\r\n                         drawEmptyState();\r\n                    });\r\n\r\n                    return chart;\r\n                }, function () {\r\n\r\n                    $timeout(configBarWidthAndLabel, 0);\r\n                    drawEmptyState();\r\n                });\r\n\r\n                function drawEmptyState() {\r\n                    if ($element.find('.nv-noData').length === 0) {\r\n                        d3.select($element.find('.empty-state')[0]).remove();\r\n                    } else {\r\n                        let g = chartElem.append('g').classed('empty-state', true),\r\n                            width = $element.find('.nvd3-svg').innerWidth(),\r\n                            margin = width * 0.1;\r\n\r\n                        g.append('g')\r\n                            .style('fill', 'rgba(0, 0, 0, 0.08)')\r\n                            .append('rect')\r\n                            .attr('height', height - 10)\r\n                            .attr('width', 38);\r\n\r\n                        g.append('g')\r\n                            .attr('transform', 'translate(42, 60)')\r\n                            .style('fill', 'rgba(0, 0, 0, 0.08)')\r\n                            .append('rect')\r\n                            .attr('height', 200)\r\n                            .attr('width', 38);\r\n\r\n                        g.append('g')\r\n                            .attr('transform', 'translate(84, 160)')\r\n                            .style('fill', 'rgba(0, 0, 0, 0.08)')\r\n                            .append('rect')\r\n                            .attr('height', 100)\r\n                            .attr('width', 38);\r\n\r\n                        g.attr('transform', 'translate(' + (50 + margin) + ', 0), ' + 'scale(' + ((width - 2*margin) / 126) + ', 1)' );\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Aligns value label according to parent container size.\r\n                 * @return {void}\r\n                 */\r\n                function configBarWidthAndLabel(timeout: number = 1000) {\r\n                    var labels = $element.find('.nv-bar text'),\r\n                        chartBars = $element.find('.nv-bar'),\r\n                        parentHeight = (<any>$element.find('.nvd3-svg')[0]).getBBox().height;\r\n\r\n                    d3.select($element.find('.bar-chart')[0]).classed('visible', true);\r\n\r\n                    chartBars.each(function (index, item) {\r\n                        var barHeight = Number(d3.select(<any>item).select('rect').attr('height')),\r\n                            barWidth = Number(d3.select(<any>item).select('rect').attr('width')),\r\n                            element = d3.select(<any>item),\r\n                            x = d3.transform(element.attr('transform')).translate[0],\r\n                            y = d3.transform(element.attr('transform')).translate[1];\r\n\r\n                        element\r\n                            .attr('transform', 'translate(' + Number(x + index * (barWidth + 15)) + ', ' + (height - 20) + ')')\r\n                            .select('rect').attr('height', 0);\r\n\r\n                        element\r\n                            .transition()\r\n                            .duration(timeout)\r\n                            .attr('transform', 'translate(' + Number(x + index * (barWidth + 15)) + ', ' + y + ')')\r\n                            .select('rect').attr('height', barHeight);\r\n\r\n                        d3.select(labels[index])\r\n                            .attr('dy', barHeight / 2 + 10)\r\n                            .attr('x', barWidth / 2);\r\n                    });\r\n                }\r\n\r\n                /**\r\n                 * Converts palette color name into RGBA color representation.\r\n                 * Should by replaced by palette for charts.\r\n                 *\r\n                 * @param {string} color    Name of color from AM palette\r\n                 * @returns {string} RGBa format\r\n                 */\r\n                function materialColorToRgba(color) {\r\n                    return 'rgba(' + $mdColorPalette[color][500].value[0] + ','\r\n                        + $mdColorPalette[color][500].value[1] + ','\r\n                        + $mdColorPalette[color][500].value[2] + ','\r\n                        + ($mdColorPalette[color][500].value[3] || 1) + ')';\r\n                }\r\n\r\n                /**\r\n                 * Helpful method\r\n                 * @private\r\n                 */\r\n                function generateParameterColor() {\r\n                    if (!vm.data) return;\r\n\r\n                    vm.data.forEach(function (item, index) {\r\n                        if (item.values[0]) {\r\n                            item.values[0].color = item.values[0].color || materialColorToRgba(colors[index]);\r\n                            item.color = item.values[0].color;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        };\r\n    }\r\n})();","﻿/**\r\n * @file Registration of chart WebUI controls\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('pipCharts', [\r\n        'pipBarCharts',\r\n        'pipLineCharts',\r\n        'pipPieCharts',\r\n        'pipChartLegends',\r\n        'pipCharts.Templates'\r\n    ]);\r\n\r\n})();\r\n\r\n","(function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc module\r\n     * @name pipLegends\r\n     *\r\n     * @description\r\n     * Legend of charts\r\n     */\r\n    angular.module('pipChartLegends', [])\r\n        .directive('pipChartLegend', pipChartLegend);\r\n\r\n    function pipChartLegend() {\r\n        return {\r\n            restrict: 'E',\r\n            scope: {\r\n                series: '=pipSeries',\r\n                interactive: '=pipInteractive'\r\n            },\r\n            templateUrl: 'legend/interactive_legend.html',\r\n            controller: function ($element, $scope, $timeout, $mdColorPalette) {\r\n                var colors = _.map($mdColorPalette, function (palette) {\r\n                    return palette[500].hex;\r\n                });\r\n\r\n                function colorCheckboxes() {\r\n                    var checkboxContainers = $($element).find('md-checkbox .md-container');\r\n                    \r\n                    checkboxContainers.each(function (index, item) {\r\n                        $(item)\r\n                            .css('color', $scope.series[index].color || colors[index])\r\n                            .find('.md-icon')\r\n                            .css('background-color', $scope.series[index].color || colors[index]);\r\n                    });\r\n                }\r\n\r\n                function animate() {\r\n                    var legendTitles = $($element).find('.chart-legend-item');\r\n\r\n                    legendTitles.each(function (index, item) {\r\n                        $timeout(function () {\r\n                            $(item).addClass('visible');\r\n                        }, 200 * index);\r\n                    });\r\n                }\r\n                \r\n                function prepareSeries() {\r\n                    if (!$scope.series) return;\r\n\r\n                    $scope.series.forEach(function (item, index) {\r\n                        item.color = item.color || (item.values && item.values[0] && item.values[0].color ? item.values[0].color : colors[index]);\r\n                        item.disabled = item.disabled || false;\r\n                    });   \r\n                }\r\n\r\n                $scope.$watch('series', function () {\r\n                    $timeout(function () {\r\n                        animate();\r\n                        colorCheckboxes();\r\n                    }, 0);\r\n                    prepareSeries();\r\n                }, true);\r\n\r\n                $scope.$watch('interactive', function (newValue, oldValue) {\r\n                    if (newValue == true && newValue != oldValue) {\r\n                        $timeout(colorCheckboxes, 0);\r\n                    }\r\n                });\r\n\r\n                $timeout(function () {\r\n                    animate();\r\n                    colorCheckboxes();\r\n                }, 0);\r\n                prepareSeries();\r\n            }\r\n        };\r\n    }\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc module\r\n     * @name pipLineCharts\r\n     *\r\n     * @description\r\n     * Line chart on top of Rickshaw charts\r\n     */\r\n    angular.module('pipLineCharts', [])\r\n        .directive('pipLineChart', pipLineChart);\r\n\r\n    function pipLineChart() {\r\n        return {\r\n            restrict: 'E',\r\n            scope: {\r\n                series: '=pipSeries',\r\n                showYAxis: '=pipYAxis',\r\n                showXAxis: '=pipXAxis',\r\n                xFormat: '=pipXFormat',\r\n                xTickFormat: '=pipXTickFormat',\r\n                yTickFormat: '=pipYTickFormat',\r\n                dynamic: '=pipDynamic',\r\n                fixedHeight: '@pipDiagramHeight',\r\n                dynamicHeight: '@pipDynamicHeight',\r\n                minHeight: '@pipMinHeight',\r\n                maxHeight: '@pipMaxHeight',\r\n                interactiveLegend: '=pipInterLegend'\r\n            },\r\n            bindToController: true,\r\n            controllerAs: 'lineChart',\r\n            templateUrl: 'line/line_chart.html',\r\n            controller: function ($element, $scope, $timeout, $interval, $mdColorPalette) {\r\n                var vm        = this;\r\n                var chart     = null;\r\n                var chartElem = null;\r\n                var setZoom = null;\r\n                var updateZoomOptions = null;\r\n                var fixedHeight = vm.fixedHeight || 270;\r\n                var dynamicHeight = vm.dynamicHeight || false;\r\n                var minHeight = vm.minHeight || fixedHeight;\r\n                var maxHeight = vm.maxHeight || fixedHeight;\r\n\r\n                var colors    = _.map($mdColorPalette, function (palette, color) {\r\n                    return color;\r\n                });\r\n\r\n                vm.data = prepareData(vm.series) || [];\r\n                vm.legend = _.clone(vm.series);\r\n                vm.sourceEvents = [];\r\n                \r\n                vm.isVisibleX = function () {\r\n                    return vm.showXAxis == undefined ? true : vm.showXAxis; \r\n                };\r\n\r\n                vm.isVisibleY = function () {\r\n                    return vm.showYAxis == undefined ? true : vm.showYAxis;\r\n                };\r\n\r\n                vm.zoomIn = function () {\r\n                    if (setZoom) {\r\n                        setZoom('in');\r\n                    }\r\n                };\r\n\r\n                vm.zoomOut = function () {\r\n                    if (setZoom) {\r\n                        setZoom('out');\r\n                    }\r\n                };\r\n                \r\n                if (vm.series && vm.series.length > colors.length) {\r\n                    vm.data = vm.series.slice(0, 9);\r\n                }\r\n\r\n                // Sets colors of items\r\n                generateParameterColor();\r\n\r\n                (<any>d3.scale).paletteColors = function () {\r\n                    return d3.scale.ordinal().range(colors.map(materialColorToRgba));\r\n                };\r\n\r\n                $scope.$watch('lineChart.series', function (updatedSeries) {\r\n                    vm.data = prepareData(updatedSeries);\r\n                    vm.legend = _.clone(vm.series);\r\n\r\n                    generateParameterColor();\r\n\r\n                    if (chart) {\r\n                        chartElem.datum(vm.data || []).call(chart);\r\n                        drawEmptyState();\r\n\r\n                        if (updateZoomOptions) updateZoomOptions(vm.data);\r\n                    }\r\n                }, true);\r\n\r\n                $scope.$watch('lineChart.legend', function(updatedLegend) {\r\n                    vm.data = prepareData(updatedLegend);\r\n                    vm.legend = updatedLegend;\r\n\r\n                    if (chart) {\r\n                        chartElem.datum(vm.data || []).call(chart);\r\n                        drawEmptyState();\r\n\r\n                        if (updateZoomOptions) updateZoomOptions(vm.data);\r\n                    }\r\n                }, true);\r\n\r\n                $scope.$on('$destroy', () => {\r\n                    d3.selectAll('.nvtooltip').style('opacity', 0);\r\n                });\r\n\r\n                function prepareData(data) {\r\n                    let result = [];\r\n                    _.each(data, (seria) => {\r\n                        if (!seria.disabled && seria.values) result.push(seria);\r\n                    });\r\n\r\n                    return _.cloneDeep(result);\r\n                }\r\n\r\n                var getHeight = () => {\r\n                    if (dynamicHeight) {\r\n                        var heigth = Math.min(Math.max(minHeight, $element.parent().innerHeight()), maxHeight);\r\n                        return heigth;\r\n                    } else {\r\n                        return fixedHeight;\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Instantiate chart\r\n                 */\r\n                nv.addGraph(() => {\r\n                    chart = nv.models.lineChart()\r\n                        .margin({ top: 20, right: 20, bottom: 30, left: 30 })\r\n                        .x(function (d) {\r\n                            return (d !== undefined && d.x !== undefined) ? (vm.xFormat ? vm.xFormat(d.x) : d.x) : d;\r\n                        })\r\n                        .y(function (d) {\r\n                            return (d !== undefined && d.value !== undefined) ? d.value : d;\r\n                        })\r\n                        .height(getHeight() - 50)\r\n                        .useInteractiveGuideline(true)\r\n                        .showXAxis(true)\r\n                        .showYAxis(true)\r\n                        .showLegend(false)\r\n                        .color(function(d) {\r\n                            return d.color || (<any>d3.scale).paletteColors().range();\r\n                        });\r\n\r\n                    chart.tooltip.enabled(false);\r\n                    chart.noData('There is no data right now...');\r\n\r\n                    chart.yAxis\r\n                        .tickFormat(function (d) {\r\n                            return vm.yTickFormat ? vm.yTickFormat(d) : d;\r\n                        });\r\n\r\n                    chart.xAxis\r\n                        .tickFormat(function (d) {\r\n                            return vm.xTickFormat ? vm.xTickFormat(d) : d;\r\n                        });\r\n\r\n                    chartElem = d3.select($element.get(0)).select('.line-chart svg');\r\n                    chartElem.datum(vm.data || []).style('height', (getHeight() - 50) + 'px').call(chart);\r\n\r\n                    if (vm.dynamic) {\r\n                        addZoom(chart, chartElem);\r\n                    }\r\n\r\n                    nv.utils.windowResize(() => { onResize(); });\r\n\r\n                    $scope.$on('pipMainResized', () => { onResize(); });\r\n\r\n                    return chart;\r\n                }, () => {\r\n                    drawEmptyState();\r\n                });\r\n\r\n                function onResize() {\r\n                    chart.height(getHeight() - 50);\r\n                    chartElem.style('height', (getHeight() - 50) + 'px');\r\n                    chart.update();\r\n                    drawEmptyState();\r\n                }\r\n\r\n                function drawEmptyState() {\r\n                    if (!$element.find('text.nv-noData').get(0)) {\r\n                        d3.select($element.find('.empty-state')[0]).remove();\r\n                    } else {\r\n                        let containerWidth = $element.find('.line-chart').innerWidth(),\r\n                            containerHeight = $element.find('.line-chart').innerHeight();\r\n                        \r\n                        if ($element.find('.empty-state').get(0)) {\r\n                            chartElem\r\n                                .select('image')\r\n                                .attr('transform', 'scale(' + (containerWidth / 1151) + ',' + (containerHeight / 216) + ')');\r\n                        } else {\r\n                            chartElem\r\n                                .append(\"defs\")\r\n                                .append(\"pattern\")\r\n                                .attr(\"height\", 1)\r\n                                .attr(\"width\", 1)\r\n                                .attr(\"x\", \"0\")\r\n                                .attr(\"y\", \"0\")\r\n                                .attr(\"id\", \"bg\")\r\n                                .append(\"image\")\r\n                                .attr('x', 17)\r\n                                .attr('y', 0)\r\n                                .attr('height', \"216px\")\r\n                                .attr('width', \"1151px\")\r\n                                .attr('transform', 'scale(' + (containerWidth / 1151) + ',' + (containerHeight / 216) + ')')\r\n                                .attr(\"xlink:href\", \"images/line_chart_empty_state.svg\");\r\n\r\n                            chartElem\r\n                                .append('rect')\r\n                                .classed('empty-state', true)\r\n                                .attr('height', \"100%\")\r\n                                .attr('width', \"100%\")\r\n                                .attr('fill', 'url(#bg)');\r\n                        }\r\n                    }\r\n                }\r\n\r\n                function updateScroll(domains, boundary) {\r\n                    var bDiff = boundary[1] - boundary[0],\r\n                        domDiff = domains[1] - domains[0],\r\n                        isEqual = (domains[1] - domains[0])/bDiff === 1;\r\n\r\n                    $($element[0]).find('.visual-scroll')\r\n                        .css('opacity', function () {\r\n                            return isEqual ? 0 : 1;\r\n                        });\r\n\r\n                    if (isEqual) return;\r\n                    \r\n                    $($element[0]).find('.scrolled-block')\r\n                        .css('left', function () {\r\n                            return domains[0]/bDiff * 100 + '%';\r\n                        })\r\n                        .css('width', function () {\r\n                            return domDiff/bDiff * 100 + '%';\r\n                        });\r\n                }\r\n\r\n                function addZoom(chart, svg) {\r\n                    // scaleExtent\r\n                    var scaleExtent = 4;\r\n\r\n                    // parameters\r\n                    var yAxis       = null;\r\n                    var xAxis       = null;\r\n                    var xDomain     = null;\r\n                    var yDomain     = null;\r\n                    var redraw      = null;\r\n                    var svg         = svg;\r\n\r\n                    // scales\r\n                    var xScale = null;\r\n                    var yScale = null;\r\n\r\n                    // min/max boundaries\r\n                    var x_boundary = null;\r\n                    var y_boundary = null;\r\n\r\n                    // create d3 zoom handler\r\n                    var d3zoom = d3.behavior.zoom();\r\n                    var prevXDomain = null;\r\n                    var prevScale = null;\r\n                    var prevTranslate = null;\r\n\r\n                    setData(chart);\r\n\r\n                    function setData(newChart) {\r\n                        // parameters\r\n                        yAxis       = newChart.yAxis;\r\n                        xAxis       = newChart.xAxis;\r\n                        xDomain     = newChart.xDomain || xAxis.scale().domain;\r\n                        yDomain     = newChart.yDomain || yAxis.scale().domain;\r\n                        redraw      = newChart.update;\r\n\r\n                        // scales\r\n                        xScale = xAxis.scale();\r\n                        yScale = yAxis.scale();\r\n\r\n                        // min/max boundaries\r\n                        x_boundary = xAxis.scale().domain().slice();\r\n                        y_boundary = yAxis.scale().domain().slice();\r\n\r\n                        // create d3 zoom handler\r\n                        prevXDomain = x_boundary;\r\n                        prevScale = d3zoom.scale();\r\n                        prevTranslate = d3zoom.translate();\r\n\r\n                        // ensure nice axis\r\n                        xScale.nice();\r\n                        yScale.nice();\r\n                    }\r\n\r\n                    // fix domain\r\n                    function fixDomain(domain, boundary, scale, translate) {\r\n                        if (domain[0] < boundary[0]) {\r\n                            domain[0] = boundary[0];\r\n                            if (prevXDomain[0] !== boundary[0] || scale !== prevScale) {\r\n                                domain[1] += (boundary[0] - domain[0]);\r\n                            } else {\r\n                                domain[1] = prevXDomain[1];\r\n                                translate = _.clone(prevTranslate);\r\n                            }\r\n\r\n                        }\r\n                        if (domain[1] > boundary[1]) {\r\n                            domain[1] = boundary[1];\r\n                            if (prevXDomain[1] !== boundary[1] || scale !== prevScale) {\r\n                                domain[0] -= (domain[1] - boundary[1]);\r\n                            } else {\r\n                                domain[0] = prevXDomain[0];\r\n                                translate = _.clone(prevTranslate);\r\n                            }\r\n                        }\r\n\r\n                        d3zoom.translate(translate);\r\n                        prevXDomain = _.clone(domain);\r\n                        prevScale = _.clone(scale);\r\n                        prevTranslate = _.clone(translate);\r\n                        return domain;\r\n                    }\r\n\r\n                    function updateChart() {\r\n                        d3zoom.scale(1);\r\n                        d3zoom.translate([0,0]);\r\n                        xScale.domain(x_boundary);\r\n                        d3zoom.x(xScale).y(yScale);\r\n                        svg.call(d3zoom);\r\n                    }\r\n\r\n                    // zoom event handler\r\n                    function zoomed() {\r\n                        // Switch off vertical zooming temporary\r\n                        // yDomain(yScale.domain());\r\n\r\n                        if ((<any>d3.event).scale === 1) {\r\n                            unzoomed();\r\n                            updateChart();\r\n                        } else {\r\n                            xDomain(fixDomain(xScale.domain(), x_boundary, (<any>d3.event).scale, (<any>d3.event).translate));\r\n                            redraw();\r\n                        }\r\n\r\n                        updateScroll(xScale.domain(), x_boundary);\r\n                    }\r\n\r\n                    //\r\n                    setZoom = function(which) {\r\n                        var center0 = [svg[0][0].getBBox().width / 2, svg[0][0].getBBox().height / 2];\r\n                        var translate0 = d3zoom.translate(), coordinates0 = coordinates(center0);\r\n\r\n                        if (which === 'in') {\r\n                            if (prevScale < scaleExtent) d3zoom.scale(prevScale + 0.2);\r\n                        } else {\r\n                            if (prevScale > 1) d3zoom.scale(prevScale - 0.2);\r\n                        }\r\n\r\n                        var center1 = point(coordinates0);\r\n                        d3zoom.translate([translate0[0] + center0[0] - center1[0], translate0[1] + center0[1] - center1[1]]);\r\n\r\n                        d3zoom.event(svg);\r\n                    };\r\n\r\n                    function step(which) {\r\n                        var translate = d3zoom.translate();\r\n\r\n                        if (which === 'right') {\r\n                            translate[0] -= 20;\r\n                        } else {\r\n                            translate[0] += 20;\r\n                        }\r\n\r\n                        d3zoom.translate(translate);\r\n                        d3zoom.event(svg);\r\n                    }\r\n\r\n                    function coordinates(point) {\r\n                        var scale = d3zoom.scale(), translate = d3zoom.translate();\r\n                        return [(point[0] - translate[0]) / scale, (point[1] - translate[1]) / scale];\r\n                    }\r\n\r\n                    function point(coordinates) {\r\n                        var scale = d3zoom.scale(), translate = d3zoom.translate();\r\n                        return [coordinates[0] * scale + translate[0], coordinates[1] * scale + translate[1]];\r\n                    }\r\n\r\n                    function keypress() {\r\n                        switch((<any>d3.event).keyCode) {\r\n                            case 39: step('right'); break;\r\n                            case 37: step('left'); break;\r\n                            case 107: setZoom('in'); break;\r\n                            case 109: setZoom('out');\r\n                        }\r\n                    }\r\n\r\n                    // zoom event handler\r\n                    function unzoomed() {\r\n                        xDomain(x_boundary);\r\n                        redraw();\r\n                        d3zoom.scale(1);\r\n                        d3zoom.translate([0,0]);\r\n                        prevScale = 1;\r\n                        prevTranslate = [0,0];\r\n                    }\r\n\r\n                    // initialize wrapper\r\n                    d3zoom.x(xScale)\r\n                        .y(yScale)\r\n                        .scaleExtent([1, scaleExtent])\r\n                        .on('zoom', zoomed);\r\n\r\n                    // add handler\r\n                    svg.call(d3zoom).on('dblclick.zoom', unzoomed);\r\n                    $($element.get(0)).addClass('dynamic');\r\n\r\n                    // add keyboard handlers\r\n                    svg\r\n                        .attr('focusable', false)\r\n                        .style('outline', 'none')\r\n                        .on('keydown', keypress)\r\n                        .on('focus', function () {});\r\n\r\n                    var getXMinMax = function(data) {\r\n                        var maxVal, minVal = null;\r\n\r\n                        for(var i=0;i<data.length;i++) {\r\n                            if (!data[i].disabled) {\r\n                                var tempMinVal = d3.max(data[i].values, function(d: any) { return vm.xFormat ? vm.xFormat(d.x) : d.x;} );\r\n                                var tempMaxVal = d3.min(data[i].values, function(d: any) { return vm.xFormat ? vm.xFormat(d.x) : d.x;} );\r\n                                minVal = (!minVal || tempMinVal < minVal) ? tempMinVal : minVal;\r\n                                maxVal = (!maxVal || tempMaxVal > maxVal) ? tempMaxVal : maxVal;\r\n                            }\r\n                        }\r\n                        return [maxVal, minVal];\r\n                    };\r\n\r\n                    updateZoomOptions = function(data) {\r\n                        yAxis = chart.yAxis;\r\n                        xAxis = chart.xAxis;\r\n\r\n                        xScale = xAxis.scale();\r\n                        yScale = yAxis.scale();\r\n\r\n                        x_boundary = getXMinMax(data);\r\n\r\n                        if (d3zoom.scale() === 1) {\r\n                            d3zoom.x(xScale).y(yScale);\r\n                            svg.call(d3zoom);\r\n                            d3zoom.event(svg);\r\n                        }\r\n\r\n                        updateScroll(xScale.domain(), x_boundary);\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Converts palette color name into RGBA color representation.\r\n                 * Should by replaced by palette for charts.\r\n                 *\r\n                 * @param {string} color    Name of color from AM palette\r\n                 * @returns {string} RGBa format\r\n                 */\r\n                function materialColorToRgba(color) {\r\n                    return 'rgba(' + $mdColorPalette[color][500].value[0] + ','\r\n                        + $mdColorPalette[color][500].value[1] + ','\r\n                        + $mdColorPalette[color][500].value[2] + ','\r\n                        + ($mdColorPalette[color][500].value[3] || 1) + ')';\r\n                }\r\n\r\n                /**\r\n                 * Helpful method\r\n                 * @private\r\n                 */\r\n                function generateParameterColor() {\r\n                    if (!vm.data) return;\r\n\r\n                    vm.data.forEach(function (item, index) {\r\n                        item.color = item.color || materialColorToRgba(colors[index]);\r\n                    });\r\n                }\r\n            }\r\n        };\r\n    }\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc module\r\n     * @name pipPieCharts\r\n     *\r\n     * @description\r\n     * Line chart on top of Rickshaw charts\r\n     */\r\n    angular.module('pipPieCharts', [])\r\n        .directive('pipPieChart', pipPieChart);\r\n\r\n    function pipPieChart() {\r\n        return {\r\n            restrict: 'E',\r\n            scope: {\r\n                series: '=pipSeries',\r\n                donut: '=pipDonut',\r\n                legend: '=pipShowLegend',\r\n                total: '=pipShowTotal',\r\n                size: '=pipPieSize',\r\n                centered: '=pipCentered'\r\n            },\r\n            bindToController: true,\r\n            controllerAs: 'pieChart',\r\n            templateUrl: 'pie/pie_chart.html',\r\n            controller: function ($element, $scope, $timeout, $interval, $mdColorPalette) {\r\n                var vm               = this;\r\n                var chart            = null;\r\n                var titleElem        = null;\r\n                var chartElem        = null;\r\n                var colors           = _.map($mdColorPalette, function (palette, color) {\r\n                    return color;\r\n                });\r\n                var resizeTitleLabel = resizeTitleLabelUnwrap;\r\n\r\n                vm.data = vm.data || [];\r\n\r\n                vm.showLegend = function () {\r\n                    return vm.legend !== undefined ? vm.legend: true;\r\n                };\r\n\r\n                if (vm.series && vm.series.length > colors.length) {\r\n                    vm.data = vm.series.slice(0, 9);\r\n                }\r\n\r\n                $scope.$watch('pieChart.series', function (newVal) {\r\n                    vm.data = newVal;\r\n\r\n                    generateParameterColor();\r\n\r\n                    if (chart) {\r\n                        chartElem.datum(vm.data).call(chart);\r\n                        $timeout(resizeTitleLabel);\r\n                        drawEmptyState(d3.select($element.get(0)).select('.pie-chart svg')[0][0]);\r\n                    }\r\n                }, true);\r\n\r\n                // Sets colors of items\r\n                generateParameterColor();\r\n\r\n                (<any>d3.scale).paletteColors = function () {\r\n                    return d3.scale.ordinal().range(colors.map(materialColorToRgba));\r\n                };\r\n\r\n                /**\r\n                 * Instantiate chart\r\n                 */\r\n                nv.addGraph(() => {\r\n                    chart = nv.models.pieChart()\r\n                        .margin({ top: 0, right: 0, bottom: 0, left: 0 })\r\n                        .x(function (d) {\r\n                            return vm.donut ? d.value : null;\r\n                        })\r\n                        .y(function (d) {\r\n                            return d.value;\r\n                        })\r\n                        .height(vm.size || 250)\r\n                        .width(vm.size || 250)\r\n                        .showLabels(true)\r\n                        .labelThreshold(.001)\r\n                        .growOnHover(false)\r\n                        .donut(vm.donut)\r\n                        .donutRatio(0.5)\r\n                        .color(function(d) {\r\n                            return d.color || (<any>d3.scale).paletteColors().range();\r\n                        });\r\n\r\n                    chart.tooltip.enabled(false);\r\n                    chart.noData('There is no data right now...');\r\n                    chart.showLegend(false);\r\n\r\n                    chartElem = d3.select($element.get(0))\r\n                        .select('.pie-chart')\r\n                        .style('height', (vm.size || 250) + 'px')\r\n                        .style('width', vm.centered ? '100%' : (vm.size || 250) + 'px')\r\n                        .select('svg')\r\n                        .style('opacity', 0)\r\n                        .datum(vm.data || [])\r\n                        .call(chart);\r\n\r\n                    nv.utils.windowResize(function () {\r\n                        chart.update();\r\n                        $timeout(resizeTitleLabel);\r\n                        centerChart();\r\n                        drawEmptyState(d3.select($element.get(0)).select('.pie-chart svg')[0][0]);\r\n                    });\r\n\r\n                    return chart;\r\n                }, () => {\r\n                    $timeout(function () {\r\n                        var svgElem  = d3.select($element.get(0)).select('.pie-chart svg')[0][0];\r\n                        renderTotalLabel(svgElem);\r\n                        d3.select(svgElem)\r\n                            .transition()\r\n                            .duration(1000)\r\n                            .style('opacity', 1);\r\n                        \r\n                        $timeout(resizeTitleLabelUnwrap, 800);\r\n                        centerChart();\r\n                        drawEmptyState(svgElem);\r\n                    });\r\n                });\r\n\r\n                function drawEmptyState(svg) {\r\n                    if (!$element.find('text.nv-noData').get(0)) {\r\n                        d3.select($element.find('.empty-state')[0]).remove();\r\n                        $element.find('.pip-empty-pie-text').remove();\r\n                    } else {\r\n                    \r\n                        if ($element.find('.pip-empty-pie-text').length === 0) { \r\n                            $element.find('.pie-chart')\r\n                                .append(\"<div class='pip-empty-pie-text'>There is no data right now...</div>\");\r\n                        }\r\n\r\n                        var pie = d3.layout.pie().sort(null),\r\n                            size = Number(vm.size || 250);\r\n\r\n                        var arc = d3.svg.arc()\r\n                            .innerRadius(size / 2 - 20)\r\n                            .outerRadius(size / 2 - 57);\r\n                    \r\n                        svg = d3.select(svg)\r\n                            .append(\"g\")\r\n                            .classed('empty-state', true)\r\n                            .attr('transform', \"translate(\" + size / 2 + \",\" + size / 2 + \")\");\r\n                    \r\n                        var path = svg.selectAll(\"path\")\r\n                            .data(pie([1]))\r\n                            .enter().append(\"path\")\r\n                            .attr(\"fill\", \"rgba(0, 0, 0, 0.08)\")\r\n                            .attr(\"d\", <any>arc);\r\n                    }\r\n                }\r\n\r\n                function centerChart() {\r\n                    if (vm.centered) {\r\n                        let svgElem  = d3.select($element.get(0)).select('.pie-chart svg')[0][0],\r\n                        leftMargin = $(svgElem).innerWidth() / 2 - (vm.size || 250) / 2;\r\n                        d3.select($element.find('.nv-pieChart')[0]).attr('transform', 'translate(' + leftMargin + ', 0)');\r\n                    }\r\n                }\r\n\r\n                function renderTotalLabel(svgElem) {\r\n                    if ((!vm.total && !vm.donut) || !vm.data) return;\r\n\r\n                    let totalVal = vm.data.reduce(function (sum, curr) {\r\n                        return sum + curr.value;\r\n                    }, 0);\r\n\r\n                    if (totalVal >= 10000) totalVal = (totalVal / 1000).toFixed(1) + 'k';\r\n                    \r\n                    d3.select(svgElem)\r\n                        .select('.nv-pie:not(.nvd3)')\r\n                        .append('text')\r\n                        .classed('label-total', true)\r\n                        .attr('text-anchor', 'middle')\r\n                        .style('dominant-baseline', 'central')\r\n                        .text(totalVal);\r\n\r\n                    titleElem = d3.select($element.find('text.label-total').get(0)).style('opacity', 0);\r\n                }\r\n\r\n                function resizeTitleLabelUnwrap() {\r\n                    if ((!vm.total && !vm.donut) || !vm.data) return;\r\n\r\n                    var boxSize =  $element.find('.nvd3.nv-pieChart').get(0).getBBox();\r\n\r\n                    if (!boxSize.width || !boxSize.height) {\r\n                        return;\r\n                    }\r\n\r\n                    titleElem.style('font-size', ~~boxSize.width / 4.5).style('opacity', 1);\r\n                }\r\n\r\n                /**\r\n                 * Converts palette color name into RGBA color representation.\r\n                 * Should by replaced by palette for charts.\r\n                 *\r\n                 * @param {string} color    Name of color from AM palette\r\n                 * @returns {string} RGBa format\r\n                 */\r\n                function materialColorToRgba(color) {\r\n                    return 'rgba(' + $mdColorPalette[color][500].value[0] + ','\r\n                        + $mdColorPalette[color][500].value[1] + ','\r\n                        + $mdColorPalette[color][500].value[2] + ','\r\n                        + ($mdColorPalette[color][500].value[3] || 1) + ')';\r\n                }\r\n\r\n\r\n                /**\r\n                 * Helpful method\r\n                 * @private\r\n                 */\r\n                function generateParameterColor() {\r\n                    if (!vm.data) return;\r\n\r\n                    vm.data.forEach(function (item, index) {\r\n                        item.color = item.color || materialColorToRgba(colors[index]);\r\n                    });\r\n                }\r\n            }\r\n        };\r\n    }\r\n})();","(function(module) {\ntry {\n  module = angular.module('pipCharts.Templates');\n} catch (e) {\n  module = angular.module('pipCharts.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('bar/bar_chart.html',\n    '<div class=\"bar-chart\"><svg></svg></div><pip-chart-legend pip-series=\"barChart.legend\" pip-interactive=\"barChart.interactiveLegend\"></pip-chart-legend>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipCharts.Templates');\n} catch (e) {\n  module = angular.module('pipCharts.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('line/line_chart.html',\n    '<div class=\"line-chart\" flex=\"auto\" layout=\"column\"><svg class=\"flex-auto\" ng-class=\"{\\'visible-x-axis\\': lineChart.isVisibleX(), \\'visible-y-axis\\': lineChart.isVisibleY()}\"></svg><div class=\"scroll-container\"><div class=\"visual-scroll\"><div class=\"scrolled-block\"></div></div></div><md-button class=\"md-fab md-mini minus-button\" ng-click=\"lineChart.zoomOut()\"><md-icon md-svg-icon=\"icons:minus-circle\"></md-icon></md-button><md-button class=\"md-fab md-mini plus-button\" ng-click=\"lineChart.zoomIn()\"><md-icon md-svg-icon=\"icons:plus-circle\"></md-icon></md-button></div><pip-chart-legend pip-series=\"lineChart.legend\" pip-interactive=\"lineChart.interactiveLegend\"></pip-chart-legend>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipCharts.Templates');\n} catch (e) {\n  module = angular.module('pipCharts.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('pie/pie_chart.html',\n    '<div class=\"pie-chart\" ng-class=\"{\\'circle\\': !pieChart.donut}\"><svg class=\"flex-auto\"></svg></div><pip-chart-legend pip-series=\"pieChart.data\" pip-interactive=\"false\" ng-if=\"pieChart.showLegend()\"></pip-chart-legend>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipCharts.Templates');\n} catch (e) {\n  module = angular.module('pipCharts.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('legend/interactive_legend.html',\n    '<div><div class=\"chart-legend-item\" ng-repeat=\"item in series\" ng-show=\"item.values || item.value\"><md-checkbox class=\"lp16 m8\" ng-model=\"item.disabled\" ng-true-value=\"false\" ng-false-value=\"true\" ng-if=\"interactive\" aria-label=\"{{ item.label }}\"><p class=\"legend-item-value\" ng-if=\"item.value\" ng-style=\"{\\'background-color\\': item.color}\">{{ item.value }}</p><p class=\"legend-item-label\">{{:: item.label || item.key }}</p></md-checkbox><div ng-if=\"!interactive\"><span class=\"bullet\" ng-style=\"{\\'background-color\\': item.color}\"></span> <span>{{:: item.label || item.key}}</span></div></div></div>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-charts-html.min.js.map\n"],"preExisting":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}