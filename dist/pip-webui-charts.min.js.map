{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/bar/bar_chart.ts","src/charts.ts","src/legend/interactive_legend.ts","src/line/line_chart.ts","src/pie/pie_chart.ts","temp/pip-webui-charts-html.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","charts","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","pipBarChart","restrict","scope","series","xTickFormat","yTickFormat","interactiveLegend","bindToController","controllerAs","templateUrl","controller","$element","$scope","$timeout","$interval","$mdColorPalette","prepareData","data","result","_","each","seria","disabled","values","push","cloneDeep","drawEmptyState","find","d3","select","remove","chartElem","append","classed","width","innerWidth","margin","style","attr","height","configBarWidthAndLabel","timeout","labels","chartBars","getBBox","index","item","barHeight","Number","barWidth","element","x","transform","translate","y","transition","duration","materialColorToRgba","color","value","getMaterialColor","colors","generateParameterColor","vm","forEach","chart","map","palette","filter","isObject","isArray","legend","clone","slice","scale","paletteColors","ordinal","range","$watch","updatedSeries","datum","updatedLegend","nv","addGraph","models","discreteBarChart","top","right","bottom","left","d","label","key","showValues","staggerLabels","showXAxis","showYAxis","valueFormat","format","tooltip","enabled","noData","yAxis","tickFormat","xAxis","get","utils","windowResize","update","angular","directive","pipChartLegend","interactive","colorCheckboxes","checkboxContainers","$","css","animate","legendTitles","addClass","prepareSeries","hex","undefined","newValue","oldValue","pipLineChart","xFormat","xTickValues","dynamic","fixedHeight","dynamicHeight","minHeight","maxHeight","onResize","getHeight","containerWidth","containerHeight","innerHeight","updateScroll","domains","boundary","bDiff","domDiff","isEqual","addZoom","svg","setData","newChart","xDomain","domain","yDomain","redraw","xScale","yScale","x_boundary","y_boundary","prevXDomain","prevScale","d3zoom","prevTranslate","nice","fixDomain","updateChart","zoomed","event","unzoomed","step","which","coordinates","point","keypress","keyCode","setZoom","scaleExtent","behavior","zoom","center0","translate0","coordinates0","center1","on","getXMinMax","maxVal","minVal","tempMinVal","max","tempMaxVal","min","updateZoomOptions","filteredColor","sourceEvents","isVisibleX","isVisibleY","zoomIn","zoomOut","tickValues","$on","setTimeout","selectAll","heigth","Math","parent","lineChart","useInteractiveGuideline","showLegend","tooltipW","bodyWidth","originalEvent","removeTooltip","pipPieChart","donut","total","size","centered","pie","layout","sort","arc","innerRadius","outerRadius","enter","centerChart","svgElem","leftMargin","renderTotalLabel","totalVal","reduce","sum","curr","toFixed","text","titleElem","resizeTitleLabelUnwrap","boxSize","resizeTitleLabel","newVal","pieChart","showLabels","labelThreshold","growOnHover","donutRatio","run","$templateCache","put"],"mappings":"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","file":"pip-webui-charts.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc module\r\n     * @name pipBarCharts\r\n     *\r\n     * @description\r\n     * Bar chart on top of Rickshaw charts\r\n     */\r\n    angular.module('pipBarCharts', [])\r\n        .directive('pipBarChart', pipBarChart);\r\n\r\n    function pipBarChart() {\r\n        return {\r\n            restrict: 'E',\r\n            scope: {\r\n                series: '=pipSeries',\r\n                xTickFormat: '=pipXTickFormat',\r\n                yTickFormat: '=pipYTickFormat',\r\n                interactiveLegend: '=pipInterLegend'\r\n            },\r\n            bindToController: true,\r\n            controllerAs: 'barChart',\r\n            templateUrl: 'bar/bar_chart.html',\r\n            controller: function ($element, $scope, $timeout, $interval, $mdColorPalette) {\r\n                let vm = this;\r\n                let chart = null;\r\n                let chartElem = null;\r\n                let colors = _.map($mdColorPalette, function (palette, color) {\r\n                    return color;\r\n                });\r\n                colors = _.filter(colors, function(color){\r\n                    return _.isObject($mdColorPalette[color]) && _.isObject($mdColorPalette[color][500] && _.isArray($mdColorPalette[color][500].value));\r\n                });                \r\n                let height = 270;\r\n\r\n                vm.data = prepareData(vm.series) || [];\r\n                vm.legend = _.clone(vm.series);\r\n                \r\n                if ((vm.series || []).length > colors.length) {\r\n                    vm.data = vm.series.slice(0, 9);\r\n                }\r\n\r\n                generateParameterColor();\r\n\r\n                (<any>d3.scale).paletteColors = function () {\r\n                    return d3.scale.ordinal().range(colors.map(materialColorToRgba));\r\n                };\r\n\r\n                $scope.$watch('barChart.series', function (updatedSeries) {\r\n                    vm.data = prepareData(updatedSeries);\r\n                    vm.legend = _.clone(vm.series);\r\n                    generateParameterColor();\r\n\r\n                    if (chart) {\r\n                        chartElem.datum(vm.data).call(chart);\r\n                        configBarWidthAndLabel();\r\n                        drawEmptyState();\r\n                    }\r\n                });\r\n\r\n                $scope.$watch('barChart.legend', function(updatedLegend) {\r\n                    vm.data = prepareData(updatedLegend);\r\n                    vm.legend = updatedLegend;\r\n\r\n                    if (chart) {\r\n                        chartElem.datum(vm.data).call(chart);\r\n                        configBarWidthAndLabel();\r\n                        drawEmptyState();\r\n                    }\r\n                }, true);\r\n\r\n                function prepareData(data) {\r\n                    let result = [];\r\n                    _.each(data, (seria) => {\r\n                        if (!seria.disabled && seria.values) result.push(seria);\r\n                    });\r\n\r\n                    return _.cloneDeep(result);\r\n                }\r\n\r\n                /**\r\n                 * Instantiate chart\r\n                 */\r\n                nv.addGraph(function () {\r\n                    chart = nv.models.discreteBarChart()\r\n                        .margin({top: 10, right: 0, bottom: 10, left: 50})\r\n                        .x(function (d) { return d.label || d.key || d.x; })\r\n                        .y(function (d) { return d.value; })\r\n                        .showValues(true)\r\n                        .staggerLabels(true) \r\n                        .showXAxis(true)\r\n                        .showYAxis(true)\r\n                        .valueFormat(<any>d3.format('d'))\r\n                        .duration(0)\r\n                        .height(height)\r\n                        .color(function(d) {\r\n                            return vm.data[d.series].color || materialColorToRgba(colors[d.series]);\r\n                        });\r\n\r\n                    chart.tooltip.enabled(false);\r\n                    chart.noData('There is no data right now...');\r\n\r\n                    chart.yAxis\r\n                        .tickFormat(function (d) {\r\n                            return vm.yTickFormat ? vm.yTickFormat(d) : d;\r\n                        });\r\n\r\n                    chart.xAxis\r\n                        .tickFormat(function (d) {\r\n                            return vm.xTickFormat ? vm.xTickFormat(d) : d;\r\n                        });\r\n\r\n                    chartElem = d3.select($element.get(0))\r\n                        .select('.bar-chart svg')\r\n                        .datum(vm.data)\r\n                        .style('height', '285px')\r\n                        .call(chart);\r\n\r\n                    nv.utils.windowResize(() => {\r\n                        chart.update();\r\n                         configBarWidthAndLabel(0);\r\n                         drawEmptyState();\r\n                    });\r\n\r\n                    return chart;\r\n                }, function () {\r\n\r\n                    $timeout(configBarWidthAndLabel, 0);\r\n                    drawEmptyState();\r\n                });\r\n\r\n                function drawEmptyState() {\r\n                    if ($element.find('.nv-noData').length === 0) {\r\n                        d3.select($element.find('.empty-state')[0]).remove();\r\n                    } else {\r\n                        let g = chartElem.append('g').classed('empty-state', true),\r\n                            width = $element.find('.nvd3-svg').innerWidth(),\r\n                            margin = width * 0.1;\r\n\r\n                        g.append('g')\r\n                            .style('fill', 'rgba(0, 0, 0, 0.08)')\r\n                            .append('rect')\r\n                            .attr('height', height - 10)\r\n                            .attr('width', 38);\r\n\r\n                        g.append('g')\r\n                            .attr('transform', 'translate(42, 60)')\r\n                            .style('fill', 'rgba(0, 0, 0, 0.08)')\r\n                            .append('rect')\r\n                            .attr('height', 200)\r\n                            .attr('width', 38);\r\n\r\n                        g.append('g')\r\n                            .attr('transform', 'translate(84, 160)')\r\n                            .style('fill', 'rgba(0, 0, 0, 0.08)')\r\n                            .append('rect')\r\n                            .attr('height', 100)\r\n                            .attr('width', 38);\r\n\r\n                        g.attr('transform', 'translate(' + (50 + margin) + ', 0), ' + 'scale(' + ((width - 2*margin) / 126) + ', 1)' );\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Aligns value label according to parent container size.\r\n                 * @return {void}\r\n                 */\r\n                function configBarWidthAndLabel(timeout: number = 1000) {\r\n                    var labels = $element.find('.nv-bar text'),\r\n                        chartBars = $element.find('.nv-bar'),\r\n                        parentHeight = (<any>$element.find('.nvd3-svg')[0]).getBBox().height;\r\n\r\n                    d3.select($element.find('.bar-chart')[0]).classed('visible', true);\r\n\r\n                    chartBars.each(function (index, item) {\r\n                        var barHeight = Number(d3.select(<any>item).select('rect').attr('height')),\r\n                            barWidth = Number(d3.select(<any>item).select('rect').attr('width')),\r\n                            element = d3.select(<any>item),\r\n                            x = d3.transform(element.attr('transform')).translate[0],\r\n                            y = d3.transform(element.attr('transform')).translate[1];\r\n\r\n                        element\r\n                            .attr('transform', 'translate(' + Number(x + index * (barWidth + 15)) + ', ' + (height - 20) + ')')\r\n                            .select('rect').attr('height', 0);\r\n\r\n                        element\r\n                            .transition()\r\n                            .duration(timeout)\r\n                            .attr('transform', 'translate(' + Number(x + index * (barWidth + 15)) + ', ' + y + ')')\r\n                            .select('rect').attr('height', barHeight);\r\n\r\n                        d3.select(labels[index])\r\n                            .attr('dy', barHeight / 2 + 10)\r\n                            .attr('x', barWidth / 2);\r\n                    });\r\n                }\r\n\r\n                /**\r\n                 * Converts palette color name into RGBA color representation.\r\n                 * Should by replaced by palette for charts.\r\n                 *\r\n                 * @param {string} color    Name of color from AM palette\r\n                 * @returns {string} RGBa format\r\n                 */\r\n                function materialColorToRgba(color) {\r\n                    return 'rgba(' + $mdColorPalette[color][500].value[0] + ','\r\n                        + $mdColorPalette[color][500].value[1] + ','\r\n                        + $mdColorPalette[color][500].value[2] + ','\r\n                        + ($mdColorPalette[color][500].value[3] || 1) + ')';\r\n                }\r\n\r\n                /**\r\n                 * Helpful method\r\n                 * @private\r\n                 */\r\n                function getMaterialColor(index) {\r\n                    if (!colors || colors.length < 1) return null;\r\n\r\n                    if (index >= colors.length) {\r\n                        index = 0;\r\n                    }\r\n\r\n                    return materialColorToRgba(colors[index]);\r\n                } \r\n                /**\r\n                 * Helpful method\r\n                 * @private\r\n                 */\r\n                function generateParameterColor() {\r\n                    if (!vm.data) return;\r\n\r\n                    vm.data.forEach(function (item, index) {\r\n                        if (item.values[0]) {\r\n                            item.values[0].color = item.values[0].color || getMaterialColor(index);\r\n                            item.color = item.values[0].color;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        };\r\n    }\r\n})();","﻿/**\r\n * @file Registration of chart WebUI controls\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('pipCharts', [\r\n        'pipBarCharts',\r\n        'pipLineCharts',\r\n        'pipPieCharts',\r\n        'pipChartLegends',\r\n        'pipCharts.Templates'\r\n    ]);\r\n\r\n})();\r\n\r\n","(function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc module\r\n     * @name pipLegends\r\n     *\r\n     * @description\r\n     * Legend of charts\r\n     */\r\n    angular.module('pipChartLegends', [])\r\n        .directive('pipChartLegend', pipChartLegend);\r\n\r\n    function pipChartLegend() {\r\n        return {\r\n            restrict: 'E',\r\n            scope: {\r\n                series: '=pipSeries',\r\n                interactive: '=pipInteractive'\r\n            },\r\n            templateUrl: 'legend/interactive_legend.html',\r\n            controller: function ($element, $scope, $timeout, $mdColorPalette) {\r\n                var colors = _.map($mdColorPalette, function (palette) {\r\n                    return palette[500].hex;\r\n                });\r\n                colors = _.filter(colors, function(color){\r\n                    return color !== undefined && color !== null;\r\n                });  \r\n                function colorCheckboxes() {\r\n                    var checkboxContainers = $($element).find('md-checkbox .md-container');\r\n\r\n                    checkboxContainers.each(function (index, item) {\r\n                        if (index >= $scope.series.length) {\r\n                            return \r\n                        }\r\n                        $(item)\r\n                            .css('color', $scope.series[index].color || colors[index])\r\n                            .find('.md-icon')\r\n                            .css('background-color', $scope.series[index].color || colors[index]);\r\n                    });\r\n                }\r\n\r\n                function animate() {\r\n                    var legendTitles = $($element).find('.chart-legend-item');\r\n\r\n                    legendTitles.each(function (index, item) {\r\n                        $timeout(function () {\r\n                            $(item).addClass('visible');\r\n                        }, 200 * index);\r\n                    });\r\n                }\r\n                \r\n                function prepareSeries() {\r\n                    if (!$scope.series) return;\r\n\r\n                    $scope.series.forEach(function (item, index) {\r\n                        item.color = item.color || (item.values && item.values[0] && item.values[0].color ? item.values[0].color : colors[index]);\r\n                        item.disabled = item.disabled || false;\r\n                    });   \r\n                }\r\n\r\n                $scope.$watch('series', function () {\r\n                    $timeout(function () {\r\n                        animate();\r\n                        colorCheckboxes();\r\n                    }, 0);\r\n                    prepareSeries();\r\n                }, true);\r\n\r\n                $scope.$watch('interactive', function (newValue, oldValue) {\r\n                    if (newValue == true && newValue != oldValue) {\r\n                        $timeout(colorCheckboxes, 0);\r\n                    }\r\n                });\r\n\r\n                $timeout(function () {\r\n                    animate();\r\n                    colorCheckboxes();\r\n                }, 0);\r\n                prepareSeries();\r\n            }\r\n        };\r\n    }\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc module\r\n     * @name pipLineCharts\r\n     *\r\n     * @description\r\n     * Line chart on top of Rickshaw charts\r\n     */\r\n    angular.module('pipLineCharts', [])\r\n        .directive('pipLineChart', pipLineChart);\r\n\r\n    function pipLineChart() {\r\n        return {\r\n            restrict: 'E',\r\n            scope: {\r\n                series: '=pipSeries',\r\n                showYAxis: '=pipYAxis',\r\n                showXAxis: '=pipXAxis',\r\n                xFormat: '=pipXFormat',\r\n                xTickFormat: '=pipXTickFormat',\r\n                yTickFormat: '=pipYTickFormat',\r\n                xTickValues: '=pipXTickValues',\r\n                dynamic: '=pipDynamic',\r\n                fixedHeight: '@pipDiagramHeight',\r\n                dynamicHeight: '@pipDynamicHeight',\r\n                minHeight: '@pipMinHeight',\r\n                maxHeight: '@pipMaxHeight',\r\n                interactiveLegend: '=pipInterLegend'\r\n            },\r\n            bindToController: true,\r\n            controllerAs: 'lineChart',\r\n            templateUrl: 'line/line_chart.html',\r\n            controller: function ($element, $scope, $timeout, $interval, $mdColorPalette) {\r\n                var vm        = this;\r\n                var chart     = null;\r\n                var chartElem = null;\r\n                var setZoom = null;\r\n                var updateZoomOptions = null;\r\n                var fixedHeight = vm.fixedHeight || 270;\r\n                var dynamicHeight = vm.dynamicHeight || false;\r\n                var minHeight = vm.minHeight || fixedHeight;\r\n                var maxHeight = vm.maxHeight || fixedHeight;\r\n\r\n                var filteredColor = _.filter($mdColorPalette, function(palette, color){\r\n                    return _.isObject(color) && _.isObject(color[500] && _.isArray(color[500].value));\r\n                });\r\n                var colors = _.map(filteredColor, function (palette, color) {\r\n                    return color;\r\n                });\r\n                colors = _.filter(colors, function(color){\r\n                    return _.isObject($mdColorPalette[color]) && _.isObject($mdColorPalette[color][500] && _.isArray($mdColorPalette[color][500].value));\r\n                });\r\n                vm.data = prepareData(vm.series) || [];\r\n                vm.legend = _.clone(vm.series);\r\n                vm.sourceEvents = [];\r\n                \r\n                vm.isVisibleX = function () {\r\n                    return vm.showXAxis == undefined ? true : vm.showXAxis; \r\n                };\r\n\r\n                vm.isVisibleY = function () {\r\n                    return vm.showYAxis == undefined ? true : vm.showYAxis;\r\n                };\r\n\r\n                vm.zoomIn = function () {\r\n                    if (setZoom) {\r\n                        setZoom('in');\r\n                    }\r\n                };\r\n\r\n                vm.zoomOut = function () {\r\n                    if (setZoom) {\r\n                        setZoom('out');\r\n                    }\r\n                };\r\n                \r\n                if (vm.series && vm.series.length > colors.length) {\r\n                    vm.data = vm.series.slice(0, 9);\r\n                }\r\n\r\n                // Sets colors of items\r\n                generateParameterColor();\r\n\r\n                (<any>d3.scale).paletteColors = function () {\r\n                    return d3.scale.ordinal().range(colors.map(materialColorToRgba));\r\n                };\r\n\r\n                $scope.$watch('lineChart.series', function (updatedSeries) {\r\n                    vm.data = prepareData(updatedSeries);\r\n                    vm.legend = _.clone(vm.series);\r\n\r\n                    generateParameterColor();\r\n\r\n                    if (chart) {\r\n                         chart.xAxis\r\n                            .tickValues(vm.xTickValues && _.isArray(vm.xTickValues) && vm.xTickValues.length > 2 ? \r\n                                d3.range(vm.xTickValues[0], vm.xTickValues[1], vm.xTickValues[2]) : null);\r\n\r\n                        chartElem.datum(vm.data || []).call(chart);\r\n                        drawEmptyState();\r\n                        \r\n                        if (updateZoomOptions) updateZoomOptions(vm.data);\r\n                    }\r\n                }, true);\r\n\r\n                $scope.$watch('lineChart.legend', function(updatedLegend) {\r\n                    vm.data = prepareData(updatedLegend);\r\n                    vm.legend = updatedLegend;\r\n\r\n                    if (chart) {\r\n                        chartElem.datum(vm.data || []).call(chart);\r\n                        drawEmptyState();\r\n\r\n                        if (updateZoomOptions) updateZoomOptions(vm.data);\r\n                    }\r\n                }, true);\r\n\r\n                $scope.$on('$destroy', () => {\r\n                   setTimeout(()=> {d3.selectAll('.nvtooltip').style('opacity', 0); }, 800)\r\n                });\r\n\r\n                function prepareData(data) {\r\n                    let result = [];\r\n                    _.each(data, (seria) => {\r\n                        if (!seria.disabled && seria.values) result.push(seria);\r\n                    });\r\n\r\n                    return _.cloneDeep(result);\r\n                }\r\n\r\n                var getHeight = () => {\r\n                    if (dynamicHeight) {\r\n                        const heigth = Math.min(Math.max(minHeight, $element.parent().innerHeight()), maxHeight);\r\n                        return heigth;\r\n                    } else {\r\n                        return fixedHeight;\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Instantiate chart\r\n                 */\r\n                nv.addGraph(() => {\r\n                    chart = nv.models.lineChart()\r\n                        .margin({ top: 20, right: 20, bottom: 30, left: 30 })\r\n                        .x(function (d) {\r\n                            return (d !== undefined && d.x !== undefined) ? (vm.xFormat ? vm.xFormat(d.x) : d.x) : d;\r\n                        })\r\n                        .y(function (d) {\r\n                            return (d !== undefined && d.value !== undefined) ? d.value : d;\r\n                        })\r\n                        .height(getHeight() - 50)\r\n                        .useInteractiveGuideline(true)\r\n                        .showXAxis(true)\r\n                        .showYAxis(true)\r\n                        .showLegend(false)\r\n                        .color(function(d) {\r\n                            return d.color || (<any>d3.scale).paletteColors().range();\r\n                        });\r\n\r\n                    chart.tooltip.enabled(false);\r\n                    chart.noData('There is no data right now...');\r\n\r\n                    chart.yAxis\r\n                        .tickFormat(function (d) {\r\n                            return vm.yTickFormat ? vm.yTickFormat(d) : d;\r\n                        });\r\n\r\n                    chart.xAxis\r\n                        .tickFormat(function (d) {\r\n                            return vm.xTickFormat ? vm.xTickFormat(d) : d;\r\n                        })\r\n                        .tickValues(vm.xTickValues && _.isArray(vm.xTickValues) && vm.xTickValues.length > 2 ? \r\n                                d3.range(vm.xTickValues[0], vm.xTickValues[1], vm.xTickValues[2]) : null);\r\n\r\n                    chartElem = d3.select($element.get(0)).select('.line-chart svg');\r\n                    chartElem.datum(vm.data || []).style('height', (getHeight() - 50) + 'px').call(chart);\r\n                    // Handle touches for correcting tooltip position\r\n                    $('.line-chart svg').on('touchstart touchmove', (e) => { \r\n                        setTimeout(() => {\r\n                            let tooltip = $('.nvtooltip'),\r\n                                tooltipW = tooltip.innerWidth(),\r\n                                bodyWidth = $('body').innerWidth(),\r\n                                x = e.originalEvent['touches'][0]['pageX'],\r\n                                y = e.originalEvent['touches'][0]['pageY'];\r\n\r\n                            tooltip.css('transform', 'translate(' \r\n                                + (x + tooltipW >= bodyWidth ? (x - tooltipW) : x) + ',' \r\n                                + y + ')');\r\n                            tooltip.css('left', 0); \r\n                            tooltip.css('top', 0);\r\n                        }); \r\n                    });\r\n\r\n                    $('.line-chart svg').on('touchstart touchend', (e) => { \r\n                        let removeTooltip = () => {\r\n                            let tooltip = $('.nvtooltip');\r\n                            tooltip.css('opacity', 0);\r\n                        };\r\n\r\n                        removeTooltip();\r\n\r\n                        setTimeout(() => {\r\n                            removeTooltip();\r\n                        }, 500); \r\n                    });\r\n\r\n                    if (vm.dynamic) {\r\n                        addZoom(chart, chartElem);\r\n                    }\r\n\r\n                    nv.utils.windowResize(() => { onResize(); });\r\n\r\n                    $scope.$on('pipMainResized', () => { onResize(); });\r\n\r\n                    return chart;\r\n                }, () => {\r\n                    drawEmptyState();\r\n                });\r\n\r\n                function onResize() {\r\n                    chart.height(getHeight() - 50);\r\n                    chartElem.style('height', (getHeight() - 50) + 'px');\r\n                    chart.update();\r\n                    drawEmptyState();\r\n                }\r\n\r\n                function drawEmptyState() {\r\n                    if (!$element.find('text.nv-noData').get(0)) {\r\n                        d3.select($element.find('.empty-state')[0]).remove();\r\n                    } else {\r\n                        let containerWidth = $element.find('.line-chart').innerWidth(),\r\n                            containerHeight = $element.find('.line-chart').innerHeight();\r\n                        \r\n                        if ($element.find('.empty-state').get(0)) {\r\n                            chartElem\r\n                                .select('image')\r\n                                .attr('transform', 'scale(' + (containerWidth / 1151) + ',' + (containerHeight / 216) + ')');\r\n                        } else {\r\n                            chartElem\r\n                                .append(\"defs\")\r\n                                .append(\"pattern\")\r\n                                .attr(\"height\", 1)\r\n                                .attr(\"width\", 1)\r\n                                .attr(\"x\", \"0\")\r\n                                .attr(\"y\", \"0\")\r\n                                .attr(\"id\", \"bg\")\r\n                                .append(\"image\")\r\n                                .attr('x', 17)\r\n                                .attr('y', 0)\r\n                                .attr('height', \"216px\")\r\n                                .attr('width', \"1151px\")\r\n                                .attr('transform', 'scale(' + (containerWidth / 1151) + ',' + (containerHeight / 216) + ')')\r\n                                .attr(\"xlink:href\", \"images/line_chart_empty_state.svg\");\r\n\r\n                            chartElem\r\n                                .append('rect')\r\n                                .classed('empty-state', true)\r\n                                .attr('height', \"100%\")\r\n                                .attr('width', \"100%\")\r\n                                .attr('fill', 'url(#bg)');\r\n                        }\r\n                    }\r\n                }\r\n\r\n                function updateScroll(domains, boundary) {\r\n                    var bDiff = boundary[1] - boundary[0],\r\n                        domDiff = domains[1] - domains[0],\r\n                        isEqual = (domains[1] - domains[0])/bDiff === 1;\r\n\r\n                    $($element[0]).find('.visual-scroll')\r\n                        .css('opacity', function () {\r\n                            return isEqual ? 0 : 1;\r\n                        });\r\n\r\n                    if (isEqual) return;\r\n                    \r\n                    $($element[0]).find('.scrolled-block')\r\n                        .css('left', function () {\r\n                            return domains[0]/bDiff * 100 + '%';\r\n                        })\r\n                        .css('width', function () {\r\n                            return domDiff/bDiff * 100 + '%';\r\n                        });\r\n                }\r\n\r\n                function addZoom(chart, svg) {\r\n                    // scaleExtent\r\n                    var scaleExtent = 4;\r\n\r\n                    // parameters\r\n                    var yAxis       = null;\r\n                    var xAxis       = null;\r\n                    var xDomain     = null;\r\n                    var yDomain     = null;\r\n                    var redraw      = null;\r\n                    var svg         = svg;\r\n\r\n                    // scales\r\n                    var xScale = null;\r\n                    var yScale = null;\r\n\r\n                    // min/max boundaries\r\n                    var x_boundary = null;\r\n                    var y_boundary = null;\r\n\r\n                    // create d3 zoom handler\r\n                    var d3zoom = d3.behavior.zoom();\r\n                    var prevXDomain = null;\r\n                    var prevScale = null;\r\n                    var prevTranslate = null;\r\n\r\n                    setData(chart);\r\n\r\n                    function setData(newChart) {\r\n                        // parameters\r\n                        yAxis       = newChart.yAxis;\r\n                        xAxis       = newChart.xAxis;\r\n                        xDomain     = newChart.xDomain || xAxis.scale().domain;\r\n                        yDomain     = newChart.yDomain || yAxis.scale().domain;\r\n                        redraw      = newChart.update;\r\n\r\n                        // scales\r\n                        xScale = xAxis.scale();\r\n                        yScale = yAxis.scale();\r\n\r\n                        // min/max boundaries\r\n                        x_boundary = xAxis.scale().domain().slice();\r\n                        y_boundary = yAxis.scale().domain().slice();\r\n\r\n                        // create d3 zoom handler\r\n                        prevXDomain = x_boundary;\r\n                        prevScale = d3zoom.scale();\r\n                        prevTranslate = d3zoom.translate();\r\n\r\n                        // ensure nice axis\r\n                        xScale.nice();\r\n                        yScale.nice();\r\n                    }\r\n\r\n                    // fix domain\r\n                    function fixDomain(domain, boundary, scale, translate) {\r\n                        if (domain[0] < boundary[0]) {\r\n                            domain[0] = boundary[0];\r\n                            if (prevXDomain[0] !== boundary[0] || scale !== prevScale) {\r\n                                domain[1] += (boundary[0] - domain[0]);\r\n                            } else {\r\n                                domain[1] = prevXDomain[1];\r\n                                translate = _.clone(prevTranslate);\r\n                            }\r\n\r\n                        }\r\n                        if (domain[1] > boundary[1]) {\r\n                            domain[1] = boundary[1];\r\n                            if (prevXDomain[1] !== boundary[1] || scale !== prevScale) {\r\n                                domain[0] -= (domain[1] - boundary[1]);\r\n                            } else {\r\n                                domain[0] = prevXDomain[0];\r\n                                translate = _.clone(prevTranslate);\r\n                            }\r\n                        }\r\n\r\n                        d3zoom.translate(translate);\r\n                        prevXDomain = _.clone(domain);\r\n                        prevScale = _.clone(scale);\r\n                        prevTranslate = _.clone(translate);\r\n                        return domain;\r\n                    }\r\n\r\n                    function updateChart() {\r\n                        d3zoom.scale(1);\r\n                        d3zoom.translate([0,0]);\r\n                        xScale.domain(x_boundary);\r\n                        d3zoom.x(xScale).y(yScale);\r\n                        svg.call(d3zoom);\r\n                    }\r\n\r\n                    // zoom event handler\r\n                    function zoomed() {\r\n                        // Switch off vertical zooming temporary\r\n                        // yDomain(yScale.domain());\r\n\r\n                        if ((<any>d3.event).scale === 1) {\r\n                            unzoomed();\r\n                            updateChart();\r\n                        } else {\r\n                            xDomain(fixDomain(xScale.domain(), x_boundary, (<any>d3.event).scale, (<any>d3.event).translate));\r\n                            redraw();\r\n                        }\r\n\r\n                        updateScroll(xScale.domain(), x_boundary);\r\n                    }\r\n\r\n                    //\r\n                    setZoom = function(which) {\r\n                        var center0 = [svg[0][0].getBBox().width / 2, svg[0][0].getBBox().height / 2];\r\n                        var translate0 = d3zoom.translate(), coordinates0 = coordinates(center0);\r\n\r\n                        if (which === 'in') {\r\n                            if (prevScale < scaleExtent) d3zoom.scale(prevScale + 0.2);\r\n                        } else {\r\n                            if (prevScale > 1) d3zoom.scale(prevScale - 0.2);\r\n                        }\r\n\r\n                        var center1 = point(coordinates0);\r\n                        d3zoom.translate([translate0[0] + center0[0] - center1[0], translate0[1] + center0[1] - center1[1]]);\r\n\r\n                        d3zoom.event(svg);\r\n                    };\r\n\r\n                    function step(which) {\r\n                        var translate = d3zoom.translate();\r\n\r\n                        if (which === 'right') {\r\n                            translate[0] -= 20;\r\n                        } else {\r\n                            translate[0] += 20;\r\n                        }\r\n\r\n                        d3zoom.translate(translate);\r\n                        d3zoom.event(svg);\r\n                    }\r\n\r\n                    function coordinates(point) {\r\n                        var scale = d3zoom.scale(), translate = d3zoom.translate();\r\n                        return [(point[0] - translate[0]) / scale, (point[1] - translate[1]) / scale];\r\n                    }\r\n\r\n                    function point(coordinates) {\r\n                        var scale = d3zoom.scale(), translate = d3zoom.translate();\r\n                        return [coordinates[0] * scale + translate[0], coordinates[1] * scale + translate[1]];\r\n                    }\r\n\r\n                    function keypress() {\r\n                        switch((<any>d3.event).keyCode) {\r\n                            case 39: step('right'); break;\r\n                            case 37: step('left'); break;\r\n                            case 107: setZoom('in'); break;\r\n                            case 109: setZoom('out');\r\n                        }\r\n                    }\r\n\r\n                    // zoom event handler\r\n                    function unzoomed() {\r\n                        xDomain(x_boundary);\r\n                        redraw();\r\n                        d3zoom.scale(1);\r\n                        d3zoom.translate([0,0]);\r\n                        prevScale = 1;\r\n                        prevTranslate = [0,0];\r\n                    }\r\n\r\n                    // initialize wrapper\r\n                    d3zoom.x(xScale)\r\n                        .y(yScale)\r\n                        .scaleExtent([1, scaleExtent])\r\n                        .on('zoom', zoomed);\r\n\r\n                    // add handler\r\n                    svg.call(d3zoom).on('dblclick.zoom', unzoomed);\r\n                    $($element.get(0)).addClass('dynamic');\r\n\r\n                    // add keyboard handlers\r\n                    svg\r\n                        .attr('focusable', false)\r\n                        .style('outline', 'none')\r\n                        .on('keydown', keypress)\r\n                        .on('focus', function () {});\r\n\r\n                    var getXMinMax = function(data) {\r\n                        var maxVal, minVal = null;\r\n\r\n                        for(var i=0;i<data.length;i++) {\r\n                            if (!data[i].disabled) {\r\n                                var tempMinVal = d3.max(data[i].values, function(d: any) { return vm.xFormat ? vm.xFormat(d.x) : d.x;} );\r\n                                var tempMaxVal = d3.min(data[i].values, function(d: any) { return vm.xFormat ? vm.xFormat(d.x) : d.x;} );\r\n                                minVal = (!minVal || tempMinVal < minVal) ? tempMinVal : minVal;\r\n                                maxVal = (!maxVal || tempMaxVal > maxVal) ? tempMaxVal : maxVal;\r\n                            }\r\n                        }\r\n                        return [maxVal, minVal];\r\n                    };\r\n\r\n                    updateZoomOptions = function(data) {\r\n                        yAxis = chart.yAxis;\r\n                        xAxis = chart.xAxis;\r\n\r\n                        xScale = xAxis.scale();\r\n                        yScale = yAxis.scale();\r\n\r\n                        x_boundary = getXMinMax(data);\r\n\r\n                        if (d3zoom.scale() === 1) {\r\n                            d3zoom.x(xScale).y(yScale);\r\n                            svg.call(d3zoom);\r\n                            d3zoom.event(svg);\r\n                        }\r\n\r\n                        updateScroll(xScale.domain(), x_boundary);\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Converts palette color name into RGBA color representation.\r\n                 * Should by replaced by palette for charts.\r\n                 *\r\n                 * @param {string} color    Name of color from AM palette\r\n                 * @returns {string} RGBa format\r\n                 */\r\n                function materialColorToRgba(color) {\r\n                    return 'rgba(' + $mdColorPalette[color][500].value[0] + ','\r\n                        + $mdColorPalette[color][500].value[1] + ','\r\n                        + $mdColorPalette[color][500].value[2] + ','\r\n                        + ($mdColorPalette[color][500].value[3] || 1) + ')';\r\n                }\r\n\r\n                /**\r\n                 * Helpful method\r\n                 * @private\r\n                 */\r\n                function getMaterialColor(index) {\r\n                    if (!colors || colors.length < 1) return null;\r\n\r\n                    if (index >= colors.length) {\r\n                        index = 0;\r\n                    }\r\n\r\n                    return materialColorToRgba(colors[index]);\r\n                }                \r\n                /**\r\n                 * Helpful method\r\n                 * @private\r\n                 */\r\n                function generateParameterColor() {\r\n                    if (!vm.data) return;\r\n\r\n                    vm.data.forEach(function (item, index) {\r\n                        item.color = item.color || getMaterialColor(index);\r\n                    });\r\n                }\r\n            }\r\n        };\r\n    }\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc module\r\n     * @name pipPieCharts\r\n     *\r\n     * @description\r\n     * Line chart on top of Rickshaw charts\r\n     */\r\n    angular.module('pipPieCharts', [])\r\n        .directive('pipPieChart', pipPieChart);\r\n\r\n    function pipPieChart() {\r\n        return {\r\n            restrict: 'E',\r\n            scope: {\r\n                series: '=pipSeries',\r\n                donut: '=pipDonut',\r\n                legend: '=pipShowLegend',\r\n                total: '=pipShowTotal',\r\n                size: '=pipPieSize',\r\n                centered: '=pipCentered'\r\n            },\r\n            bindToController: true,\r\n            controllerAs: 'pieChart',\r\n            templateUrl: 'pie/pie_chart.html',\r\n            controller: function ($element, $scope, $timeout, $interval, $mdColorPalette) {\r\n                var vm               = this;\r\n                var chart            = null;\r\n                var titleElem        = null;\r\n                var chartElem        = null;\r\n                var colors           = _.map($mdColorPalette, function (palette, color) {\r\n                    return color;\r\n                });\r\n                colors = _.filter(colors, function(color){\r\n                    return _.isObject($mdColorPalette[color]) && _.isObject($mdColorPalette[color][500] && _.isArray($mdColorPalette[color][500].value));\r\n                });                \r\n                var resizeTitleLabel = resizeTitleLabelUnwrap;\r\n\r\n                vm.data = vm.data || [];\r\n\r\n                vm.showLegend = function () {\r\n                    return vm.legend !== undefined ? vm.legend: true;\r\n                };\r\n\r\n                if (vm.series && vm.series.length > colors.length) {\r\n                    vm.data = vm.series.slice(0, 9);\r\n                }\r\n\r\n                $scope.$watch('pieChart.series', function (newVal) {\r\n                    vm.data = newVal;\r\n\r\n                    generateParameterColor();\r\n\r\n                    if (chart) {\r\n                        chartElem.datum(vm.data).call(chart);\r\n                        $timeout(resizeTitleLabel);\r\n                        drawEmptyState(d3.select($element.get(0)).select('.pie-chart svg')[0][0]);\r\n                    }\r\n                }, true);\r\n\r\n                // Sets colors of items\r\n                generateParameterColor();\r\n\r\n                (<any>d3.scale).paletteColors = function () {\r\n                    return d3.scale.ordinal().range(colors.map(materialColorToRgba));\r\n                };\r\n\r\n                /**\r\n                 * Instantiate chart\r\n                 */\r\n                nv.addGraph(() => {\r\n                    chart = nv.models.pieChart()\r\n                        .margin({ top: 0, right: 0, bottom: 0, left: 0 })\r\n                        .x(function (d) {\r\n                            return vm.donut ? d.value : null;\r\n                        })\r\n                        .y(function (d) {\r\n                            return d.value;\r\n                        })\r\n                        .height(vm.size || 250)\r\n                        .width(vm.size || 250)\r\n                        .showLabels(true)\r\n                        .labelThreshold(.001)\r\n                        .growOnHover(false)\r\n                        .donut(vm.donut)\r\n                        .donutRatio(0.5)\r\n                        .color(function(d) {\r\n                            return d.color || (<any>d3.scale).paletteColors().range();\r\n                        });\r\n\r\n                    chart.tooltip.enabled(false);\r\n                    chart.noData('There is no data right now...');\r\n                    chart.showLegend(false);\r\n\r\n                    chartElem = d3.select($element.get(0))\r\n                        .select('.pie-chart')\r\n                        .style('height', (vm.size || 250) + 'px')\r\n                        .style('width', vm.centered ? '100%' : (vm.size || 250) + 'px')\r\n                        .select('svg')\r\n                        .style('opacity', 0)\r\n                        .datum(vm.data || [])\r\n                        .call(chart);\r\n\r\n                    nv.utils.windowResize(function () {\r\n                        chart.update();\r\n                        $timeout(resizeTitleLabel);\r\n                        centerChart();\r\n                        drawEmptyState(d3.select($element.get(0)).select('.pie-chart svg')[0][0]);\r\n                    });\r\n\r\n                    return chart;\r\n                }, () => {\r\n                    $timeout(function () {\r\n                        var svgElem  = d3.select($element.get(0)).select('.pie-chart svg')[0][0];\r\n                        renderTotalLabel(svgElem);\r\n                        d3.select(svgElem)\r\n                            .transition()\r\n                            .duration(1000)\r\n                            .style('opacity', 1);\r\n                        \r\n                        $timeout(resizeTitleLabelUnwrap, 800);\r\n                        centerChart();\r\n                        drawEmptyState(svgElem);\r\n                    });\r\n                });\r\n\r\n                function drawEmptyState(svg) {\r\n                    if (!$element.find('text.nv-noData').get(0)) {\r\n                        d3.select($element.find('.empty-state')[0]).remove();\r\n                        $element.find('.pip-empty-pie-text').remove();\r\n                    } else {\r\n                    \r\n                        if ($element.find('.pip-empty-pie-text').length === 0) { \r\n                            $element.find('.pie-chart')\r\n                                .append(\"<div class='pip-empty-pie-text'>There is no data right now...</div>\");\r\n                        }\r\n\r\n                        var pie = d3.layout.pie().sort(null),\r\n                            size = Number(vm.size || 250);\r\n\r\n                        var arc = d3.svg.arc()\r\n                            .innerRadius(size / 2 - 20)\r\n                            .outerRadius(size / 2 - 57);\r\n                    \r\n                        svg = d3.select(svg)\r\n                            .append(\"g\")\r\n                            .classed('empty-state', true)\r\n                            .attr('transform', \"translate(\" + size / 2 + \",\" + size / 2 + \")\");\r\n                    \r\n                        var path = svg.selectAll(\"path\")\r\n                            .data(pie([1]))\r\n                            .enter().append(\"path\")\r\n                            .attr(\"fill\", \"rgba(0, 0, 0, 0.08)\")\r\n                            .attr(\"d\", <any>arc);\r\n                    }\r\n                }\r\n\r\n                function centerChart() {\r\n                    if (vm.centered) {\r\n                        let svgElem  = d3.select($element.get(0)).select('.pie-chart svg')[0][0],\r\n                        leftMargin = $(svgElem).innerWidth() / 2 - (vm.size || 250) / 2;\r\n                        d3.select($element.find('.nv-pieChart')[0]).attr('transform', 'translate(' + leftMargin + ', 0)');\r\n                    }\r\n                }\r\n\r\n                function renderTotalLabel(svgElem) {\r\n                    if ((!vm.total && !vm.donut) || !vm.data) return;\r\n\r\n                    let totalVal = vm.data.reduce(function (sum, curr) {\r\n                        return sum + curr.value;\r\n                    }, 0);\r\n\r\n                    if (totalVal >= 10000) totalVal = (totalVal / 1000).toFixed(1) + 'k';\r\n                    \r\n                    d3.select(svgElem)\r\n                        .select('.nv-pie:not(.nvd3)')\r\n                        .append('text')\r\n                        .classed('label-total', true)\r\n                        .attr('text-anchor', 'middle')\r\n                        .style('dominant-baseline', 'central')\r\n                        .text(totalVal);\r\n\r\n                    titleElem = d3.select($element.find('text.label-total').get(0)).style('opacity', 0);\r\n                }\r\n\r\n                function resizeTitleLabelUnwrap() {\r\n                    if ((!vm.total && !vm.donut) || !vm.data) return;\r\n\r\n                    var boxSize =  $element.find('.nvd3.nv-pieChart').get(0).getBBox();\r\n\r\n                    if (!boxSize.width || !boxSize.height) {\r\n                        return;\r\n                    }\r\n\r\n                    titleElem.style('font-size', ~~boxSize.width / 4.5).style('opacity', 1);\r\n                }\r\n\r\n                /**\r\n                 * Converts palette color name into RGBA color representation.\r\n                 * Should by replaced by palette for charts.\r\n                 *\r\n                 * @param {string} color    Name of color from AM palette\r\n                 * @returns {string} RGBa format\r\n                 */\r\n                function materialColorToRgba(color) {\r\n                    return 'rgba(' + $mdColorPalette[color][500].value[0] + ','\r\n                        + $mdColorPalette[color][500].value[1] + ','\r\n                        + $mdColorPalette[color][500].value[2] + ','\r\n                        + ($mdColorPalette[color][500].value[3] || 1) + ')';\r\n                }\r\n\r\n                /**\r\n                 * Helpful method\r\n                 * @private\r\n                 */\r\n                function getMaterialColor(index) {\r\n                    if (!colors || colors.length < 1) return null;\r\n\r\n                    if (index >= colors.length) {\r\n                        index = 0;\r\n                    }\r\n\r\n                    return materialColorToRgba(colors[index]);\r\n                } \r\n                /**\r\n                 * Helpful method\r\n                 * @private\r\n                 */\r\n                function generateParameterColor() {\r\n                    if (!vm.data) return;\r\n\r\n                    vm.data.forEach(function (item, index) {\r\n                        item.color = item.color || getMaterialColor(index);\r\n                    });\r\n                }\r\n            }\r\n        };\r\n    }\r\n})();","(function(module) {\ntry {\n  module = angular.module('pipCharts.Templates');\n} catch (e) {\n  module = angular.module('pipCharts.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('bar/bar_chart.html',\n    '<div class=\"bar-chart\"><svg></svg></div><pip-chart-legend pip-series=\"barChart.legend\" pip-interactive=\"barChart.interactiveLegend\"></pip-chart-legend>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipCharts.Templates');\n} catch (e) {\n  module = angular.module('pipCharts.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('pie/pie_chart.html',\n    '<div class=\"pie-chart\" ng-class=\"{\\'circle\\': !pieChart.donut}\"><svg class=\"flex-auto\"></svg></div><pip-chart-legend pip-series=\"pieChart.data\" pip-interactive=\"false\" ng-if=\"pieChart.showLegend()\"></pip-chart-legend>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipCharts.Templates');\n} catch (e) {\n  module = angular.module('pipCharts.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('legend/interactive_legend.html',\n    '<div><div class=\"chart-legend-item\" ng-repeat=\"item in series\" ng-show=\"item.values || item.value\"><md-checkbox ng-model=\"item.disabled\" ng-true-value=\"false\" ng-false-value=\"true\" ng-if=\"interactive\" aria-label=\"{{ item.label }}\"><p class=\"legend-item-value\" ng-if=\"item.value\" ng-style=\"{\\'background-color\\': item.color}\">{{ item.value }}</p><p class=\"legend-item-label\">{{:: item.label || item.key }}</p></md-checkbox><div ng-if=\"!interactive\"><span class=\"bullet\" ng-style=\"{\\'background-color\\': item.color}\"></span> <span>{{:: item.label || item.key}}</span></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipCharts.Templates');\n} catch (e) {\n  module = angular.module('pipCharts.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('line/line_chart.html',\n    '<div class=\"line-chart\" flex=\"auto\" layout=\"column\"><svg class=\"flex-auto\" ng-class=\"{\\'visible-x-axis\\': lineChart.isVisibleX(), \\'visible-y-axis\\': lineChart.isVisibleY()}\"></svg><div class=\"scroll-container\"><div class=\"visual-scroll\"><div class=\"scrolled-block\"></div></div></div><md-button class=\"md-fab md-mini minus-button\" ng-click=\"lineChart.zoomOut()\"><md-icon md-svg-icon=\"icons:minus-circle\"></md-icon></md-button><md-button class=\"md-fab md-mini plus-button\" ng-click=\"lineChart.zoomIn()\"><md-icon md-svg-icon=\"icons:plus-circle\"></md-icon></md-button></div><pip-chart-legend pip-series=\"lineChart.legend\" pip-interactive=\"lineChart.interactiveLegend\"></pip-chart-legend>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-charts-html.min.js.map\n"]}