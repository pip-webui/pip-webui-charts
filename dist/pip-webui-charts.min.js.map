{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/bar/barChart.ts","src/index.ts","src/legend/interactiveLegend.ts","src/line/line_chart.ts","src/pie/pieChart.ts","src/utility/ChartsUtilityService.ts","temp/pip-webui-charts-html.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","charts","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","BarChartBindings","series","xTickFormat","yTickFormat","interactiveLegend","BarChartController","BarChartBindingsChanges","$element","$scope","$timeout","pipChartsUtility","_this","chart","height","colors","generateMaterialColors","$watch","updatedLegend","data","prepareData","legend","updateChart","prototype","$onInit","_","clone","generateParameterColor","d3","scale","paletteColors","ordinal","range","map","color","materialColorToRgba","instantiateChart","$onChanges","changes","currentValue","previousValue","chartElem","datum","configBarWidthAndLabel","drawEmptyState","nv","addGraph","models","discreteBarChart","margin","top","right","bottom","left","x","d","label","key","y","value","showValues","staggerLabels","showXAxis","showYAxis","valueFormat","format","duration","tooltip","enabled","noData","yAxis","tickFormat","xAxis","select","get","style","utils","windowResize","update","result","each","seria","disabled","values","push","cloneDeep","find","remove","append","classed","width","innerWidth","attr","timeout","labels","chartBars","getBBox","item","index","barHeight","Number","barWidth","element","transform","translate","transition","getMaterialColor","BarChart","bindings","templateUrl","controller","angular","component","ChartLegendBindings","interactive","ChartLegendController","ChartLegendBindingsChanges","updateLegends","colorCheckboxes","animate","prepareSeries","checkboxContainers","$","css","legendTitles","addClass","materialColor","ChartLegend","pipLineChart","restrict","scope","xFormat","xTickValues","dynamic","fixedHeight","dynamicHeight","minHeight","maxHeight","bindToController","controllerAs","$interval","$mdColorPalette","onResize","getHeight","containerWidth","containerHeight","innerHeight","updateScroll","domains","boundary","bDiff","domDiff","isEqual","addZoom","svg","setData","newChart","xDomain","domain","yDomain","redraw","xScale","yScale","x_boundary","slice","y_boundary","prevXDomain","prevScale","d3zoom","prevTranslate","nice","fixDomain","zoomed","event","unzoomed","step","which","coordinates","point","keypress","keyCode","setZoom","scaleExtent","behavior","zoom","center0","translate0","coordinates0","center1","on","getXMinMax","maxVal","minVal","tempMinVal","max","vm","tempMaxVal","min","updateZoomOptions","forEach","filteredColor","filter","palette","isObject","isArray","sourceEvents","isVisibleX","undefined","isVisibleY","zoomIn","zoomOut","updatedSeries","tickValues","$on","setTimeout","selectAll","heigth","Math","parent","lineChart","useInteractiveGuideline","showLegend","tooltipW","bodyWidth","originalEvent","removeTooltip","directive","PieChartBindings","donut","total","size","centered","PieChartController","PieChartBindingsChanges","resizeTitleLabelUnwrap","pieChart","showLabels","labelThreshold","growOnHover","donutRatio","centerChart","svgElem","renderTotalLabel","pie","layout","sort","arc","innerRadius","outerRadius","enter","leftMargin","totalVal","reduce","sum","curr","toFixed","text","titleElem","boxSize","PieChart","ChartsUtilityService","$inject","service","8","run","$templateCache","put"],"mappings":"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","file":"pip-webui-charts.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import {\r\n    IChartsUtilityService\r\n} from '../utility/IChartsUtilityService';\r\n\r\n{\r\n    interface IBarChartBindings {\r\n        [key: string]: any;\r\n\r\n        series: any;\r\n        xTickFormat: any;\r\n        yTickFormat: any;\r\n        interactiveLegend: any;\r\n    }\r\n\r\n    const BarChartBindings: IBarChartBindings = {\r\n        series: '<pipSeries',\r\n        xTickFormat: '<?pipXTickFormat',\r\n        yTickFormat: '<?pipYTickFormat',\r\n        interactiveLegend: '<?pipInterLegend'\r\n    }\r\n\r\n    class BarChartBindingsChanges implements IBarChartBindings, ng.IOnChangesObject {\r\n        [key: string]: any;\r\n\r\n        series: ng.IChangesObject < any > ;\r\n        xTickFormat: ng.IChangesObject < any > ;\r\n        yTickFormat: ng.IChangesObject < any > ;\r\n        interactiveLegend: ng.IChangesObject < boolean > ;\r\n    }\r\n\r\n    class BarChartController implements ng.IController, IBarChartBindings {\r\n        public series: any;\r\n        public xTickFormat: any;\r\n        public yTickFormat: any;\r\n        public interactiveLegend: boolean;\r\n        public legend: any;\r\n\r\n        private data: any;\r\n        private chart: nv.DiscreteBarChart = null;\r\n        private chartElem: any;\r\n        private colors: string[];\r\n        private height: number = 270;\r\n\r\n        constructor(\r\n            private $element: JQuery,\r\n            private $scope: ng.IScope,\r\n            private $timeout: ng.ITimeoutService,\r\n            private pipChartsUtility: IChartsUtilityService\r\n        ) {\r\n            this.colors = this.pipChartsUtility.generateMaterialColors();\r\n            $scope.$watch('$ctrl.legend', (updatedLegend) => {\r\n                if (!updatedLegend) return;\r\n\r\n                this.data = this.prepareData(updatedLegend);\r\n                this.legend = updatedLegend;\r\n\r\n                this.updateChart();\r\n            }, true);\r\n        }\r\n\r\n        public $onInit() {\r\n            this.data = this.prepareData(this.series);\r\n            this.legend = _.clone(this.series);\r\n            this.generateParameterColor();\r\n            ( < any > d3.scale).paletteColors = () => {\r\n                return d3.scale.ordinal().range(this.colors.map((color) => {\r\n                    return this.pipChartsUtility.materialColorToRgba(color);\r\n                }));\r\n            };\r\n\r\n            this.instantiateChart();\r\n        }\r\n\r\n        public $onChanges(changes: BarChartBindingsChanges) {\r\n            this.xTickFormat = changes.xTickFormat ? changes.xTickFormat.currentValue : null;\r\n            this.yTickFormat = changes.yTickFormat ? changes.yTickFormat.currentValue : null;\r\n            this.interactiveLegend = changes.interactiveLegend ? changes.interactiveLegend.currentValue : null;\r\n\r\n            if (changes.series && changes.series.currentValue !== changes.series.previousValue) {\r\n                this.series = changes.series.currentValue;\r\n                this.data = this.prepareData(this.series);\r\n                this.legend = _.clone(this.series);\r\n                this.generateParameterColor();\r\n                this.updateChart();\r\n            }\r\n        }\r\n\r\n        private updateChart() {\r\n            if (this.chart) {\r\n                this.chartElem.datum(this.data).call(this.chart);\r\n                this.configBarWidthAndLabel();\r\n                this.drawEmptyState();\r\n            }\r\n        }\r\n\r\n        private instantiateChart() {\r\n            nv.addGraph(() => {\r\n                this.chart = nv.models.discreteBarChart()\r\n                    .margin({\r\n                        top: 10,\r\n                        right: 0,\r\n                        bottom: 10,\r\n                        left: 50\r\n                    })\r\n                    .x((d) => {\r\n                        return d.label || d.key || d.x;\r\n                    })\r\n                    .y((d) => {\r\n                        return d.value;\r\n                    })\r\n                    .showValues(true)\r\n                    .staggerLabels(true)\r\n                    .showXAxis(true)\r\n                    .showYAxis(true)\r\n                    .valueFormat( < any > d3.format('d'))\r\n                    .duration(0)\r\n                    .height(this.height)\r\n                    .color((d) => {\r\n                        return this.data[d.series].color || this.pipChartsUtility.materialColorToRgba(this.colors[d.series]);\r\n                    });\r\n\r\n                this.chart.tooltip.enabled(false);\r\n                this.chart.noData('There is no data right now...');\r\n\r\n                this.chart.yAxis\r\n                    .tickFormat((d) => {\r\n                        return this.yTickFormat ? this.yTickFormat(d) : d;\r\n                    });\r\n\r\n                this.chart.xAxis\r\n                    .tickFormat((d) => {\r\n                        return this.xTickFormat ? this.xTickFormat(d) : d;\r\n                    });\r\n\r\n                this.chartElem = < any > d3.select(this.$element.get(0))\r\n                    .select('.bar-chart svg')\r\n                    .datum(this.data)\r\n                    .style('height', '285px')\r\n                    .call(this.chart);\r\n\r\n                nv.utils.windowResize(() => {\r\n                    this.chart.update();\r\n                    this.configBarWidthAndLabel(0);\r\n                    this.drawEmptyState();\r\n                });\r\n\r\n                return this.chart;\r\n            }, () => {\r\n                this.$timeout(() => {\r\n                    this.configBarWidthAndLabel();\r\n                }, 0);\r\n                this.drawEmptyState();\r\n            });\r\n        }\r\n\r\n        private prepareData(data): any {\r\n            const result = [];\r\n            _.each(data, (seria) => {\r\n                if (!seria.disabled && seria.values) result.push(seria);\r\n            });\r\n            return _.cloneDeep(result);\r\n        }\r\n\r\n        private drawEmptyState() {\r\n            if (this.$element.find('.nv-noData').length === 0) {\r\n                d3.select(this.$element.find('.empty-state')[0]).remove();\r\n            } else {\r\n                const g = this.chartElem.append('g').classed('empty-state', true),\r\n                    width = this.$element.find('.nvd3-svg').innerWidth(),\r\n                    margin = width * 0.1;\r\n\r\n                g.append('g')\r\n                    .style('fill', 'rgba(0, 0, 0, 0.08)')\r\n                    .append('rect')\r\n                    .attr('height', this.height - 10)\r\n                    .attr('width', 38);\r\n\r\n                g.append('g')\r\n                    .attr('transform', 'translate(42, 60)')\r\n                    .style('fill', 'rgba(0, 0, 0, 0.08)')\r\n                    .append('rect')\r\n                    .attr('height', 200)\r\n                    .attr('width', 38);\r\n\r\n                g.append('g')\r\n                    .attr('transform', 'translate(84, 160)')\r\n                    .style('fill', 'rgba(0, 0, 0, 0.08)')\r\n                    .append('rect')\r\n                    .attr('height', 100)\r\n                    .attr('width', 38);\r\n\r\n                g.attr('transform', 'translate(' + (50 + margin) + ', 0), ' + 'scale(' + ((width - 2 * margin) / 126) + ', 1)');\r\n            }\r\n        }\r\n\r\n        private configBarWidthAndLabel(timeout: number = 1000) {\r\n            const labels = this.$element.find('.nv-bar text'),\r\n                chartBars = this.$element.find('.nv-bar'),\r\n                parentHeight = ( < any > this.$element.find('.nvd3-svg')[0]).getBBox().height;\r\n\r\n            d3.select(this.$element.find('.bar-chart')[0]).classed('visible', true);\r\n\r\n            _.each(chartBars, (item: EventTarget, index: number) => {\r\n                const barHeight = Number(d3.select(item).select('rect').attr('height')),\r\n                    barWidth = Number(d3.select(item).select('rect').attr('width')),\r\n                    element = d3.select(item),\r\n                    x = d3.transform(element.attr('transform')).translate[0],\r\n                    y = d3.transform(element.attr('transform')).translate[1];\r\n\r\n                element\r\n                    .attr('transform', 'translate(' + Number(x + index * (barWidth + 15)) + ', ' + (this.height - 20) + ')')\r\n                    .select('rect').attr('height', 0);\r\n\r\n                element\r\n                    .transition()\r\n                    .duration(timeout)\r\n                    .attr('transform', 'translate(' + Number(x + index * (barWidth + 15)) + ', ' + y + ')')\r\n                    .select('rect').attr('height', barHeight);\r\n\r\n                d3.select(labels[index])\r\n                    .attr('dy', barHeight / 2 + 10)\r\n                    .attr('x', barWidth / 2);\r\n            });\r\n        }\r\n\r\n        private generateParameterColor() {\r\n            if (!this.data) return;\r\n\r\n            _.each(this.data, (item: any, index: number) => {\r\n                if (item.values[0]) {\r\n                    item.values[0].color = item.values[0].color || this.pipChartsUtility.getMaterialColor(index, this.colors);\r\n                    item.color = item.values[0].color;\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    const BarChart: ng.IComponentOptions = {\r\n        bindings: BarChartBindings,\r\n        templateUrl: 'bar/barChart.html',\r\n        controller: BarChartController\r\n    }\r\n\r\n    angular.module('pipBarCharts', [])\r\n        .component('pipBarChart', BarChart);\r\n}","﻿angular.module('pipCharts', [\r\n    'pipBarCharts',\r\n    'pipLineCharts',\r\n    'pipPieCharts',\r\n    'pipChartLegends',\r\n    'pipChartsUtility',\r\n    'pipCharts.Templates'\r\n]);","import {\r\n    IChartsUtilityService\r\n} from '../utility/IChartsUtilityService';\r\n\r\n{\r\n    interface IChartLegendBindings {\r\n        [key: string]: any;\r\n\r\n        series: any;\r\n        interactive: any;\r\n    }\r\n\r\n    const ChartLegendBindings: IChartLegendBindings = {\r\n        series: '<pipSeries',\r\n        interactive: '<pipInteractive'\r\n    }\r\n\r\n    class ChartLegendBindingsChanges implements ng.IOnChangesObject, IChartLegendBindings {\r\n        [key: string]: any;\r\n\r\n        series: ng.IChangesObject < any > ;\r\n        interactive: ng.IChangesObject < boolean > ;\r\n    }\r\n\r\n    class ChartLegendController implements ng.IController, IChartLegendBindings {\r\n        public series: any;\r\n        public interactive: boolean;\r\n\r\n        private colors: string[];\r\n\r\n        constructor(\r\n            private $element: JQuery,\r\n            private $scope: ng.IScope,\r\n            private $timeout: ng.ITimeoutService,\r\n            private pipChartsUtility: IChartsUtilityService\r\n        ) {\r\n            this.colors = this.pipChartsUtility.generateMaterialColors();\r\n        }\r\n\r\n        public $onInit() {\r\n            this.updateLegends();\r\n        }\r\n\r\n        public $onChanges(changes: ChartLegendBindingsChanges) {\r\n            if (changes.series && changes.series.currentValue !== changes.series.previousValue) {\r\n                this.series = changes.series.currentValue;\r\n                this.updateLegends();\r\n            }\r\n\r\n            if (changes.interactive && changes.interactive.currentValue !== changes.interactive.previousValue) {\r\n                this.interactive = changes.interactive.currentValue;\r\n                if (this.interactive === true) {\r\n                    this.$timeout(() => {\r\n                        this.colorCheckboxes();\r\n                    }, 0);\r\n                }\r\n            }\r\n        }\r\n\r\n        private updateLegends() {\r\n            this.$timeout(() => {\r\n                this.animate();\r\n                this.colorCheckboxes();\r\n            }, 0);\r\n            this.prepareSeries();\r\n        }\r\n\r\n        private colorCheckboxes() {\r\n            const checkboxContainers = this.$element.find('md-checkbox .md-container');\r\n\r\n            _.each(checkboxContainers, (item: EventTarget, index: number) => {\r\n                if (index >= this.series.length) {\r\n                    return\r\n                }\r\n                $(item)\r\n                    .css('color', this.series[index].color || this.colors[index])\r\n                    .find('.md-icon')\r\n                    .css('background-color', this.series[index].color || this.colors[index]);\r\n            });\r\n        }\r\n\r\n        private animate() {\r\n            const legendTitles = this.$element.find('.chart-legend-item');\r\n\r\n            _.each(legendTitles, (item: EventTarget, index: number) => {\r\n                this.$timeout(() => {\r\n                    $(item).addClass('visible');\r\n                }, 200 * index);\r\n            });\r\n        }\r\n\r\n        private prepareSeries() {\r\n            if (!this.series) return;\r\n\r\n            _.each(this.series, (item: any, index: number) => {\r\n                const materialColor = this.pipChartsUtility.getMaterialColor(index, this.colors);\r\n                item.color = item.color || (item.values && item.values[0] && item.values[0].color ? item.values[0].color : materialColor);\r\n                item.disabled = item.disabled || false;\r\n            });\r\n        }\r\n    }\r\n\r\n    const ChartLegend: ng.IComponentOptions = {\r\n        bindings: ChartLegendBindings,\r\n        templateUrl: 'legend/interactiveLegend.html',\r\n        controller: ChartLegendController\r\n    }\r\n\r\n    angular.module('pipChartLegends', [])\r\n        .component('pipChartLegend', ChartLegend);\r\n}","(function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc module\r\n     * @name pipLineCharts\r\n     *\r\n     * @description\r\n     * Line chart on top of Rickshaw charts\r\n     */\r\n    angular.module('pipLineCharts', [])\r\n        .directive('pipLineChart', pipLineChart);\r\n\r\n    function pipLineChart() {\r\n        return {\r\n            restrict: 'E',\r\n            scope: {\r\n                series: '=pipSeries',\r\n                showYAxis: '=pipYAxis',\r\n                showXAxis: '=pipXAxis',\r\n                xFormat: '=pipXFormat',\r\n                xTickFormat: '=pipXTickFormat',\r\n                yTickFormat: '=pipYTickFormat',\r\n                xTickValues: '=pipXTickValues',\r\n                dynamic: '=pipDynamic',\r\n                fixedHeight: '@pipDiagramHeight',\r\n                dynamicHeight: '@pipDynamicHeight',\r\n                minHeight: '@pipMinHeight',\r\n                maxHeight: '@pipMaxHeight',\r\n                interactiveLegend: '=pipInterLegend'\r\n            },\r\n            bindToController: true,\r\n            controllerAs: 'lineChart',\r\n            templateUrl: 'line/line_chart.html',\r\n            controller: function ($element, $scope, $timeout, $interval, $mdColorPalette) {\r\n                var vm        = this;\r\n                var chart     = null;\r\n                var chartElem = null;\r\n                var setZoom = null;\r\n                var updateZoomOptions = null;\r\n                var fixedHeight = vm.fixedHeight || 270;\r\n                var dynamicHeight = vm.dynamicHeight || false;\r\n                var minHeight = vm.minHeight || fixedHeight;\r\n                var maxHeight = vm.maxHeight || fixedHeight;\r\n\r\n                var filteredColor = _.filter($mdColorPalette, function(palette, color){\r\n                    return _.isObject(color) && _.isObject(color[500] && _.isArray(color[500].value));\r\n                });\r\n                var colors = _.map(filteredColor, function (palette, color) {\r\n                    return color;\r\n                });\r\n                colors = _.filter(colors, function(color){\r\n                    return _.isObject($mdColorPalette[color]) && _.isObject($mdColorPalette[color][500] && _.isArray($mdColorPalette[color][500].value));\r\n                });\r\n                vm.data = prepareData(vm.series) || [];\r\n                vm.legend = _.clone(vm.series);\r\n                vm.sourceEvents = [];\r\n                \r\n                vm.isVisibleX = function () {\r\n                    return vm.showXAxis == undefined ? true : vm.showXAxis; \r\n                };\r\n\r\n                vm.isVisibleY = function () {\r\n                    return vm.showYAxis == undefined ? true : vm.showYAxis;\r\n                };\r\n\r\n                vm.zoomIn = function () {\r\n                    if (setZoom) {\r\n                        setZoom('in');\r\n                    }\r\n                };\r\n\r\n                vm.zoomOut = function () {\r\n                    if (setZoom) {\r\n                        setZoom('out');\r\n                    }\r\n                };\r\n                \r\n                if (vm.series && vm.series.length > colors.length) {\r\n                    vm.data = vm.series.slice(0, 9);\r\n                }\r\n\r\n                // Sets colors of items\r\n                generateParameterColor();\r\n\r\n                (<any>d3.scale).paletteColors = function () {\r\n                    return d3.scale.ordinal().range(colors.map(materialColorToRgba));\r\n                };\r\n\r\n                $scope.$watch('lineChart.series', function (updatedSeries) {\r\n                    vm.data = prepareData(updatedSeries);\r\n                    vm.legend = _.clone(vm.series);\r\n\r\n                    generateParameterColor();\r\n\r\n                    if (chart) {\r\n                         chart.xAxis\r\n                            .tickValues(vm.xTickValues && _.isArray(vm.xTickValues) && vm.xTickValues.length > 2 ? \r\n                                d3.range(vm.xTickValues[0], vm.xTickValues[1], vm.xTickValues[2]) : null);\r\n\r\n                        chartElem.datum(vm.data || []).call(chart);\r\n                        drawEmptyState();\r\n                        \r\n                        if (updateZoomOptions) updateZoomOptions(vm.data);\r\n                    }\r\n                }, true);\r\n\r\n                $scope.$watch('lineChart.legend', function(updatedLegend) {\r\n                    vm.data = prepareData(updatedLegend);\r\n                    vm.legend = updatedLegend;\r\n\r\n                    if (chart) {\r\n                        chartElem.datum(vm.data || []).call(chart);\r\n                        drawEmptyState();\r\n\r\n                        if (updateZoomOptions) updateZoomOptions(vm.data);\r\n                    }\r\n                }, true);\r\n\r\n                $scope.$on('$destroy', () => {\r\n                   setTimeout(()=> {d3.selectAll('.nvtooltip').style('opacity', 0); }, 800)\r\n                });\r\n\r\n                function prepareData(data) {\r\n                    let result = [];\r\n                    _.each(data, (seria) => {\r\n                        if (!seria.disabled && seria.values) result.push(seria);\r\n                    });\r\n\r\n                    return _.cloneDeep(result);\r\n                }\r\n\r\n                var getHeight = () => {\r\n                    if (dynamicHeight) {\r\n                        const heigth = Math.min(Math.max(minHeight, $element.parent().innerHeight()), maxHeight);\r\n                        return heigth;\r\n                    } else {\r\n                        return fixedHeight;\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Instantiate chart\r\n                 */\r\n                nv.addGraph(() => {\r\n                    chart = nv.models.lineChart()\r\n                        .margin({ top: 20, right: 20, bottom: 30, left: 30 })\r\n                        .x(function (d) {\r\n                            return (d !== undefined && d.x !== undefined) ? (vm.xFormat ? vm.xFormat(d.x) : d.x) : d;\r\n                        })\r\n                        .y(function (d) {\r\n                            return (d !== undefined && d.value !== undefined) ? d.value : d;\r\n                        })\r\n                        .height(getHeight() - 50)\r\n                        .useInteractiveGuideline(true)\r\n                        .showXAxis(true)\r\n                        .showYAxis(true)\r\n                        .showLegend(false)\r\n                        .color(function(d) {\r\n                            return d.color || (<any>d3.scale).paletteColors().range();\r\n                        });\r\n\r\n                    chart.tooltip.enabled(false);\r\n                    chart.noData('There is no data right now...');\r\n\r\n                    chart.yAxis\r\n                        .tickFormat(function (d) {\r\n                            return vm.yTickFormat ? vm.yTickFormat(d) : d;\r\n                        });\r\n\r\n                    chart.xAxis\r\n                        .tickFormat(function (d) {\r\n                            return vm.xTickFormat ? vm.xTickFormat(d) : d;\r\n                        })\r\n                        .tickValues(vm.xTickValues && _.isArray(vm.xTickValues) && vm.xTickValues.length > 2 ? \r\n                                d3.range(vm.xTickValues[0], vm.xTickValues[1], vm.xTickValues[2]) : null);\r\n\r\n                    chartElem = d3.select($element.get(0)).select('.line-chart svg');\r\n                    chartElem.datum(vm.data || []).style('height', (getHeight() - 50) + 'px').call(chart);\r\n                    // Handle touches for correcting tooltip position\r\n                    $('.line-chart svg').on('touchstart touchmove', (e) => { \r\n                        setTimeout(() => {\r\n                            let tooltip = $('.nvtooltip'),\r\n                                tooltipW = tooltip.innerWidth(),\r\n                                bodyWidth = $('body').innerWidth(),\r\n                                x = e.originalEvent['touches'][0]['pageX'],\r\n                                y = e.originalEvent['touches'][0]['pageY'];\r\n\r\n                            tooltip.css('transform', 'translate(' \r\n                                + (x + tooltipW >= bodyWidth ? (x - tooltipW) : x) + ',' \r\n                                + y + ')');\r\n                            tooltip.css('left', 0); \r\n                            tooltip.css('top', 0);\r\n                        }); \r\n                    });\r\n\r\n                    $('.line-chart svg').on('touchstart touchend', (e) => { \r\n                        let removeTooltip = () => {\r\n                            let tooltip = $('.nvtooltip');\r\n                            tooltip.css('opacity', 0);\r\n                        };\r\n\r\n                        removeTooltip();\r\n\r\n                        setTimeout(() => {\r\n                            removeTooltip();\r\n                        }, 500); \r\n                    });\r\n\r\n                    if (vm.dynamic) {\r\n                        addZoom(chart, chartElem);\r\n                    }\r\n\r\n                    nv.utils.windowResize(() => { onResize(); });\r\n\r\n                    $scope.$on('pipMainResized', () => { onResize(); });\r\n\r\n                    return chart;\r\n                }, () => {\r\n                    drawEmptyState();\r\n                });\r\n\r\n                function onResize() {\r\n                    chart.height(getHeight() - 50);\r\n                    chartElem.style('height', (getHeight() - 50) + 'px');\r\n                    chart.update();\r\n                    drawEmptyState();\r\n                }\r\n\r\n                function drawEmptyState() {\r\n                    if (!$element.find('text.nv-noData').get(0)) {\r\n                        d3.select($element.find('.empty-state')[0]).remove();\r\n                    } else {\r\n                        let containerWidth = $element.find('.line-chart').innerWidth(),\r\n                            containerHeight = $element.find('.line-chart').innerHeight();\r\n                        \r\n                        if ($element.find('.empty-state').get(0)) {\r\n                            chartElem\r\n                                .select('image')\r\n                                .attr('transform', 'scale(' + (containerWidth / 1151) + ',' + (containerHeight / 216) + ')');\r\n                        } else {\r\n                            chartElem\r\n                                .append(\"defs\")\r\n                                .append(\"pattern\")\r\n                                .attr(\"height\", 1)\r\n                                .attr(\"width\", 1)\r\n                                .attr(\"x\", \"0\")\r\n                                .attr(\"y\", \"0\")\r\n                                .attr(\"id\", \"bg\")\r\n                                .append(\"image\")\r\n                                .attr('x', 17)\r\n                                .attr('y', 0)\r\n                                .attr('height', \"216px\")\r\n                                .attr('width', \"1151px\")\r\n                                .attr('transform', 'scale(' + (containerWidth / 1151) + ',' + (containerHeight / 216) + ')')\r\n                                .attr(\"xlink:href\", \"images/line_chart_empty_state.svg\");\r\n\r\n                            chartElem\r\n                                .append('rect')\r\n                                .classed('empty-state', true)\r\n                                .attr('height', \"100%\")\r\n                                .attr('width', \"100%\")\r\n                                .attr('fill', 'url(#bg)');\r\n                        }\r\n                    }\r\n                }\r\n\r\n                function updateScroll(domains, boundary) {\r\n                    var bDiff = boundary[1] - boundary[0],\r\n                        domDiff = domains[1] - domains[0],\r\n                        isEqual = (domains[1] - domains[0])/bDiff === 1;\r\n\r\n                    $($element[0]).find('.visual-scroll')\r\n                        .css('opacity', function () {\r\n                            return isEqual ? 0 : 1;\r\n                        });\r\n\r\n                    if (isEqual) return;\r\n                    \r\n                    $($element[0]).find('.scrolled-block')\r\n                        .css('left', function () {\r\n                            return domains[0]/bDiff * 100 + '%';\r\n                        })\r\n                        .css('width', function () {\r\n                            return domDiff/bDiff * 100 + '%';\r\n                        });\r\n                }\r\n\r\n                function addZoom(chart, svg) {\r\n                    // scaleExtent\r\n                    var scaleExtent = 4;\r\n\r\n                    // parameters\r\n                    var yAxis       = null;\r\n                    var xAxis       = null;\r\n                    var xDomain     = null;\r\n                    var yDomain     = null;\r\n                    var redraw      = null;\r\n                    var svg         = svg;\r\n\r\n                    // scales\r\n                    var xScale = null;\r\n                    var yScale = null;\r\n\r\n                    // min/max boundaries\r\n                    var x_boundary = null;\r\n                    var y_boundary = null;\r\n\r\n                    // create d3 zoom handler\r\n                    var d3zoom = d3.behavior.zoom();\r\n                    var prevXDomain = null;\r\n                    var prevScale = null;\r\n                    var prevTranslate = null;\r\n\r\n                    setData(chart);\r\n\r\n                    function setData(newChart) {\r\n                        // parameters\r\n                        yAxis       = newChart.yAxis;\r\n                        xAxis       = newChart.xAxis;\r\n                        xDomain     = newChart.xDomain || xAxis.scale().domain;\r\n                        yDomain     = newChart.yDomain || yAxis.scale().domain;\r\n                        redraw      = newChart.update;\r\n\r\n                        // scales\r\n                        xScale = xAxis.scale();\r\n                        yScale = yAxis.scale();\r\n\r\n                        // min/max boundaries\r\n                        x_boundary = xAxis.scale().domain().slice();\r\n                        y_boundary = yAxis.scale().domain().slice();\r\n\r\n                        // create d3 zoom handler\r\n                        prevXDomain = x_boundary;\r\n                        prevScale = d3zoom.scale();\r\n                        prevTranslate = d3zoom.translate();\r\n\r\n                        // ensure nice axis\r\n                        xScale.nice();\r\n                        yScale.nice();\r\n                    }\r\n\r\n                    // fix domain\r\n                    function fixDomain(domain, boundary, scale, translate) {\r\n                        if (domain[0] < boundary[0]) {\r\n                            domain[0] = boundary[0];\r\n                            if (prevXDomain[0] !== boundary[0] || scale !== prevScale) {\r\n                                domain[1] += (boundary[0] - domain[0]);\r\n                            } else {\r\n                                domain[1] = prevXDomain[1];\r\n                                translate = _.clone(prevTranslate);\r\n                            }\r\n\r\n                        }\r\n                        if (domain[1] > boundary[1]) {\r\n                            domain[1] = boundary[1];\r\n                            if (prevXDomain[1] !== boundary[1] || scale !== prevScale) {\r\n                                domain[0] -= (domain[1] - boundary[1]);\r\n                            } else {\r\n                                domain[0] = prevXDomain[0];\r\n                                translate = _.clone(prevTranslate);\r\n                            }\r\n                        }\r\n\r\n                        d3zoom.translate(translate);\r\n                        prevXDomain = _.clone(domain);\r\n                        prevScale = _.clone(scale);\r\n                        prevTranslate = _.clone(translate);\r\n                        return domain;\r\n                    }\r\n\r\n                    function updateChart() {\r\n                        d3zoom.scale(1);\r\n                        d3zoom.translate([0,0]);\r\n                        xScale.domain(x_boundary);\r\n                        d3zoom.x(xScale).y(yScale);\r\n                        svg.call(d3zoom);\r\n                    }\r\n\r\n                    // zoom event handler\r\n                    function zoomed() {\r\n                        // Switch off vertical zooming temporary\r\n                        // yDomain(yScale.domain());\r\n\r\n                        if ((<any>d3.event).scale === 1) {\r\n                            unzoomed();\r\n                            updateChart();\r\n                        } else {\r\n                            xDomain(fixDomain(xScale.domain(), x_boundary, (<any>d3.event).scale, (<any>d3.event).translate));\r\n                            redraw();\r\n                        }\r\n\r\n                        updateScroll(xScale.domain(), x_boundary);\r\n                    }\r\n\r\n                    //\r\n                    setZoom = function(which) {\r\n                        var center0 = [svg[0][0].getBBox().width / 2, svg[0][0].getBBox().height / 2];\r\n                        var translate0 = d3zoom.translate(), coordinates0 = coordinates(center0);\r\n\r\n                        if (which === 'in') {\r\n                            if (prevScale < scaleExtent) d3zoom.scale(prevScale + 0.2);\r\n                        } else {\r\n                            if (prevScale > 1) d3zoom.scale(prevScale - 0.2);\r\n                        }\r\n\r\n                        var center1 = point(coordinates0);\r\n                        d3zoom.translate([translate0[0] + center0[0] - center1[0], translate0[1] + center0[1] - center1[1]]);\r\n\r\n                        d3zoom.event(svg);\r\n                    };\r\n\r\n                    function step(which) {\r\n                        var translate = d3zoom.translate();\r\n\r\n                        if (which === 'right') {\r\n                            translate[0] -= 20;\r\n                        } else {\r\n                            translate[0] += 20;\r\n                        }\r\n\r\n                        d3zoom.translate(translate);\r\n                        d3zoom.event(svg);\r\n                    }\r\n\r\n                    function coordinates(point) {\r\n                        var scale = d3zoom.scale(), translate = d3zoom.translate();\r\n                        return [(point[0] - translate[0]) / scale, (point[1] - translate[1]) / scale];\r\n                    }\r\n\r\n                    function point(coordinates) {\r\n                        var scale = d3zoom.scale(), translate = d3zoom.translate();\r\n                        return [coordinates[0] * scale + translate[0], coordinates[1] * scale + translate[1]];\r\n                    }\r\n\r\n                    function keypress() {\r\n                        switch((<any>d3.event).keyCode) {\r\n                            case 39: step('right'); break;\r\n                            case 37: step('left'); break;\r\n                            case 107: setZoom('in'); break;\r\n                            case 109: setZoom('out');\r\n                        }\r\n                    }\r\n\r\n                    // zoom event handler\r\n                    function unzoomed() {\r\n                        xDomain(x_boundary);\r\n                        redraw();\r\n                        d3zoom.scale(1);\r\n                        d3zoom.translate([0,0]);\r\n                        prevScale = 1;\r\n                        prevTranslate = [0,0];\r\n                    }\r\n\r\n                    // initialize wrapper\r\n                    d3zoom.x(xScale)\r\n                        .y(yScale)\r\n                        .scaleExtent([1, scaleExtent])\r\n                        .on('zoom', zoomed);\r\n\r\n                    // add handler\r\n                    svg.call(d3zoom).on('dblclick.zoom', unzoomed);\r\n                    $($element.get(0)).addClass('dynamic');\r\n\r\n                    // add keyboard handlers\r\n                    svg\r\n                        .attr('focusable', false)\r\n                        .style('outline', 'none')\r\n                        .on('keydown', keypress)\r\n                        .on('focus', function () {});\r\n\r\n                    var getXMinMax = function(data) {\r\n                        var maxVal, minVal = null;\r\n\r\n                        for(var i=0;i<data.length;i++) {\r\n                            if (!data[i].disabled) {\r\n                                var tempMinVal = d3.max(data[i].values, function(d: any) { return vm.xFormat ? vm.xFormat(d.x) : d.x;} );\r\n                                var tempMaxVal = d3.min(data[i].values, function(d: any) { return vm.xFormat ? vm.xFormat(d.x) : d.x;} );\r\n                                minVal = (!minVal || tempMinVal < minVal) ? tempMinVal : minVal;\r\n                                maxVal = (!maxVal || tempMaxVal > maxVal) ? tempMaxVal : maxVal;\r\n                            }\r\n                        }\r\n                        return [maxVal, minVal];\r\n                    };\r\n\r\n                    updateZoomOptions = function(data) {\r\n                        yAxis = chart.yAxis;\r\n                        xAxis = chart.xAxis;\r\n\r\n                        xScale = xAxis.scale();\r\n                        yScale = yAxis.scale();\r\n\r\n                        x_boundary = getXMinMax(data);\r\n\r\n                        if (d3zoom.scale() === 1) {\r\n                            d3zoom.x(xScale).y(yScale);\r\n                            svg.call(d3zoom);\r\n                            d3zoom.event(svg);\r\n                        }\r\n\r\n                        updateScroll(xScale.domain(), x_boundary);\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Converts palette color name into RGBA color representation.\r\n                 * Should by replaced by palette for charts.\r\n                 *\r\n                 * @param {string} color    Name of color from AM palette\r\n                 * @returns {string} RGBa format\r\n                 */\r\n                function materialColorToRgba(color) {\r\n                    return 'rgba(' + $mdColorPalette[color][500].value[0] + ','\r\n                        + $mdColorPalette[color][500].value[1] + ','\r\n                        + $mdColorPalette[color][500].value[2] + ','\r\n                        + ($mdColorPalette[color][500].value[3] || 1) + ')';\r\n                }\r\n\r\n                /**\r\n                 * Helpful method\r\n                 * @private\r\n                 */\r\n                function getMaterialColor(index) {\r\n                    if (!colors || colors.length < 1) return null;\r\n\r\n                    if (index >= colors.length) {\r\n                        index = 0;\r\n                    }\r\n\r\n                    return materialColorToRgba(colors[index]);\r\n                }                \r\n                /**\r\n                 * Helpful method\r\n                 * @private\r\n                 */\r\n                function generateParameterColor() {\r\n                    if (!vm.data) return;\r\n\r\n                    vm.data.forEach(function (item, index) {\r\n                        item.color = item.color || getMaterialColor(index);\r\n                    });\r\n                }\r\n            }\r\n        };\r\n    }\r\n})();","import {\r\n    IChartsUtilityService\r\n} from '../utility/IChartsUtilityService';\r\n\r\n{\r\n    interface IPieChartBindings {\r\n        [key: string]: any;\r\n\r\n        series: any;\r\n        donut: any;\r\n        legend: any;\r\n        total: any;\r\n        size: any;\r\n        centered: any;\r\n    }\r\n\r\n    const PieChartBindings: IPieChartBindings = {\r\n        series: '<pipSeries',\r\n        donut: '<?pipDonut',\r\n        legend: '<?pipShowLegend',\r\n        total: '<?pipShowTotal',\r\n        size: '<?pipPieSize',\r\n        centered: '<?pipCentered'\r\n    }\r\n\r\n    class PieChartBindingsChanges implements ng.IOnChangesObject, IPieChartBindings {\r\n        [key: string]: any;\r\n\r\n        series: ng.IChangesObject < any > ;\r\n        donut: ng.IChangesObject < boolean > ;\r\n        legend: ng.IChangesObject < boolean > ;\r\n        total: ng.IChangesObject < boolean > ;\r\n        size: ng.IChangesObject < number | string > ;\r\n        centered: ng.IChangesObject < boolean > ;\r\n    }\r\n\r\n    class PieChartController implements ng.IController, IPieChartBindings {\r\n        public series: any;\r\n        public donut: boolean = false;\r\n        public legend: boolean = true;\r\n        public total: boolean = true;\r\n        public size: number | string = 250;\r\n        public centered: boolean = false;\r\n\r\n        private data: any;\r\n        private chart: nv.PieChart = null;\r\n        private chartElem: any;\r\n        private titleElem: any;\r\n        private colors: string[];\r\n\r\n        constructor(\r\n            private $element: JQuery,\r\n            private $scope: ng.IScope,\r\n            private $timeout: ng.ITimeoutService,\r\n            private pipChartsUtility: IChartsUtilityService\r\n        ) {\r\n            this.colors = this.pipChartsUtility.generateMaterialColors();\r\n        }\r\n\r\n        public $onInit() {\r\n            this.data = this.series;\r\n            this.generateParameterColor();\r\n            ( < any > d3.scale).paletteColors = () => {\r\n                return d3.scale.ordinal().range(this.colors.map((color) => {\r\n                    return this.pipChartsUtility.materialColorToRgba(color);\r\n                }));\r\n            };\r\n\r\n            this.instantiateChart();\r\n        }\r\n\r\n        public $onChanges(changes: PieChartBindingsChanges) {\r\n            this.legend = changes.legend ? changes.legend.currentValue : this.legend;\r\n            this.centered = changes.centered ? changes.centered.currentValue : this.centered;\r\n            this.donut = changes.donut ? changes.donut.currentValue : this.donut;\r\n            this.size = changes.size ? changes.size.currentValue : this.size;\r\n            this.total = changes.total ? changes.total.currentValue : this.total;\r\n\r\n            if (changes.series && changes.series.currentValue !== changes.series.previousValue) {\r\n                this.data = changes.series.currentValue;\r\n                this.generateParameterColor();\r\n\r\n                if (this.chart) {\r\n                    this.chartElem.datum(this.data).call(this.chart);\r\n                    this.$timeout(() => {\r\n                        this.resizeTitleLabelUnwrap();\r\n                    });\r\n                    this.drawEmptyState(d3.select(this.$element.get(0)).select('.pie-chart svg')[0][0]);\r\n                }\r\n            }\r\n        }\r\n\r\n        private instantiateChart() {\r\n            nv.addGraph(() => {\r\n                this.chart = nv.models.pieChart()\r\n                    .margin({\r\n                        top: 0,\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        left: 0\r\n                    })\r\n                    .x((d) => {\r\n                        return this.donut ? d.value : null;\r\n                    })\r\n                    .y((d) => {\r\n                        return d.value;\r\n                    })\r\n                    .height(Number(this.size))\r\n                    .width(Number(this.size))\r\n                    .showLabels(true)\r\n                    .labelThreshold(.001)\r\n                    .growOnHover(false)\r\n                    .donut(this.donut)\r\n                    .donutRatio(0.5)\r\n                    .color((d) => {\r\n                        return d.color || ( < any > d3.scale).paletteColors().range();\r\n                    });\r\n\r\n                this.chart.tooltip.enabled(false);\r\n                this.chart.noData('There is no data right now...');\r\n                this.chart.showLegend(false);\r\n\r\n                this.chartElem = d3.select(this.$element.get(0))\r\n                    .select('.pie-chart')\r\n                    .style('height', (this.size) + 'px')\r\n                    .style('width', this.centered ? '100%' : (this.size) + 'px')\r\n                    .select('svg')\r\n                    .style('opacity', 0)\r\n                    .datum(this.data || [])\r\n                    .call(this.chart);\r\n\r\n                nv.utils.windowResize(() => {\r\n                    this.chart.update();\r\n                    this.$timeout(() => {\r\n                        this.resizeTitleLabelUnwrap();\r\n                    });\r\n                    this.centerChart();\r\n                    this.drawEmptyState(d3.select(this.$element.get(0)).select('.pie-chart svg')[0][0]);\r\n                });\r\n\r\n                return this.chart;\r\n            }, () => {\r\n                this.$timeout(() => {\r\n                    const svgElem = d3.select(this.$element.get(0)).select('.pie-chart svg')[0][0];\r\n                    this.renderTotalLabel(svgElem);\r\n                    d3.select(svgElem)\r\n                        .transition()\r\n                        .duration(1000)\r\n                        .style('opacity', 1);\r\n\r\n                    this.$timeout(() => {\r\n                        this.resizeTitleLabelUnwrap();\r\n                    }, 800);\r\n                    this.centerChart();\r\n                    this.drawEmptyState(svgElem);\r\n                });\r\n            });\r\n        }\r\n\r\n        private drawEmptyState(svg) {\r\n            if (!this.$element.find('text.nv-noData').get(0)) {\r\n                d3.select(this.$element.find('.empty-state')[0]).remove();\r\n                this.$element.find('.pip-empty-pie-text').remove();\r\n            } else {\r\n                if (this.$element.find('.pip-empty-pie-text').length === 0) {\r\n                    this.$element.find('.pie-chart')\r\n                        .append(\"<div class='pip-empty-pie-text'>There is no data right now...</div>\");\r\n                }\r\n\r\n                const pie = d3.layout.pie().sort(null),\r\n                    size = Number(this.size);\r\n\r\n                const arc = d3.svg.arc()\r\n                    .innerRadius(size / 2 - 20)\r\n                    .outerRadius(size / 2 - 57);\r\n\r\n                svg = d3.select(svg)\r\n                    .append(\"g\")\r\n                    .classed('empty-state', true)\r\n                    .attr('transform', \"translate(\" + size / 2 + \",\" + size / 2 + \")\");\r\n\r\n                const path = svg.selectAll(\"path\")\r\n                    .data(pie([1]))\r\n                    .enter().append(\"path\")\r\n                    .attr(\"fill\", \"rgba(0, 0, 0, 0.08)\")\r\n                    .attr(\"d\", < any > arc);\r\n            }\r\n        }\r\n\r\n        private centerChart() {\r\n            if (this.centered) {\r\n                const svgElem = d3.select(this.$element.get(0)).select('.pie-chart svg')[0][0],\r\n                    leftMargin = $(svgElem).innerWidth() / 2 - (Number(this.size) || 250) / 2;\r\n                d3.select(this.$element.find('.nv-pieChart')[0]).attr('transform', 'translate(' + leftMargin + ', 0)');\r\n            }\r\n        }\r\n\r\n        private renderTotalLabel(svgElem) {\r\n            if ((!this.total && !this.donut) || !this.data) return;\r\n\r\n            let totalVal = this.data.reduce(function (sum, curr) {\r\n                return sum + curr.value;\r\n            }, 0);\r\n\r\n            if (totalVal >= 10000) totalVal = (totalVal / 1000).toFixed(1) + 'k';\r\n\r\n            d3.select(svgElem)\r\n                .select('.nv-pie:not(.nvd3)')\r\n                .append('text')\r\n                .classed('label-total', true)\r\n                .attr('text-anchor', 'middle')\r\n                .style('dominant-baseline', 'central')\r\n                .text(totalVal);\r\n\r\n            this.titleElem = d3.select(this.$element.find('text.label-total').get(0)).style('opacity', 0);\r\n        }\r\n\r\n        private resizeTitleLabelUnwrap() {\r\n            if ((!this.total && !this.donut) || !this.data) return;\r\n\r\n            const boxSize = ( < any > this.$element.find('.nvd3.nv-pieChart').get(0)).getBBox();\r\n\r\n            if (!boxSize.width || !boxSize.height) {\r\n                return;\r\n            }\r\n\r\n            this.titleElem.style('font-size', ~~boxSize.width / 4.5).style('opacity', 1);\r\n        }\r\n\r\n        private generateParameterColor() {\r\n            if (!this.data) return;\r\n\r\n            _.each(this.data, (item: any, index: number) => {\r\n                item.color = item.color || this.pipChartsUtility.getMaterialColor(index, this.colors);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    const PieChart: ng.IComponentOptions = {\r\n        bindings: PieChartBindings,\r\n        templateUrl: 'pie/pieChart.html',\r\n        controller: PieChartController\r\n    }\r\n\r\n    angular.module('pipPieCharts', [])\r\n        .component('pipPieChart', PieChart);\r\n}","import {\r\n    IChartsUtilityService\r\n} from './IChartsUtilityService';\r\n\r\n{\r\n    class ChartsUtilityService implements IChartsUtilityService {\r\n        constructor(\r\n            private $mdColorPalette: angular.material.IColorPalette\r\n        ) { }\r\n\r\n        public getMaterialColor(index: number, colors: string[]): string {\r\n            if (!colors || colors.length < 1) return null;\r\n\r\n            if (index >= colors.length) {\r\n                index = 0;\r\n            }\r\n\r\n            return this.materialColorToRgba(colors[index]);\r\n        }\r\n\r\n        public materialColorToRgba(color: string): string {\r\n            return 'rgba(' + this.$mdColorPalette[color][500].value[0] + ',' +\r\n                this.$mdColorPalette[color][500].value[1] + ',' +\r\n                this.$mdColorPalette[color][500].value[2] + ',' +\r\n                (this.$mdColorPalette[color][500].value[3] || 1) + ')';\r\n        }\r\n\r\n        public generateMaterialColors(): string[] {\r\n            let colors = _.map((<any>this.$mdColorPalette), (palette, color: string) => {\r\n                return color;\r\n            });\r\n            colors = _.filter(colors, (color: string) => {\r\n                return _.isObject(this.$mdColorPalette[color]) && _.isObject(this.$mdColorPalette[color][500]) && _.isArray(this.$mdColorPalette[color][500].value);\r\n            });\r\n\r\n            return colors;\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module('pipChartsUtility', [])\r\n        .service('pipChartsUtility', ChartsUtilityService);\r\n}","(function(module) {\ntry {\n  module = angular.module('pipCharts.Templates');\n} catch (e) {\n  module = angular.module('pipCharts.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('bar/barChart.html',\n    '<div class=\"bar-chart\"><svg></svg></div><pip-chart-legend ng-show=\"$ctrl.legend\" pip-series=\"$ctrl.legend\" pip-interactive=\"$ctrl.interactiveLegend\"></pip-chart-legend>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipCharts.Templates');\n} catch (e) {\n  module = angular.module('pipCharts.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('legend/interactiveLegend.html',\n    '<div><div class=\"chart-legend-item\" ng-repeat=\"item in $ctrl.series\" ng-show=\"item.values || item.value\"><md-checkbox ng-model=\"item.disabled\" ng-true-value=\"false\" ng-false-value=\"true\" ng-if=\"$ctrl.interactive\" aria-label=\"{{ item.label }}\"><p class=\"legend-item-value\" ng-if=\"item.value\" ng-style=\"{\\'background-color\\': item.color}\">{{ item.value }}</p><p class=\"legend-item-label\">{{:: item.label || item.key }}</p></md-checkbox><div ng-if=\"!$ctrl.interactive\"><span class=\"bullet\" ng-style=\"{\\'background-color\\': item.color}\"></span> <span>{{:: item.label || item.key}}</span></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipCharts.Templates');\n} catch (e) {\n  module = angular.module('pipCharts.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('line/line_chart.html',\n    '<div class=\"line-chart\" flex=\"auto\" layout=\"column\"><svg class=\"flex-auto\" ng-class=\"{\\'visible-x-axis\\': lineChart.isVisibleX(), \\'visible-y-axis\\': lineChart.isVisibleY()}\"></svg><div class=\"scroll-container\"><div class=\"visual-scroll\"><div class=\"scrolled-block\"></div></div></div><md-button class=\"md-fab md-mini minus-button\" ng-click=\"lineChart.zoomOut()\"><md-icon md-svg-icon=\"icons:minus-circle\"></md-icon></md-button><md-button class=\"md-fab md-mini plus-button\" ng-click=\"lineChart.zoomIn()\"><md-icon md-svg-icon=\"icons:plus-circle\"></md-icon></md-button></div><pip-chart-legend pip-series=\"lineChart.legend\" pip-interactive=\"lineChart.interactiveLegend\"></pip-chart-legend>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipCharts.Templates');\n} catch (e) {\n  module = angular.module('pipCharts.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('pie/pieChart.html',\n    '<div class=\"pie-chart\" ng-class=\"{\\'circle\\': !$ctrl.donut}\"><svg class=\"flex-auto\"></svg></div><pip-chart-legend pip-series=\"$ctrl.data\" pip-interactive=\"false\" ng-if=\"$ctrl.legend\"></pip-chart-legend>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-charts-html.min.js.map\n"]}