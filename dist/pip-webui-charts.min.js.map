{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/bar/bar_chart.ts","src/charts.ts","src/legend/interactive_legend.ts","src/line/line_chart.ts","src/pie/pie_chart.ts","temp/pip-webui-charts-html.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","charts","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","pipBarChart","restrict","scope","series","bindToController","controllerAs","templateUrl","controller","$element","$scope","$timeout","$interval","$mdColorPalette","configBarWidthAndLabel","labels","d3","selectAll","chartBars","parentHeight","select","getBBox","height","classed","forEach","item","index","barSize","element","y","transform","attr","translate","Number","transition","duration","materialColorToRgba","color","value","generateParameterColor","vm","legend","colors","chart","chartElem","_","map","palette","data","slice","values","scale","paletteColors","ordinal","range","$watch","updatedSeries","datum","update","nv","addGraph","models","discreteBarChart","margin","top","right","bottom","left","x","d","label","showValues","showXAxis","showYAxis","valueFormat","format","tooltip","enabled","noData","get","style","dispatch","on","angular","directive","pipChartLegend","interactive","colorCheckboxes","checkboxContainers","$","find","each","css","animate","legendTitles","addClass","prepareSeries","disabled","hex","newValue","oldValue","pipLineChart","dynamic","updateScroll","domains","boundary","bDiff","domDiff","isEqual","addZoom","svg","setData","newChart","yAxis","xAxis","xDomain","domain","yDomain","redraw","xScale","yScale","x_boundary","y_boundary","prevXDomain","prevScale","d3zoom","prevTranslate","nice","fixDomain","clone","updateChart","zoomed","event","unzoomed","step","which","coordinates","point","keypress","keyCode","setZoom","scaleExtent","behavior","zoom","center0","width","translate0","coordinates0","center1","getXMinMax","maxVal","minVal","tempMinVal","max","tempMaxVal","min","updateZoomOptions","sourceEvents","isVisibleX","undefined","isVisibleY","zoomIn","zoomOut","lineChart","useInteractiveGuideline","showLegend","tickFormat","toFixed","utils","windowResize","pipPieChart","donut","total","size","renderTotalLabel","svgElem","totalVal","reduce","sum","curr","append","text","titleElem","resizeTitleLabelUnwrap","boxSize","resizeTitleLabel","newVal","pieChart","showLabels","labelThreshold","growOnHover","donutRatio","run","$templateCache","put"],"mappings":"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","file":"pip-webui-charts.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc module\r\n     * @name pipBarCharts\r\n     *\r\n     * @description\r\n     * Bar chart on top of Rickshaw charts\r\n     */\r\n    angular.module('pipBarCharts', [])\r\n        .directive('pipBarChart', pipBarChart);\r\n\r\n    function pipBarChart() {\r\n        return {\r\n            restrict: 'E',\r\n            scope: {\r\n                series: '=pipSeries'\r\n            },\r\n            bindToController: true,\r\n            controllerAs: 'barChart',\r\n            templateUrl: 'bar/bar_chart.html',\r\n            controller: function ($element, $scope, $timeout, $interval, $mdColorPalette) {\r\n                var vm = this;\r\n                var chart = null;\r\n                var chartElem = null;\r\n                var colors = _.map($mdColorPalette, function (palette, color) {\r\n                    return color;\r\n                });\r\n\r\n                vm.data = vm.series || [];\r\n\r\n                if ((vm.series || []).length > colors.length) {\r\n                    vm.data = vm.series.slice(0, 9);\r\n                }\r\n\r\n                //colors = _.sample(colors, colors.length);\r\n\r\n                // sets legend params\r\n                vm.legend = vm.data[0].values;\r\n                \r\n                // Sets colors of items\r\n                generateParameterColor();\r\n\r\n                (<any>d3.scale).paletteColors = function () {\r\n                    return d3.scale.ordinal().range(colors.map(materialColorToRgba));\r\n                };\r\n\r\n                $scope.$watch('barChart.series', function (updatedSeries) {\r\n                    vm.data = updatedSeries || [];\r\n\r\n                    generateParameterColor();\r\n\r\n                    if (chart) {\r\n                        chartElem.datum(vm.data).call(chart);\r\n                        chart.update();\r\n                        // Todo: the method does not exist\r\n                        //intervalUpdate(chart.update, 10);\r\n                    }\r\n                });\r\n\r\n\r\n                /**\r\n                 * Instantiate chart\r\n                 */\r\n                nv.addGraph(function () {\r\n                    chart = nv.models.discreteBarChart()\r\n                        .margin({top: 10, right: 0, bottom: 0, left: -50})\r\n                        .x(function (d) { return d.label; })\r\n                        .y(function (d) { return d.value; })\r\n                        .showValues(true)\r\n                        .showXAxis(false)\r\n                        .showYAxis(false)\r\n                        .valueFormat(<any>d3.format('d'))\r\n                        .duration(0)\r\n                        .height(270)\r\n                        .color(function(d) {\r\n                            return d.color || (<any>d3.scale).paletteColors().range();\r\n                        });\r\n\r\n                    chart.tooltip.enabled(false);\r\n                    chart.noData('No data for this moment...');\r\n\r\n                    chartElem = d3.select($element.get(0))\r\n                        .select('.bar-chart svg')\r\n                        .datum(vm.data)\r\n                        .style('height', 270)\r\n                        .call(chart);\r\n\r\n                    //nv.utils.windowResize(chart.update);\r\n\r\n                    return chart;\r\n                }, function () {\r\n                    chart.dispatch.on('beforeUpdate', function () {\r\n                        $timeout(configBarWidthAndLabel, 0);\r\n                    });\r\n\r\n                    $timeout(configBarWidthAndLabel, 0);\r\n                });\r\n\r\n                /**\r\n                 * Aligns value label according to parent container size.\r\n                 * @return {void}\r\n                 */\r\n                function configBarWidthAndLabel() {\r\n                    var labels = d3.selectAll('.nv-bar text')[0],\r\n                        chartBars = d3.selectAll('.nv-bar')[0],\r\n                        parentHeight = (<any>d3.select('.nvd3-svg')[0][0]).getBBox().height;\r\n\r\n                    d3.select('.bar-chart').classed('visible', true);\r\n\r\n                    chartBars.forEach(function (item, index) {\r\n                        var barSize = (<any>item).getBBox(),\r\n                            element = d3.select(item),\r\n                            y = d3.transform(element.attr('transform')).translate[1];\r\n                        \r\n                        element\r\n                            .attr('transform', 'translate(' + Number(index * (38 + 8) + 50) + ', ' + parentHeight + ')')\r\n                            .select('rect')\r\n                            .attr('width', 38);\r\n\r\n                        element\r\n                            .transition()\r\n                            .duration(1000)\r\n                            .attr('transform', 'translate(' + Number(index * (38 + 8) + 50) + ', ' + y + ')');\r\n\r\n                        d3.select(labels[index])\r\n                            .attr('dy', barSize.height / 2)\r\n                            .attr('x', 19);\r\n                    });\r\n                }\r\n\r\n                /**\r\n                 * Converts palette color name into RGBA color representation.\r\n                 * Should by replaced by palette for charts.\r\n                 *\r\n                 * @param {string} color    Name of color from AM palette\r\n                 * @returns {string} RGBa format\r\n                 */\r\n                function materialColorToRgba(color) {\r\n                    return 'rgba(' + $mdColorPalette[color][500].value[0] + ','\r\n                        + $mdColorPalette[color][500].value[1] + ','\r\n                        + $mdColorPalette[color][500].value[2] + ','\r\n                        + ($mdColorPalette[color][500].value[3] || 1) + ')';\r\n                }\r\n\r\n                /**\r\n                 * Helpful method\r\n                 * @private\r\n                 */\r\n                function generateParameterColor() {\r\n                    vm.legend.forEach(function (item, index) {\r\n                        item.color = item.color || materialColorToRgba(colors[index]);\r\n                    });\r\n                }\r\n            }\r\n        };\r\n    }\r\n})();","﻿/**\r\n * @file Registration of chart WebUI controls\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('pipCharts', [\r\n        'pipBarCharts',\r\n        'pipLineCharts',\r\n        'pipPieCharts',\r\n        'pipChartLegends'\r\n    ]);\r\n\r\n})();\r\n\r\n","(function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc module\r\n     * @name pipLegends\r\n     *\r\n     * @description\r\n     * Legend of charts\r\n     */\r\n    angular.module('pipChartLegends', [])\r\n        .directive('pipChartLegend', pipChartLegend);\r\n\r\n    function pipChartLegend() {\r\n        return {\r\n            restrict: 'E',\r\n            scope: {\r\n                series: '=pipSeries',\r\n                interactive: '=pipInteractive'\r\n            },\r\n            templateUrl: 'legend/interactive_legend.html',\r\n            controller: function ($element, $scope, $timeout, $mdColorPalette) {\r\n                var colors = _.map($mdColorPalette, function (palette) {\r\n                    return palette[500].hex;\r\n                });\r\n\r\n                function colorCheckboxes() {\r\n                    var checkboxContainers = $($element).find('md-checkbox .md-container');\r\n                    \r\n                    checkboxContainers.each(function (index, item) {\r\n                        $(item)\r\n                            .css('color', $scope.series[index].color || colors[index])\r\n                            .find('.md-icon')\r\n                            .css('background-color', $scope.series[index].color || colors[index]);\r\n                    });\r\n                }\r\n\r\n                function animate() {\r\n                    var legendTitles = $($element).find('.chart-legend-item');\r\n\r\n                    legendTitles.each(function (index, item) {\r\n                        $timeout(function () {\r\n                            $(item).addClass('visible');\r\n                        }, 200 * index);\r\n                    });\r\n                }\r\n                \r\n                function prepareSeries() {\r\n                    $scope.series.forEach(function (item, index) {\r\n                        item.color = item.color || colors[index];\r\n                        item.disabled = item.disabled || false;\r\n                    });   \r\n                }\r\n\r\n                $scope.$watch('series', function () {\r\n                    $timeout(function () {\r\n                        animate();\r\n                        colorCheckboxes();\r\n                    }, 0);\r\n                    prepareSeries();\r\n                }, true);\r\n\r\n                $scope.$watch('interactive', function (newValue, oldValue) {\r\n                    if (newValue == true && newValue != oldValue) {\r\n                        $timeout(colorCheckboxes, 0);\r\n                    }\r\n                });\r\n\r\n                $timeout(function () {\r\n                    animate();\r\n                    colorCheckboxes();\r\n                }, 0);\r\n                prepareSeries();\r\n            }\r\n        };\r\n    }\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc module\r\n     * @name pipLineCharts\r\n     *\r\n     * @description\r\n     * Line chart on top of Rickshaw charts\r\n     */\r\n    angular.module('pipLineCharts', [])\r\n        .directive('pipLineChart', pipLineChart);\r\n\r\n    function pipLineChart() {\r\n        return {\r\n            restrict: 'E',\r\n            scope: {\r\n                series: '=pipSeries',\r\n                showYAxis: '=pipYAxis',\r\n                showXAxis: '=pipXAxis',\r\n                dynamic: '=pipDynamic'\r\n            },\r\n            bindToController: true,\r\n            controllerAs: 'lineChart',\r\n            templateUrl: 'line/line_chart.html',\r\n            controller: function ($element, $scope, $timeout, $interval, $mdColorPalette) {\r\n                var vm        = this;\r\n                var chart     = null;\r\n                var chartElem = null;\r\n                var setZoom = null;\r\n                var updateZoomOptions = null;\r\n                var colors    = _.map($mdColorPalette, function (palette, color) {\r\n                    return color;\r\n                });\r\n\r\n                vm.data = vm.series || [];\r\n                vm.sourceEvents = [];\r\n                \r\n                vm.isVisibleX = function () {\r\n                    return vm.showXAxis == undefined ? true : vm.showXAxis; \r\n                };\r\n\r\n                vm.isVisibleY = function () {\r\n                    return vm.showYAxis == undefined ? true : vm.showYAxis;\r\n                };\r\n\r\n                vm.zoomIn = function () {\r\n                    if (setZoom) {\r\n                        setZoom('in');\r\n                    }\r\n                };\r\n\r\n                vm.zoomOut = function () {\r\n                    if (setZoom) {\r\n                        setZoom('out');\r\n                    }\r\n                };\r\n                \r\n                if (vm.series.length > colors.length) {\r\n                    vm.data = vm.series.slice(0, 9);\r\n                }\r\n\r\n                // Sets colors of items\r\n                generateParameterColor();\r\n\r\n                (<any>d3.scale).paletteColors = function () {\r\n                    return d3.scale.ordinal().range(colors.map(materialColorToRgba));\r\n                };\r\n\r\n                $scope.$watch('lineChart.series', function (updatedSeries) {\r\n                    vm.data = updatedSeries;\r\n\r\n                    generateParameterColor();\r\n\r\n                    if (chart) {\r\n                        chartElem.datum(vm.data).call(chart);\r\n\r\n                        if (updateZoomOptions) updateZoomOptions(vm.data);\r\n                    }\r\n                }, true);\r\n\r\n                /**\r\n                 * Instantiate chart\r\n                 */\r\n                nv.addGraph(function () {\r\n                    chart = nv.models.lineChart()\r\n                        .margin({ top: 20, right: 20, bottom: 30, left: 30 })\r\n                        .x(function (d) {\r\n                            return d.x;\r\n                        })\r\n                        .y(function (d) {\r\n                            return d.value;\r\n                        })\r\n                        .height(270)\r\n                        .useInteractiveGuideline(true)\r\n                        .showXAxis(true)\r\n                        .showYAxis(true)\r\n                        .showLegend(false)\r\n                        .color(function(d) {\r\n                            return d.color || (<any>d3.scale).paletteColors().range();\r\n                        });\r\n\r\n                    chart.tooltip.enabled(false);\r\n                    chart.noData('No data for this moment...');\r\n\r\n                    chart.yAxis\r\n                        .tickFormat(function (d) {\r\n                            return d / 1000 + 'k';\r\n                        });\r\n\r\n                    chart.xAxis\r\n                        .tickFormat(function (d) {\r\n                            return d.toFixed(2);\r\n                        });\r\n\r\n                    chartElem = d3.select($element.get(0)).select('.line-chart svg');\r\n                    chartElem.datum(vm.data).style('height', 270).call(chart);\r\n\r\n                    if (vm.dynamic) {\r\n                        addZoom(chart, chartElem);\r\n                    }\r\n\r\n                    nv.utils.windowResize(chart.update);\r\n\r\n                    return chart;\r\n                });\r\n\r\n                function updateScroll(domains, boundary) {\r\n                    var bDiff = boundary[1] - boundary[0],\r\n                        domDiff = domains[1] - domains[0],\r\n                        isEqual = (domains[1] - domains[0])/bDiff === 1;\r\n\r\n                    $($element[0]).find('.visual-scroll')\r\n                        .css('opacity', function () {\r\n                            return isEqual ? 0 : 1;\r\n                        });\r\n\r\n                    if (isEqual) return;\r\n                    \r\n                    $($element[0]).find('.scrolled-block')\r\n                        .css('left', function () {\r\n                            return domains[0]/bDiff * 100 + '%';\r\n                        })\r\n                        .css('width', function () {\r\n                            return domDiff/bDiff * 100 + '%';\r\n                        });\r\n                }\r\n\r\n                function addZoom(chart, svg) {\r\n                    // scaleExtent\r\n                    var scaleExtent = 4;\r\n\r\n                    // parameters\r\n                    var yAxis       = null;\r\n                    var xAxis       = null;\r\n                    var xDomain     = null;\r\n                    var yDomain     = null;\r\n                    var redraw      = null;\r\n                    var svg         = svg;\r\n\r\n                    // scales\r\n                    var xScale = null;\r\n                    var yScale = null;\r\n\r\n                    // min/max boundaries\r\n                    var x_boundary = null;\r\n                    var y_boundary = null;\r\n\r\n                    // create d3 zoom handler\r\n                    var d3zoom = d3.behavior.zoom();\r\n                    var prevXDomain = null;\r\n                    var prevScale = null;\r\n                    var prevTranslate = null;\r\n\r\n                    setData(chart);\r\n\r\n                    function setData(newChart) {\r\n                        // parameters\r\n                        yAxis       = newChart.yAxis;\r\n                        xAxis       = newChart.xAxis;\r\n                        xDomain     = newChart.xDomain || xAxis.scale().domain;\r\n                        yDomain     = newChart.yDomain || yAxis.scale().domain;\r\n                        redraw      = newChart.update;\r\n\r\n                        // scales\r\n                        xScale = xAxis.scale();\r\n                        yScale = yAxis.scale();\r\n\r\n                        // min/max boundaries\r\n                        x_boundary = xAxis.scale().domain().slice();\r\n                        y_boundary = yAxis.scale().domain().slice();\r\n\r\n                        // create d3 zoom handler\r\n                        prevXDomain = x_boundary;\r\n                        prevScale = d3zoom.scale();\r\n                        prevTranslate = d3zoom.translate();\r\n\r\n                        // ensure nice axis\r\n                        xScale.nice();\r\n                        yScale.nice();\r\n                    }\r\n\r\n                    // fix domain\r\n                    function fixDomain(domain, boundary, scale, translate) {\r\n                        if (domain[0] < boundary[0]) {\r\n                            domain[0] = boundary[0];\r\n                            if (prevXDomain[0] !== boundary[0] || scale !== prevScale) {\r\n                                domain[1] += (boundary[0] - domain[0]);\r\n                            } else {\r\n                                domain[1] = prevXDomain[1];\r\n                                translate = _.clone(prevTranslate);\r\n                            }\r\n\r\n                        }\r\n                        if (domain[1] > boundary[1]) {\r\n                            domain[1] = boundary[1];\r\n                            if (prevXDomain[1] !== boundary[1] || scale !== prevScale) {\r\n                                domain[0] -= (domain[1] - boundary[1]);\r\n                            } else {\r\n                                domain[0] = prevXDomain[0];\r\n                                translate = _.clone(prevTranslate);\r\n                            }\r\n                        }\r\n\r\n                        d3zoom.translate(translate);\r\n                        prevXDomain = _.clone(domain);\r\n                        prevScale = _.clone(scale);\r\n                        prevTranslate = _.clone(translate);\r\n                        return domain;\r\n                    }\r\n\r\n                    function updateChart() {\r\n                        d3zoom.scale(1);\r\n                        d3zoom.translate([0,0]);\r\n                        xScale.domain(x_boundary);\r\n                        d3zoom.x(xScale).y(yScale);\r\n                        svg.call(d3zoom);\r\n                    }\r\n\r\n                    // zoom event handler\r\n                    function zoomed() {\r\n                        // Switch off vertical zooming temporary\r\n                        // yDomain(yScale.domain());\r\n\r\n                        if ((<any>d3.event).scale === 1) {\r\n                            unzoomed();\r\n                            updateChart();\r\n                        } else {\r\n                            xDomain(fixDomain(xScale.domain(), x_boundary, (<any>d3.event).scale, (<any>d3.event).translate));\r\n                            redraw();\r\n                        }\r\n\r\n                        updateScroll(xScale.domain(), x_boundary);\r\n                    }\r\n\r\n                    //\r\n                    setZoom = function(which) {\r\n                        var center0 = [svg[0][0].getBBox().width / 2, svg[0][0].getBBox().height / 2];\r\n                        var translate0 = d3zoom.translate(), coordinates0 = coordinates(center0);\r\n\r\n                        if (which === 'in') {\r\n                            if (prevScale < scaleExtent) d3zoom.scale(prevScale + 0.2);\r\n                        } else {\r\n                            if (prevScale > 1) d3zoom.scale(prevScale - 0.2);\r\n                        }\r\n\r\n                        var center1 = point(coordinates0);\r\n                        d3zoom.translate([translate0[0] + center0[0] - center1[0], translate0[1] + center0[1] - center1[1]]);\r\n\r\n                        d3zoom.event(svg);\r\n                    };\r\n\r\n                    function step(which) {\r\n                        var translate = d3zoom.translate();\r\n\r\n                        if (which === 'right') {\r\n                            translate[0] -= 20;\r\n                        } else {\r\n                            translate[0] += 20;\r\n                        }\r\n\r\n                        d3zoom.translate(translate);\r\n                        d3zoom.event(svg);\r\n                    }\r\n\r\n                    function coordinates(point) {\r\n                        var scale = d3zoom.scale(), translate = d3zoom.translate();\r\n                        return [(point[0] - translate[0]) / scale, (point[1] - translate[1]) / scale];\r\n                    }\r\n\r\n                    function point(coordinates) {\r\n                        var scale = d3zoom.scale(), translate = d3zoom.translate();\r\n                        return [coordinates[0] * scale + translate[0], coordinates[1] * scale + translate[1]];\r\n                    }\r\n\r\n                    function keypress() {\r\n                        switch((<any>d3.event).keyCode) {\r\n                            case 39: step('right'); break;\r\n                            case 37: step('left'); break;\r\n                            case 107: setZoom('in'); break;\r\n                            case 109: setZoom('out');\r\n                        }\r\n                    }\r\n\r\n                    // zoom event handler\r\n                    function unzoomed() {\r\n                        xDomain(x_boundary);\r\n                        redraw();\r\n                        d3zoom.scale(1);\r\n                        d3zoom.translate([0,0]);\r\n                        prevScale = 1;\r\n                        prevTranslate = [0,0];\r\n                    }\r\n\r\n                    // initialize wrapper\r\n                    d3zoom.x(xScale)\r\n                        .y(yScale)\r\n                        .scaleExtent([1, scaleExtent])\r\n                        .on('zoom', zoomed);\r\n\r\n                    // add handler\r\n                    svg.call(d3zoom).on('dblclick.zoom', unzoomed);\r\n                    $($element.get(0)).addClass('dynamic');\r\n\r\n                    // add keyboard handlers\r\n                    svg\r\n                        .attr('focusable', false)\r\n                        .style('outline', 'none')\r\n                        .on('keydown', keypress)\r\n                        .on('focus', function () {});\r\n\r\n                    var getXMinMax = function(data) {\r\n                        var maxVal, minVal = null;\r\n\r\n                        for(var i=0;i<data.length;i++) {\r\n                            if (!data[i].disabled) {\r\n                                var tempMinVal = d3.max(data[i].values, function(d: any) { return d.x;} );\r\n                                var tempMaxVal = d3.min(data[i].values, function(d: any) { return d.x;} );\r\n                                minVal = (!minVal || tempMinVal < minVal) ? tempMinVal : minVal;\r\n                                maxVal = (!maxVal || tempMaxVal > maxVal) ? tempMaxVal : maxVal;\r\n                            }\r\n                        }\r\n                        return [maxVal, minVal];\r\n                    };\r\n\r\n                    updateZoomOptions = function(data) {\r\n                        yAxis = chart.yAxis;\r\n                        xAxis = chart.xAxis;\r\n\r\n                        xScale = xAxis.scale();\r\n                        yScale = yAxis.scale();\r\n\r\n                        x_boundary = getXMinMax(data);\r\n\r\n                        if (d3zoom.scale() === 1) {\r\n                            d3zoom.x(xScale).y(yScale);\r\n                            svg.call(d3zoom);\r\n                            d3zoom.event(svg);\r\n                        }\r\n\r\n                        updateScroll(xScale.domain(), x_boundary);\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Converts palette color name into RGBA color representation.\r\n                 * Should by replaced by palette for charts.\r\n                 *\r\n                 * @param {string} color    Name of color from AM palette\r\n                 * @returns {string} RGBa format\r\n                 */\r\n                function materialColorToRgba(color) {\r\n                    return 'rgba(' + $mdColorPalette[color][500].value[0] + ','\r\n                        + $mdColorPalette[color][500].value[1] + ','\r\n                        + $mdColorPalette[color][500].value[2] + ','\r\n                        + ($mdColorPalette[color][500].value[3] || 1) + ')';\r\n                }\r\n\r\n                /**\r\n                 * Helpful method\r\n                 * @private\r\n                 */\r\n                function generateParameterColor() {\r\n                    vm.data.forEach(function (item, index) {\r\n                        item.color = item.color || materialColorToRgba(colors[index]);\r\n                    });\r\n                }\r\n            }\r\n        };\r\n    }\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @ngdoc module\r\n     * @name pipPieCharts\r\n     *\r\n     * @description\r\n     * Line chart on top of Rickshaw charts\r\n     */\r\n    angular.module('pipPieCharts', [])\r\n        .directive('pipPieChart', pipPieChart);\r\n\r\n    function pipPieChart() {\r\n        return {\r\n            restrict: 'E',\r\n            scope: {\r\n                series: '=pipSeries',\r\n                donut: '=pipDonut',\r\n                legend: '=pipShowLegend',\r\n                total: '=pipShowTotal',\r\n                size: '=pipPieSize'\r\n            },\r\n            bindToController: true,\r\n            controllerAs: 'pieChart',\r\n            templateUrl: 'pie/pie_chart.html',\r\n            controller: function ($element, $scope, $timeout, $interval, $mdColorPalette) {\r\n                var vm               = this;\r\n                var chart            = null;\r\n                var titleElem        = null;\r\n                var chartElem        = null;\r\n                var colors           = _.map($mdColorPalette, function (palette, color) {\r\n                    return color;\r\n                });\r\n                var resizeTitleLabel = resizeTitleLabelUnwrap;\r\n\r\n                vm.data = vm.data || [];\r\n\r\n                vm.showLegend = function () {\r\n                    return vm.legend !== undefined ? vm.legend: true;\r\n                };\r\n\r\n                if (vm.series.length > colors.length) {\r\n                    vm.data = vm.series.slice(0, 9);\r\n                }\r\n\r\n                $scope.$watch('pieChart.series', function (newVal) {\r\n                    vm.data = newVal;\r\n\r\n                    generateParameterColor();\r\n\r\n                    if (chart) {\r\n                        chartElem.datum(vm.data).call(chart);\r\n                        $timeout(resizeTitleLabel);\r\n                    }\r\n                }, true);\r\n\r\n                // Sets colors of items\r\n                generateParameterColor();\r\n\r\n                (<any>d3.scale).paletteColors = function () {\r\n                    return d3.scale.ordinal().range(colors.map(materialColorToRgba));\r\n                };\r\n\r\n                /**\r\n                 * Instantiate chart\r\n                 */\r\n                nv.addGraph(function () {\r\n                    chart = nv.models.pieChart()\r\n                        .margin({ top: 0, right: 0, bottom: 0, left: 0 })\r\n                        .x(function (d) {\r\n                            return vm.donut ? d.value : null;\r\n                        })\r\n                        .y(function (d) {\r\n                            return d.value;\r\n                        })\r\n                        .height(vm.size || 250)\r\n                        .width(vm.size || 250)\r\n                        .showLabels(true)\r\n                        .labelThreshold(.001)\r\n                        .growOnHover(false)\r\n                        .donut(vm.donut)\r\n                        .donutRatio(0.5)\r\n                        .color(function(d) {\r\n                            return d.color || (<any>d3.scale).paletteColors().range();\r\n                        });\r\n\r\n                    chart.tooltip.enabled(false);\r\n                    chart.noData('No data for this moment...');\r\n                    chart.showLegend(false);\r\n\r\n                    chartElem = d3.select($element.get(0))\r\n                        .select('.pie-chart svg')\r\n                        .attr('height', vm.size || 250)\r\n                        .attr('width', vm.size || 250)\r\n                        .style('opacity', 0)\r\n                        .datum(vm.data)\r\n                        .call(chart);\r\n\r\n                    nv.utils.windowResize(function () {\r\n                        chart.update();\r\n                        $timeout(resizeTitleLabel);\r\n                    });\r\n\r\n                    return chart;\r\n                }, function () {\r\n                    $timeout(function () {\r\n                        var svgElem  = d3.select($element.get(0)).select('.pie-chart svg')[0][0];\r\n                        renderTotalLabel(svgElem);\r\n                        d3.select(svgElem)\r\n                            .transition()\r\n                            .duration(1000)\r\n                            .style('opacity', 1);\r\n                        \r\n                        $timeout(resizeTitleLabelUnwrap, 800);\r\n                    });\r\n                });\r\n\r\n                function renderTotalLabel(svgElem) {\r\n                    if (!vm.total && !vm.donut) return;\r\n\r\n                    var totalVal = vm.data.reduce(function (sum, curr) {\r\n                        return sum + curr.value;\r\n                    }, 0);\r\n                    \r\n                    d3.select(svgElem)\r\n                        .select('.nv-pie:not(.nvd3)')\r\n                        .append('text')\r\n                        .classed('label-total', true)\r\n                        .attr('text-anchor', 'middle')\r\n                        .style('dominant-baseline', 'central')\r\n                        .text(totalVal);\r\n\r\n                    titleElem = d3.select($element.find('text.label-total').get(0)).style('opacity', 0);\r\n                }\r\n\r\n                function resizeTitleLabelUnwrap() {\r\n                    if (!vm.total && !vm.donut) return;\r\n\r\n                    var boxSize = vm.donut ? $element.find('.nv-pieLabels').get(0).getBBox()\r\n                        : $element.find('.nvd3.nv-pieChart').get(0).getBBox();\r\n\r\n                    if (!boxSize.width || !boxSize.height) {\r\n                        return;\r\n                    }\r\n\r\n                    titleElem.style('font-size', ~~boxSize.width / (vm.donut ? 2:2.5)).style('opacity', 1);\r\n                }\r\n\r\n                /**\r\n                 * Converts palette color name into RGBA color representation.\r\n                 * Should by replaced by palette for charts.\r\n                 *\r\n                 * @param {string} color    Name of color from AM palette\r\n                 * @returns {string} RGBa format\r\n                 */\r\n                function materialColorToRgba(color) {\r\n                    return 'rgba(' + $mdColorPalette[color][500].value[0] + ','\r\n                        + $mdColorPalette[color][500].value[1] + ','\r\n                        + $mdColorPalette[color][500].value[2] + ','\r\n                        + ($mdColorPalette[color][500].value[3] || 1) + ')';\r\n                }\r\n\r\n\r\n                /**\r\n                 * Helpful method\r\n                 * @private\r\n                 */\r\n                function generateParameterColor() {\r\n                    vm.data.forEach(function (item, index) {\r\n                        item.color = item.color || materialColorToRgba(colors[index]);\r\n                    });\r\n                }\r\n            }\r\n        };\r\n    }\r\n})();","(function(module) {\ntry {\n  module = angular.module('pipCharts.Templates');\n} catch (e) {\n  module = angular.module('pipCharts.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('bar/bar_chart.html',\n    '<div class=\"bar-chart flex-auto layout-column\">\\n' +\n    '    <svg class=\"flex-auto\"></svg>\\n' +\n    '</div>\\n' +\n    '\\n' +\n    '<pip-chart-legend pip-series=\"barChart.legend\" pip-interactive=\"false\"></pip-chart-legend>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipCharts.Templates');\n} catch (e) {\n  module = angular.module('pipCharts.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('legend/interactive_legend.html',\n    '<div >\\n' +\n    '    <div class=\"chart-legend-item\" ng-repeat=\"item in series\">\\n' +\n    '        <md-checkbox class=\"lp16 m8\"\\n' +\n    '                     ng-model=\"item.disabled\"\\n' +\n    '                     ng-true-value=\"false\"\\n' +\n    '                     ng-false-value=\"true\"\\n' +\n    '                     ng-if=\"interactive\"\\n' +\n    '                     aria-label=\"{{ item.label }}\">\\n' +\n    '            <p class=\"legend-item-value\"\\n' +\n    '               ng-style=\"{\\'background-color\\': item.color}\">\\n' +\n    '                {{ item.value }}\\n' +\n    '            </p>\\n' +\n    '            <p class=\"legend-item-label\">{{:: item.label || item.key }}</p>\\n' +\n    '        </md-checkbox>\\n' +\n    '\\n' +\n    '        <div ng-if=\"!interactive\">\\n' +\n    '            <span class=\"bullet\" ng-style=\"{\\'background-color\\': item.color}\"></span>\\n' +\n    '            <span>{{:: item.label || item.key}}</span>\\n' +\n    '        </div>\\n' +\n    '    </div>\\n' +\n    '</div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipCharts.Templates');\n} catch (e) {\n  module = angular.module('pipCharts.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('line/line_chart.html',\n    '<div class=\"line-chart\" flex=\"auto\" layout=\"column\">\\n' +\n    '    <svg class=\"flex-auto\" ng-class=\"{\\'visible-x-axis\\': lineChart.isVisibleX(), \\'visible-y-axis\\': lineChart.isVisibleY()}\">\\n' +\n    '    </svg>\\n' +\n    '    <div class=\"visual-scroll\">\\n' +\n    '        <div class=\"scrolled-block\"></div>\\n' +\n    '    </div>\\n' +\n    '    <md-button class=\"md-fab md-mini minus-button\" ng-click=\"lineChart.zoomOut()\">\\n' +\n    '        <md-icon md-svg-icon=\"icons:minus-circle\"></md-icon>\\n' +\n    '    </md-button>\\n' +\n    '    <md-button class=\"md-fab md-mini plus-button\" ng-click=\"lineChart.zoomIn()\">\\n' +\n    '        <md-icon md-svg-icon=\"icons:plus-circle\"></md-icon>\\n' +\n    '    </md-button>\\n' +\n    '</div>\\n' +\n    '\\n' +\n    '<pip-chart-legend pip-series=\"lineChart.data\" pip-interactive=\"false\"></pip-chart-legend>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipCharts.Templates');\n} catch (e) {\n  module = angular.module('pipCharts.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('pie/pie_chart.html',\n    '<div class=\"pie-chart\" class=\"layout-column flex-auto\" ng-class=\"{\\'circle\\': !pieChart.donut}\">\\n' +\n    '    <svg class=\"flex-auto\"></svg>\\n' +\n    '</div>\\n' +\n    '\\n' +\n    '<pip-chart-legend pip-series=\"pieChart.data\" pip-interactive=\"false\" ng-if=\"pieChart.showLegend()\"></pip-chart-legend>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-charts-html.js.map\n"]}